{"page_content": "REL04-BP03 Do constant work - Reliability PillarREL04-BP03 Do constant work - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesREL04-BP03 Do constant work\n    Systems can fail when there are large, rapid changes in load. For\n    example, if your workload is doing a health check that monitors the\n    health of thousands of servers, it should send the same size payload\n    (a full snapshot of the current state) each time. Whether no servers\n    are failing, or all of them, the health check system is doing\n    constant work with no large, rapid changes.\n  \n    For example, if the health check system is monitoring 100,000\n    servers, the load on it is nominal under the normally light server\n    failure rate. However, if a major event makes half of those servers\n    unhealthy, then the health check system would be overwhelmed trying\n    to update notification systems and communicate state to its clients.\n    So instead the health check system should send the full snapshot of\n    the current state each time. 100,000 server health states, each\n    represented by a bit, would only be a 12.5-KB payload. Whether no\n    servers are failing, or all of them are, the health check system is\n    doing constant work, and large, rapid changes are not a threat to\n    the system stability. This is actually how Amazon Route\u00c2\u00a053 handles\n    health checks for endpoints (such as IP addresses) to determine how\n    end users are routed to them.\n  \nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\n\n \n        Do constant work so that systems do not fail when there are large,\n        rapid changes in load.\n      \n        Implement loosely coupled dependencies. Dependencies such as\n        queuing systems, streaming systems, workflows, and load balancers\n        are loosely coupled. Loose coupling helps isolate behavior of a\n        component from other components that depend on it, increasing\n        resiliency and agility.\n      \n\n\n\nThe\n                Amazon Builders' Library: Reliability, constant work, and a good cup of\n                coffee\n\n\n\nAWS re:Invent 2018: Close Loops and\n                Opening Minds: How to Take Control of Systems, Big and Small ARC337 (includes\n                constant work)\n\n\n\n For the example of a health check system monitoring 100,000 servers, engineer\n                  workloads so that payload sizes remain constant regardless of number of successes\n                  or failures. \n\n\nResources\n\nRelated documents:\n\n\n\n\nAmazon EC2: Ensuring Idempotency\n\n\n\nThe\n          Amazon Builders' Library: Challenges with distributed\n          systems\n\n\n\nThe\n          Amazon Builders' Library: Reliability, constant work, and a\n          good cup of coffee\n\n\n\nRelated videos:\n\n\n\n\nAWS New York\n          Summit 2019: Intro to Event-driven Architectures and Amazon EventBridge (MAD205)\n\n\n\nAWS           re:Invent 2018: Close Loops and Opening Minds: How to Take\n          Control of Systems, Big and Small ARC337 (includes constant\n          work)\n\n\n\nAWS re:Invent\n          2018: Close Loops and Opening Minds: How to Take Control of\n          Systems, Big and Small ARC337 (includes loose coupling, constant work, static stability)\n\n\n\nAWS re:Invent\n          2019: Moving to event-driven architectures (SVS308)\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL04-BP02 Implement loosely coupled dependenciesREL04-BP04 Make all responses idempotentDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_prevent_interaction_failure_constant_work.html", "title": "REL04-BP03 Do constant work - Reliability Pillar", "description": "Systems can fail when there are large, rapid changes in load. For example, if your workload is doing a health check that monitors the health of thousands of servers, it should send the same size payload (a full snapshot of the current state) each time. Whether no servers are failing, or all of them, the health check system is doing constant work with no large, rapid changes.", "language": "en-US"}}