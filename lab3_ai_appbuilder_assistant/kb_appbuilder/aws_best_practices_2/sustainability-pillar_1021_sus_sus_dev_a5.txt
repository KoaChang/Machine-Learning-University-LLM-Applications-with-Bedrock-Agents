{"page_content": "SUS06-BP04 Use managed device farms for testing - Sustainability PillarSUS06-BP04 Use managed device farms for testing - Sustainability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesSUS06-BP04 Use managed device farms for testingUse managed device farms to efficiently test a new feature on a representative set of hardware.\nCommon anti-patterns:\n\n\n\n        You manually test and deploy your application on individual physical devices.\n      \n\n\n        You do not use app testing service to test and interact with your apps (for example, Android, iOS, and web apps) on real, physical devices.\n      \n\nBenefits of establishing this best practice: Using managed device farms for testing cloud-enabled applications provides a number of benefits:\n  \n\n\n        They include more efficient features to test application on wide range of devices.\n      \n\n\n        They eliminate the need for in-house infrastructure for testing.\n      \n\n\n        They offer diverse device types, including older and less popular hardware, which eliminates the need for unnecessary device upgrades.\n      \n\nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\nUsing Managed device farms can help you to streamline the testing process for new features on a representative set of hardware. Managed device farms offer diverse device types including older, less popular hardware, and avoid customer sustainability impact from unnecessary device upgrades.\n\nImplementation steps\n\n\n\n\n          Define your testing requirements and plan (like test type, operating systems, and test schedule).\n        \n\n\n\n              You can use Amazon CloudWatch RUM to collect and analyze client-side data and shape your testing plan.\n            \n\n\n\n          Select the managed device farm that can support your testing requirements. For example, you can use AWS Device Farm to test and understand the impact of your changes on a representative set of hardware.\n        \n\n\n          Use continuous integration/continuous deployment (CI/CD) to schedule and run your tests. \n        \n\n\n\n              Integrating AWS Device Farm with your CI/CD pipeline to run cross-browser Selenium tests\n            \n\n \n              Building and testing iOS and iPadOS apps with AWS DevOps and mobile services\n            \n\n\n\n          Continually review your testing results and make necessary improvements.\n        \n\nResources\n\nRelated documents:\n\n\n\nAWS Device Farm device list\n        \n\n\n          Viewing the CloudWatch RUM dashboard\n        \n\n\nRelated examples:\n\n\n\nAWS Device Farm Sample App for Android\n        \n\nAWS Device Farm Sample App for iOS\n        \n\n\n          Appium Web tests for AWS Device Farm\n\n\nRelated videos:\n\n\n\n\n          Optimize applications through end user insights with Amazon CloudWatch RUM\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS06-BP03 Increase utilization of build environmentsConclusionDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/sustainability-pillar/sus_sus_dev_a5.html", "title": "SUS06-BP04 Use managed device farms for testing - Sustainability Pillar", "description": "Use managed device farms to efficiently test a new feature on a representative set of hardware.", "language": "en-US"}}