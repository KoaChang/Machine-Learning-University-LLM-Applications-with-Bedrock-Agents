{"page_content": "COST05-BP03 Perform a thorough analysis of each component - Cost Optimization PillarCOST05-BP03 Perform a thorough analysis of each component - Cost Optimization PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesCOST05-BP03 Perform a thorough analysis of each\n  component\n    Look at overall cost to the organization of each component. \n    Calculate the total cost of ownership by factoring in cost \n    of operations and management, especially when using managed \n    services by cloud provider. The review effort should reflect \n    potential benefit (for example, time spent analyzing is \n    proportional to component cost).\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Consider the time savings that will allow your team to focus on retiring technical \n      debt, innovation, value-adding features and building what differentiates the business. \n      For example, you might need to lift and shift (also known as rehost) your databases \n      from your on-premises environment to the cloud as rapidly as possible and optimize later. \n      It is worth exploring the possible savings attained by using managed services on AWS \n      that may remove or reduce license costs. Managed services on AWS remove the operational \n      and administrative burden of maintaining a service, such as patching or upgrading the \n      OS, and allow you to focus on innovation and business. \n    \n\n      Since managed services operate at cloud scale, they can offer a lower cost per transaction \n      or service. You can make potential optimizations in order to achieve some tangible benefit, \n      without changing the core architecture of the application. For example, you may be looking \n      to reduce the amount of time you spend managing database instances by migrating to a \n      database-as-a-service platform like Amazon Relational Database Service (Amazon RDS) or \n      migrating your application to a fully managed platform like AWS Elastic Beanstalk.\n    \nUsually, managed services have attributes that you can set to ensure sufficient capacity. You\n      must set and monitor these attributes so that your excess capacity is kept to a minimum and\n      performance is maximized. You can modify the attributes of AWS Managed Services using\n      the AWS Management Console or AWS APIs and SDKs to align resource needs with changing\n      demand. For example, you can increase or decrease the number of nodes on an Amazon EMR cluster (or an Amazon Redshift cluster) to scale out or in.\nYou can also pack multiple instances on an AWS resource to activate higher density usage.\n      For example, you can provision multiple small databases on a single Amazon Relational Database Service (Amazon RDS) database instance. As usage grows, you can migrate one of the\n      databases to a dedicated Amazon RDS database instance using a snapshot and restore process.\nWhen provisioning workloads on managed services, you must understand the requirements\n      of adjusting the service capacity. These requirements are typically time, effort, and any\n      impact to normal workload operation. The provisioned resource must allow time for any\n      changes to occur, provision the required overhead to allow this. The ongoing effort required\n      to modify services can be reduced to virtually zero by using APIs and SDKs that are\n      integrated with system and monitoring tools, such as Amazon CloudWatch.\nAmazon RDS, Amazon Redshift, and Amazon ElastiCache provide a managed database\n      service. Amazon Athena, Amazon EMR, and Amazon OpenSearch Service provide a managed\n      analytics service.\nAMS is a service that\n      operates AWS infrastructure on behalf of enterprise customers and partners. It provides a\n      secure and compliant environment that you can deploy your workloads onto. AMS uses\n      enterprise cloud operating models with automation to allow you to meet your organization\n      requirements, move into the cloud faster, and reduce your on-going management costs.\nImplementation steps\n\n\n Perform a thorough analysis: Using the component\n          list, work through each component from the highest priority to the lowest priority. For\n          the higher priority and more costly components, perform additional analysis and assess all\n          available options and their long term impact. For lower priority components, assess if\n          changes in usage would change the priority of the component, and then perform an analysis\n          of appropriate effort. \n\n\nCompare managed and unmanaged resources: Consider the \n          operational cost for the resources you manage and compare them with AWS managed resources. \n          For example, review your databases running on Amazon EC2 instances and compare with Amazon RDS options \n          (an AWS managed service) or Amazon EMR compared to running Apache Spark on Amazon EC2. When moving from a \n          self-managed workload to a AWS fully managed workload, research your options carefully. The \n          three most important factors to consider are the type of managed service you want to use, \n          the process you will use to migrate your data and understand the \n          AWS shared responsibility model.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nAWS           Total Cost of Ownership (TCO) Calculator\n\n\n\nAmazon S3 storage classes\n\n\n\nAWS Cloud\n          products\n\n\nAWS Shared Responsibility Model\n        \n\n\nRelated videos:\n\n\n\n\n          Why move to a managed database?\n        \n\n\n          What is Amazon EMR and how can I use it for processing data?\n        \n\n\nRelated examples:\n\n\n\n\n          Why to move to a managed database\n        \n\n\n          Consolidate data from identical SQL Server databases into a single Amazon RDS for SQL Server database using AWS DMS\n\n\n          Deliver data at scale to Amazon Managed Streaming for Apache Kafka (Amazon MSK)\n        \n\n\n          Migrate an ASP.NET web application to AWS Elastic Beanstalk\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsCOST05-BP02 Analyze all components of the workloadCOST05-BP04 Select software with cost-effective\n  licensingDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/cost-optimization-pillar/cost_select_service_thorough_analysis.html", "title": "COST05-BP03 Perform a thorough analysis of each component - Cost Optimization Pillar", "description": "Look at overall cost to the organization of each component. Calculate the total cost of ownership by factoring in cost of operations and management, especially when using managed services by cloud provider. The review effort should reflect potential benefit (for example, time spent analyzing is proportional to component cost).", "language": "en-US"}}