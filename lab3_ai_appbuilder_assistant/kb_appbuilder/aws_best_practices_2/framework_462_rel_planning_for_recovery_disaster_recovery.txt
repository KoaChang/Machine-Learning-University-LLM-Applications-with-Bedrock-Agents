{"page_content": "REL13-BP02 Use defined recovery strategies to meet the recovery objectives - AWS Well-Architected FrameworkREL13-BP02 Use defined recovery strategies to meet the recovery objectives - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL13-BP02 Use defined recovery strategies to meet the recovery\n  objectivesDefine a disaster recovery (DR) strategy that meets your workload's recovery objectives. Choose a strategy such as backup and restore, standby (active/passive), or active/active.\nDesired outcome: For each workload, there is a defined and implemented DR strategy\n    that allows the workload to achieve DR objectives. DR strategies\n    between workloads make use of reusable patterns (such as the\n    strategies previously described),\n  \nCommon anti-patterns:\n\n\n\n        Implementing inconsistent recovery procedures for workloads with\n        similar DR objectives.\n      \n\n\n        Leaving the DR strategy to be implemented ad-hoc when a disaster\n        occurs.\n      \n\n\n        Having no plan for disaster recovery.\n      \n\n\n        Dependency on control plane operations during recovery.\n      \n\nBenefits of establishing this best\n    practice:\n\n\n\n        Using defined recovery strategies allows you to use common\n        tooling and test procedures.\n      \n\n\n        Using defined recovery strategies improves knowledge sharing between teams and implementation of DR on\n        the workloads they own.\n      \n\nLevel of risk exposed if this best practice\n      is not established: High. Without a planned, implemented, and tested DR strategy, you are\n    unlikely to achieve recovery objectives in the event of a\n    disaster.\n  \nImplementation guidance\n\n      A DR strategy relies on the ability to stand up your workload in a\n      recovery site if your primary location becomes unable to run the\n      workload. The most common recovery objectives are RTO and RPO, as\n      discussed in REL13-BP01 Define recovery objectives for downtime and data\n  loss.\n    \n\n      A DR strategy across multiple Availability Zones (AZs) within a\n      single AWS Region, can provide mitigation against disaster events\n      like fires, floods, and major power outages. If it is a requirement\n      to implement protection against an unlikely event that prevents your\n      workload from being able to run in a given AWS Region, you can use a\n      DR strategy that uses multiple Regions.\n    \n\n      When architecting a DR strategy across multiple Regions, you should\n      choose one of the following strategies. They are listed in\n      increasing order of cost and complexity, and decreasing order of RTO\n      and RPO.\u00a0Recovery Region\u00a0refers to an AWS Region other than the primary one used for your workload.\n    \n\n\nFigure 17: Disaster recovery (DR) strategies\n\n\u00a0\n\n\n\nBackup and restore\u00a0(RPO in\n          hours, RTO in 24 hours or less): Back up your data and\n          applications into the recovery Region. Using automated or\n          continuous backups will permit point in time recovery (PITR), which can\n          lower RPO to as low as 5 minutes in some cases. In the event of\n          a disaster, you will deploy your infrastructure (using\n          infrastructure as code to reduce RTO), deploy your code, and\n          restore the backed-up data to recover from a disaster in the\n          recovery Region.\n        \n\n\nPilot light\u00a0(RPO in minutes,\n          RTO in tens of minutes): Provision a copy of your core workload\n          infrastructure in the recovery Region. Replicate your data into\n          the recovery Region and create backups of it there. Resources\n          required to support data replication and backup, such as\n          databases and object storage, are always on. Other elements such\n          as application servers or serverless compute are not deployed,\n          but can be created when needed with the necessary configuration\n          and application code.\n        \n\n\nWarm standby\u00a0(RPO in seconds,\n          RTO in minutes): Maintain a scaled-down but fully functional\n          version of your workload always running in the recovery Region.\n          Business-critical systems are fully duplicated and are always\n          on, but with a scaled down fleet. Data is replicated and live in\n          the recovery Region. When the time comes for recovery, the\n          system is scaled up quickly to handle the production load. The\n          more scaled-up the warm standby is, the lower RTO and control\n          plane reliance will be. When fully scales this is known as\n          hot standby.\n        \n\n\nMulti-Region (multi-site)\n            active-active\u00a0(RPO near zero, RTO potentially zero):\n          Your workload is deployed to, and actively serving traffic from,\n          multiple AWS Regions. This strategy requires you to synchronize\n          data across Regions. Possible conflicts caused by writes to the\n          same record in two different regional replicas must be avoided\n          or handled, which can be complex. Data replication is useful for\n          data synchronization and will protect you against some types of\n          disaster, but it will not protect you against data corruption or\n          destruction unless your solution also includes options for\n          point-in-time recovery.\n        \n\nNote The difference between pilot light and warm standby can sometimes be difficult to\n        understand. Both include an environment in your recovery Region with copies of your primary\n        region assets. The distinction is that pilot light cannot process requests without additional\n        action taken first, while warm standby can handle traffic (at reduced capacity levels)\n        immediately. Pilot light will require you to turn on servers, possibly deploy additional\n        (non-core) infrastructure, and scale up, while warm standby only requires you to scale up\n        (everything is already deployed and running). Choose between these based on your RTO and RPO\n        needs. \n        When cost is a concern, and you wish to achieve a similar RPO and RTO objectives as defined in the warm standby strategy, you could consider cloud native solutions, like AWS Elastic Disaster Recovery, that take the pilot light approach and offer improved RPO and RTO targets. \n      \n\nImplementation steps\n\n\n\n\nDetermine a DR strategy that will\n          satisfy recovery requirements for this workload.\n\n Choosing a DR strategy is a trade-off between reducing downtime and data loss (RTO\n          and RPO) and the cost and complexity of implementing the strategy. You should avoid\n          implementing a strategy that is more stringent than it needs to be, as this incurs\n          unnecessary costs. \n For example, in the following diagram, the business has determined their maximum\n          permissible RTO as well as the limit of what they can spend on their service restoration\n          strategy. Given the business\u2019 objectives, the DR strategies pilot light or warm standby\n          will satisfy both the RTO and the cost criteria. \n\n\n\nFigure 18: Choosing a DR strategy based on RTO and\n              cost\n\n\n To learn more, see Business Continuity Plan (BCP). \n\n\nReview the patterns for how the selected DR strategy can be\n            implemented.\n\n This step is to understand how you will implement the selected strategy. The\n          strategies are explained using AWS Regions as the primary and recovery sites. However,\n          you can also choose to use Availability Zones within a single Region as your DR strategy,\n          which makes use of elements of multiple of these strategies. \n In the following steps, you can apply the strategy to your specific workload. \n\nBackup and restore\u00a0 \n\nBackup and restore is the least complex strategy to implement, but\n          will require more time and effort to restore the workload, leading to higher RTO and RPO.\n          It is a good practice to always make backups of your data, and copy these to another site\n          (such as another AWS Region). \n\n\n\nFigure 19: Backup and restore architecture\n\n\n For more details on this strategy see Disaster Recovery (DR) Architecture on AWS, Part II: Backup and Restore with Rapid\n            Recovery. \n\nPilot light\n\n With the pilot light approach, you replicate your data from your\n          primary Region to your recovery Region. Core resources used for the workload\n          infrastructure are deployed in the recovery Region, however additional resources and any\n          dependencies are still needed to make this a functional stack. For example, in Figure 20,\n          no compute instances are deployed. \n\n\n\nFigure 20: Pilot light architecture\n\n\n For more details on this strategy, see Disaster Recovery (DR) Architecture on AWS, Part III: Pilot Light and Warm\n            Standby. \n\nWarm standby\n\n The\u00a0warm standby\u00a0approach involves ensuring that there is a\n          scaled down, but fully functional, copy of your production environment in another Region.\n          This approach extends the pilot light concept and decreases the time to recovery because\n          your workload is always-on in another Region. If the recovery Region is deployed at full\n          capacity, then this is known as hot standby. \n\n\n\nFigure 21: Warm standby architecture\n\n\n Using warm standby or pilot light requires scaling up resources in the recovery\n          Region. To verify capacity is available when needed, consider the use for capacity reservations for EC2 instances. If using AWS Lambda, then provisioned\n            concurrency can provide runtime environments so that they are prepared to\n          respond immediately to your function's invocations. \n For more details on this strategy, see Disaster Recovery (DR) Architecture on AWS, Part III: Pilot Light and Warm\n            Standby. \n\nMulti-site active/active", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_planning_for_recovery_disaster_recovery.html", "title": "REL13-BP02 Use defined recovery strategies to meet the recovery objectives - AWS Well-Architected Framework", "description": "Define a disaster recovery (DR) strategy that meets your workload's recovery objectives. Choose a strategy such as backup and restore, standby (active/passive), or active/active.", "language": "en-US"}}