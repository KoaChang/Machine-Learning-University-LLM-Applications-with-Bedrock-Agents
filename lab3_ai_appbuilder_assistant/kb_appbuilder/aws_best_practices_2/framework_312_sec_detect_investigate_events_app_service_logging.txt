{"page_content": "SEC04-BP01 Configure service and application logging - AWS Well-Architected FrameworkSEC04-BP01 Configure service and application logging - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSEC04-BP01 Configure service and application loggingRetain security event logs from services and applications. This is a fundamental principle of security for audit, investigations, and operational use cases, and a common security requirement driven by governance, risk, and compliance (GRC) standards, policies, and procedures.\nDesired outcome: An organization should be able to reliably and consistently retrieve security event logs from AWS services and applications in a timely manner when required to fulfill an internal process or obligation, such as a security incident response. Consider centralizing logs for better operational results.\n  \nCommon anti-patterns:\n\n\n\n        Logs are stored in perpetuity or deleted too soon.\n      \n\n\n        Everybody can access logs.\n      \n\n\n        Relying entirely on manual processes for log governance and use.\n      \n\n\n        Storing every single type of log just in case it is needed.\n      \n\n\n        Checking log integrity only when necessary.\n      \n\nBenefits of establishing this best practice: Implement a root cause analysis (RCA) mechanism for security incidents and a source of evidence for your governance, risk, and compliance obligations.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      During a security investigation or other use cases based on your requirements, you need to be able to review relevant logs to record and understand the full scope and timeline of the incident. Logs are also required for alert generation, indicating that certain actions of interest have happened. It is critical to select, turn on, store, and set up querying and retrieval mechanisms and alerting.  \n    \n\nImplementation steps\n\n\n\n\nSelect and use log sources. Ahead of a security investigation, you need to capture relevant logs to retroactively reconstruct activity in an AWS account. Select log sources relevant to your workloads.\n        \n\n          The log source selection criteria should be based on the use cases required by your business. Establish a trail for each AWS account using AWS CloudTrail or an AWS Organizations trail, and configure an Amazon S3 bucket for it.\n        \n\n          AWS CloudTrail is a logging service that tracks API calls made against an AWS account capturing AWS service activity. It\u2019s turned on by default with a 90-day retention of management events that can be retrieved through CloudTrail Event history using the AWS Management Console, the AWS CLI, or an AWS SDK. For longer retention and visibility of data events, create a CloudTrail trail and associate it with an Amazon S3 bucket, and optionally with a Amazon CloudWatch log group. Alternatively, you can create a CloudTrail Lake, which retains CloudTrail logs for up to seven years and provides a SQL-based querying facility\n        \n\n          AWS recommends that customers using a VPC turn on network tra\ufb03c and DNS logs using VPC Flow Logs and Amazon Route\u00a053 resolver query logs, respectively, and streaming them to either an Amazon S3 bucket or a CloudWatch log group. You can create a VPC \ufb02ow log for a VPC, a subnet, or a network interface. For VPC Flow Logs, you can be selective on how and where you use Flow Logs to reduce cost.\n        \n\n          AWS CloudTrail Logs, VPC Flow Logs, and Route\u00a053 resolver query logs are the basic logging sources to support security investigations in AWS. You can also use Amazon Security Lake to collect, normalize, and store this log data in Apache Parquet format and Open Cybersecurity Schema Framework (OCSF), which is ready for querying. Security Lake also supports other AWS logs and logs from third-party sources. \n        \n\n          AWS services can generate logs not captured by the basic log sources, such as Elastic Load Balancing logs, AWS WAF logs, AWS Config recorder logs, Amazon GuardDuty \ufb01ndings, Amazon Elastic Kubernetes Service (Amazon EKS) audit logs, and Amazon EC2 instance operating system and application logs. For a full list of logging and monitoring options, see  Appendix A: Cloud capability de\ufb01nitions  \u2013 Logging and Events of the AWS Security Incident Response Guide.\n        \n\n\nResearch logging capabilities for each AWS service and application:  Each AWS service and application provides you with options for log storage, each of which with its own retention and life-cycle capabilities. The two most common log storage services are Amazon Simple Storage Service (Amazon S3) and Amazon CloudWatch. For long retention periods, it is recommended to use Amazon S3 for its cost effectiveness and flexible lifecycle capabilities. If the primary logging option is Amazon CloudWatch Logs, as an option, you should consider archiving less frequently accessed logs to Amazon S3.\n        \n\n\nSelect log storage: The choice of log storage is generally related to which querying tool you use, retention capabilities, familiarity, and cost. The main options for log storage are an Amazon S3 bucket or a CloudWatch Log group.\n        \n\n          An Amazon S3 bucket provides cost-e\ufb00ective, durable storage with an optional lifecycle policy. Logs stored in Amazon S3 buckets can be queried using services such as Amazon Athena. \n        \n\n          A CloudWatch log group provides durable storage and a built-in query facility through CloudWatch Logs Insights.\n        \n\n\nIdentify appropriate log retention: When you use an Amazon S3 bucket or CloudWatch log group to store logs, you must establish adequate lifecycles for each log source to optimize storage and retrieval costs. Customers generally have between three months to one year of logs readily available for querying, with retention of up to seven years. The choice of availability and retention should align with your security requirements and a composite of statutory, regulatory, and business mandates.\n        \n\n\nUse logging for each AWS service and application with proper retention and lifecycle policies: For each AWS service or application in your organization, look for the specific logging configuration guidance:\n        \n\n\n\n              Configure AWS CloudTrail Trail\n            \n\n\n              Configure VPC Flow Logs\n            \n\n\n              Configure Amazon GuardDuty Finding Export\n            \n\n\n              Configure AWS Config recording\n            \n\n\n              Configure AWS WAF web ACL traffic\n            \n\n\n              Configure AWS Network Firewall network traffic logs\n            \n\n\n              Configure Elastic Load Balancing access logs\n            \n\n\n              Configure Amazon Route\u00a053 resolver query logs\n            \n\n\n              Configure Amazon RDS logs\n            \n\n\n              Configure Amazon EKS Control Plane logs\n            \n\n\n              Configure Amazon CloudWatch agent for Amazon EC2 instances and on-premises servers\n            \n\n\n\nSelect and implement querying mechanisms for logs: For log queries, you can use CloudWatch Logs Insights for data stored in CloudWatch log groups, and Amazon Athena and Amazon OpenSearch Service for data stored in Amazon S3. You can also use third-party querying tools such as a security information and event management (SIEM) service.\n        \n\n          The process for selecting a log querying tool should consider the people, process, and technology aspects of your security operations. Select a tool that ful\ufb01lls operational, business, and security requirements, and is both accessible and maintainable in the long term. Keep in mind that log querying tools work optimally when the number of logs to be scanned is kept within the tool\u2019s limits. It is not uncommon to have multiple querying tools because of cost or technical constraints. \n        \n\n          For example, you might use a third-party security information and event management (SIEM) tool to perform queries for the last 90 days of data, but use Athena to perform queries beyond 90 days because of the log ingestion cost of a SIEM. Regardless of the implementation, verify that your approach minimizes the number of tools required to maximize operational e\ufb03ciency, especially during a security event investigation.\n        \n\n\nUse logs for alerting: AWS provides alerting through several security services:\n        \n\n\n\nAWS Config monitors and records your AWS resource configurations and allows you to automate the evaluation and remediation against desired configurations.\n            \n\n\nAmazon GuardDuty is a threat detection service that continually monitors for malicious activity and unauthorized behavior to protect your AWS accounts and workloads. GuardDuty ingests, aggregates, and analyzes information from sources, such as AWS CloudTrail management and data events, DNS logs, VPC Flow Logs, and Amazon EKS Audit logs. GuardDuty pulls independent data streams directly from CloudTrail, VPC Flow Logs, DNS query logs, and Amazon EKS. You don\u2019t have to manage Amazon S3 bucket policies or modify the way you collect and store logs. It is still recommended to retain these logs for your own investigation and compliance purposes. \n            \n\n\nAWS Security Hub provides a single place that aggregates, organizes, and prioritizes your security alerts or findings from multiple AWS services and optional third-party products to give you a comprehensive view of security alerts and compliance status.\n            \n\n\n          You can also use custom alert generation engines for security alerts not covered by these services or for speci\ufb01c alerts relevant to your environment. For information on building these alerts and detections, see Detection in the AWS Security Incident Response Guide.\n        \n\nResources\n\nRelated best practices:\n\n\n\n\nSEC04-BP02 Analyze logs, findings, and metrics\n  centrally", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_detect_investigate_events_app_service_logging.html", "title": "SEC04-BP01 Configure service and application logging - AWS Well-Architected Framework", "description": "Retain security event logs from services and applications. This is a fundamental principle of security for audit, investigations, and operational use cases, and a common security requirement driven by governance, risk, and compliance (GRC) standards, policies, and procedures.", "language": "en-US"}}