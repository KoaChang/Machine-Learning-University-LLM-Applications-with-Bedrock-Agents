{"page_content": "OPS07-BP03 Use runbooks to perform procedures - Operational Excellence PillarOPS07-BP03 Use runbooks to perform procedures - Operational Excellence PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceImplementation stepsResourcesOPS07-BP03 Use runbooks to perform procedures A runbook is a documented process to achieve a specific\n    outcome. Runbooks consist of a series of steps that someone follows to get something done.\n    Runbooks have been used in operations going back to the early days of aviation. In cloud\n    operations, we use runbooks to reduce risk and achieve desired outcomes. At its simplest, a\n    runbook is a checklist to complete a task. \n    Runbooks are an essential part of operating your workload. From onboarding a \n    new team member to deploying a major release, runbooks are the codified processes \n    that provide consistent outcomes no matter who uses them. Runbooks should be \n    published in a central location and updated as the process evolves, as updating \n    runbooks is a key component of a change management process. They should also \n    include guidance on error handling, tools, permissions, exceptions, and \n    escalations in case a problem occurs.\n  \n    As your organization matures, begin automating runbooks. Start with \n    runbooks that are short and frequently used. Use scripting languages to automate \n    steps or make steps easier to perform. As you automate the first few runbooks, \n    you\u2019ll dedicate time to automating more complex runbooks. Over time, \n    most of your runbooks should be automated in some way. \n  \nDesired outcome: Your team has a collection of \n    step-by-step guides for performing workload tasks. The runbooks contain the desired \n    outcome, necessary tools and permissions, and instructions for error handling. \n    They are stored in a central location and updated frequently. \n  \nCommon anti-patterns:\n\n\n\n        Relying on memory to complete each step of a process.\n      \n\n\n        Manually deploying changes without a checklist.\n      \n\n\n       Different team members performing the same process but with different steps or outcomes.\n     \n\n\n        Letting runbooks drift out of sync with system changes and automation.\n      \n\nBenefits of establishing this best\n    practice:\n\n\n\n        Reducing error rates for manual tasks.\n      \n\n\n        Operations are performed in a consistent manner.\n      \n\n\n        New team members can start performing tasks sooner.\n      \n\n\n        Runbooks can be automated to reduce toil.\n      \n\nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Runbooks can take several forms depending on the maturity level of your organization. \n      At a minimum, they should consist of a step-by-step text document. The desired outcome \n      should be clearly indicated. Clearly document necessary special permissions or tools. \n      Provide detailed guidance on error handling and escalations in case something goes wrong. \n      List the runbook owner and publish it in a central location. Once your runbook is \n      documented, validate it by having someone else on your team run it. As procedures evolve, \n      update your runbooks in accordance with your change management process.\n    \n Your text runbooks should be automated as your organization matures. Using services like\n        AWS Systems Manager\n        automations, you can transform flat text into automations that can be run against\n      your workload. These automations can be run in response to events, reducing the\n      operational burden to maintain your workload. \n\nCustomer example\n\n\n      AnyCompany Retail must perform database schema updates during software deployments. \n      The Cloud Operations Team worked with the Database Administration Team to build a \n      runbook for manually deploying these changes. The runbook listed each step in the \n      process in checklist form. It included a section on error handling in case something \n      went wrong. They published the runbook on their internal wiki along with their other \n      runbooks. The Cloud Operations Team plans to automate the runbook in a future sprint.\n    \nImplementation steps\n\n        If you don\u2019t have an existing document repository, a version control repository \n        is a great place to start building your runbook library. You can build your runbooks \n        using Markdown. We have provided an example runbook template that you can use to start \n        building runbooks.\n      \n# Runbook Title\n## Runbook Info\n| Runbook ID | Description | Tools Used | Special Permissions | Runbook Author | Last Updated | Escalation POC | \n|-------|-------|-------|-------|-------|-------|-------|\n| RUN001 | What is this runbook for? What is the desired outcome? | Tools | Permissions | Your Name | 2022-09-21 | Escalation Name |\n## Steps\n1. Step one\n2. Step two\n\n\n\n            If you don\u2019t have an existing documentation repository or wiki, create a \n            new version control repository in your version control system. \n          \n\n\n            Identify a process that does not have a runbook. An ideal process is one \n            that is conducted semiregularly, short in number of steps, and has low\n            impact failures.\n          \n\n\n            In your document repository, create a new draft Markdown document using the \n            template. Fill in Runbook Title and the required fields under Runbook Info.\n          \n\n\n            Starting with the first step, fill in the Steps portion of the runbook.\n          \n\n\n            Give the runbook to a team member. Have them use the runbook to validate \n            the steps. If something is missing or needs clarity, update the runbook.\n          \n\n\n            Publish the runbook to your internal documentation store. \n            Once published, tell your team and other stakeholders.\n          \n\n\n            Over time, you\u2019ll build a library of runbooks. \n            As that library grows, start working to automate runbooks. \n          \n\n\nLevel of effort for the implementation plan: Low. The minimum\n      standard for a runbook is a step-by-step text guide. Automating runbooks can increase the\n      implementation effort.\n    \nResources\n\nRelated best practices:\n\n\n\n\nOPS02-BP02 Processes and procedures have identified\n  owners: Runbooks should have an owner in charge of maintaining them. \n        \n\n\nOPS07-BP04 Use playbooks to investigate issues: Runbooks and playbooks are like each other with one key difference: a runbook has a desired outcome. In many cases runbooks are initiated once a playbook has identified a root cause.\n        \n\n\nOPS10-BP01 Use a process for event, incident, and problem\n  management: Runbooks are a part of a good event, incident, and problem management practice.\n        \n\n\nOPS10-BP02 Have a process per alert: Runbooks and playbooks should be used to respond to alerts. Over time these reactions should be automated.\n        \n\n\nOPS11-BP04 Perform knowledge management: Maintaining runbooks is a key part of knowledge management.\n        \n\n\nRelated documents:\n\n\n\nAchieving Operational Excellence using automated playbook and runbook\n\n\nAWS Systems Manager:\n            Working with runbooks\n\n\nMigration playbook for AWS large migrations - Task 4: Improving your migration\n            runbooks\n\n\nUse AWS Systems Manager Automation runbooks to resolve operational tasks\n\n\n\nRelated videos:\n\n\n\n\nAWS re:Invent 2019: DIY guide\n            to runbooks, incident reports, and incident response (SEC318-R1)\n\n\n\nHow to automate IT Operations on\n            AWS | Amazon Web Services\n\n\n\nIntegrate Scripts into\n            AWS Systems Manager\n\n\n\nRelated examples:\n\n\n\n\nAWS Systems Manager: Automation\n            walkthroughs\n\n\n\nAWS Systems Manager: Restore a root volume from the latest snapshot runbook\n\n\nBuilding an AWS incident response runbook using Jupyter notebooks and CloudTrail\n            Lake\n\n\n\nGitlab - Runbooks\n\n\n\nRubix - A Python library for building\n            runbooks in Jupyter Notebooks\n\n\n\nUsing\n            Document Builder to create a custom runbook\n\n\n\nWell-Architected Labs: Automating operations with Playbooks and Runbooks\n\n\n\nRelated services:\n\n\n\n\nAWS Systems Manager\n            Automation\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOPS07-BP02: Ensure a consistent review of operational readinessOPS07-BP04 Use playbooks to investigate issuesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/operational-excellence-pillar/ops_ready_to_support_use_runbooks.html", "title": "OPS07-BP03 Use runbooks to perform procedures - Operational Excellence Pillar", "description": "A runbook is a documented process to achieve a specific outcome. Runbooks consist of a series of steps that someone follows to get something done. Runbooks have been used in operations going back to the early days of aviation. In cloud operations, we use runbooks to reduce risk and achieve desired outcomes. At their simplest, a runbook is a checklist to complete a task.", "language": "en-US"}}