{"page_content": "OPS07-BP02 Ensure a consistent review of operational readiness - AWS Well-Architected FrameworkOPS07-BP02 Ensure a consistent review of operational readiness - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesOPS07-BP02 Ensure a consistent review of\n      operational readinessUse Operational Readiness Reviews (ORRs) to validate that you can\n    operate your workload. ORR is a mechanism developed at Amazon to\n    validate that teams can safely operate their workloads. An ORR is a\n    review and inspection process using a checklist of requirements. An\n    ORR is a self-service experience that teams use to certify their\n    workloads. ORRs include best practices from lessons learned from our\n    years of building software.\n   An ORR checklist is composed of architectural recommendations, operational process, event\n    management, and release quality. Our Correction of Error (CoE) process is a major driver of\n    these items. Your own post-incident analysis should drive the evolution of your own ORR. An ORR\n    is not only about following best practices but preventing the recurrence of events that you\u2019ve\n    seen before. Lastly, security, governance, and compliance requirements can also be included in\n    an ORR.  Run ORRs before a workload launches to general availability and then throughout the\n    software development lifecycle. Running the ORR before launch increases your ability to operate\n    the workload safely. Periodically re-run your ORR on the workload to catch any drift from best\n    practices. You can have ORR checklists for new services launches and ORRs for periodic reviews.\n    This helps keep you up to date on new best practices that arise and incorporate lessons learned\n    from post-incident analysis. As your use of the cloud matures, you can build ORR requirements\n    into your architecture as defaults. \nDesired outcome:\u00a0 You have an ORR\n    checklist with best practices for your organization. ORRs are\n    conducted before workloads launch. ORRs are run periodically over\n    the course of the workload lifecycle.\n  \nCommon anti-patterns:\n\n\nYou launch a workload without knowing if you can operate it. \n\nGovernance and security requirements are not included in certifying a workload for\n        launch. \n\nWorkloads are not re-evaluated periodically. \n\nWorkloads launch without required procedures in place. \n\nYou see repetition of the same root cause failures in multiple workloads. \n\nBenefits of establishing this best\n    practice:\n\n\n\n        Your workloads include architecture, process, and management\n        best practices.\n      \n\n\n        Lessons learned are incorporated into your ORR process.\n      \n\n\n        Required procedures are in place when workloads launch.\n      \n\n\n        ORRs are run throughout the software lifecycle of your\n        workloads.\n      \n\nLevel of risk if this best practice is not\n    established: High\n  \nImplementation guidance\n An ORR is two things: a process and a checklist. Your ORR process should be adopted by\n      your organization and supported by an executive sponsor. At a minimum, ORRs must be conducted\n      before a workload launches to general availability. Run the ORR throughout the software\n      development lifecycle to keep it up to date with best practices or new requirements. The ORR\n      checklist should include configuration items, security and governance requirements, and best\n      practices from your organization. Over time, you can use services, such as  AWS Config,\n        AWS Security Hub, and AWS Control Tower Guardrails, to\n      build best practices from the ORR into guardrails for automatic detection of best practices. \n\nCustomer example\n\n\n      After several production incidents, AnyCompany Retail decided to\n      implement an ORR process. They built a checklist composed of best\n      practices, governance and compliance requirements, and lessons\n      learned from outages. New workloads conduct ORRs before they\n      launch. Every workload conducts a yearly ORR with a subset of best\n      practices to incorporate new best practices and requirements that\n      are added to the ORR checklist. Over time, AnyCompany Retail used\n      AWS Config to detect some best practices, speeding up the ORR\n      process.\n    \n\nImplementation steps\n\n\n      To learn more about ORRs, read the\n      Operational\n      Readiness Reviews (ORR) whitepaper. It provides detailed\n      information on the history of the ORR process, how to build your\n      own ORR practice, and how to develop your ORR checklist. The\n      following steps are an abbreviated version of that document. For\n      an in-depth understanding of what ORRs are and how to build your\n      own, we recommend reading that whitepaper.\n    \n\n\nGather the key stakeholders together, including representatives from security,\n          operations, and development. \n\nHave each stakeholder provide at least one requirement. For the first iteration, try\n          to limit the number of items to thirty or less. \n\n\n\nAppendix\n              B: Example ORR questions from the Operational\n              Readiness Reviews (ORR) whitepaper contains sample\n              questions that you can use to get started.\n            \n\n\nCollect your requirements into a spreadsheet. \n\n\nYou can use custom lenses in\n              the AWS Well-Architected Tool to develop your ORR\n              and share them across your accounts and AWS Organization. \n\n\nIdentify one workload to conduct the ORR on. A pre-launch workload or an internal\n          workload is ideal. \n\nRun through the ORR checklist and take note of any discoveries made. Discoveries might\n          not be ok if a mitigation is in place. For any discovery that lacks a mitigation, add\n          those to your backlog of items and implement them before launch. \n\nContinue to add best practices and requirements to your ORR checklist over time. \n\n AWS Support customers with Enterprise Support can request the Operational Readiness\n        Review Workshop from their Technical Account Manager. The workshop is an interactive\n        working backwards session to develop your own ORR\n      checklist. \n\nLevel of effort for the implementation\n      plan: High. Adopting an ORR practice in your\n      organization requires executive sponsorship and stakeholder\n      buy-in. Build and update the checklist with inputs from across\n      your organization.\n    \nResources\n\nRelated best practices:\n\n\n\nOPS01-BP03 Evaluate governance requirements \u2013 Governance requirements are a natural fit\n          for an ORR checklist. \n\nOPS01-BP04 Evaluate compliance requirements  \u2013 Compliance requirements are sometimes\n          included in an ORR checklist. Other times they are a separate process. \n\nOPS03-BP07 Resource teams appropriately \u2013 Team capability is a good candidate for an\n          ORR requirement. \n\nOPS06-BP01 Plan for unsuccessful changes  \u2013 A rollback or\n          rollforward plan must be established before you launch your workload. \n\nOPS07-BP01 Ensure personnel capability \u2013 To support a workload you must\n          have the required personnel. \n\nSEC01-BP03 Identify and validate control objectives \u2013 Security control\n          objectives make excellent ORR requirements. \n\nREL13-BP01 Define recovery objectives for downtime and data loss \u2013 Disaster\n          recovery plans are a good ORR requirement. \n\nCOST02-BP01 Develop\n            policies based on your organization requirements \u2013 Cost management policies are\n          good to include in your ORR checklist. \n\n\nRelated documents:\n\n\n\n\nAWS Control Tower - Guardrails in AWS Control Tower\n\n\n\nAWS Well-Architected Tool - Custom Lenses\n\n\n\nOperational\n          Readiness Review Template by Adrian Hornsby\n\n\n\nOperational\n          Readiness Reviews (ORR) Whitepaper\n\n\n\nRelated videos:\n\n\n\n\nAWS Supports You | Building an Effective Operational Readiness\n          Review (ORR)\n\n\n\nRelated examples:\n\n\n\n\nSample\n          Operational Readiness Review (ORR) Lens\n\n\n\nRelated services:\n\n\n\n\nAWS Config\n\n\n\nAWS Control Tower\n\n\n\nAWS Security Hub\n\n\n\nAWS Well-Architected Tool\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOPS07-BP01 Ensure personnel capabilityOPS07-BP03 Use runbooks to perform proceduresDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/ops_ready_to_support_const_orr.html", "title": "OPS07-BP02 Ensure a consistent review of operational readiness - AWS Well-Architected Framework", "description": "Use Operational Readiness Reviews (ORRs) to validate that you can operate your workload. ORR is a mechanism developed at Amazon to validate that teams can safely operate their workloads.", "language": "en-US"}}