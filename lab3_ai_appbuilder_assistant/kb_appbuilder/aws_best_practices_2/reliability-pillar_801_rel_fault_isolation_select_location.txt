{"page_content": "REL10-BP02 Select the appropriate locations for your multi-location deployment - Reliability PillarREL10-BP02 Select the appropriate locations for your multi-location deployment - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesREL10-BP02 Select the appropriate locations for your\n  multi-location deployment\nDesired outcome: \n    For high availability, always (when possible) deploy your workload\n    components to multiple Availability Zones (AZs). For workloads with extreme resilience requirements,\n    carefully evaluate the options for a multi-Region architecture.\n  \n\n\nA resilient multi-AZ database deployment with backup to another\n            AWS Region\n\n\nCommon anti-patterns:\n\n\n\n          Choosing to design a multi-Region architecture when a multi-AZ\n          architecture would satisfy requirements.\n        \n\n\n          Not accounting for dependencies between application components\n          if resilience and multi-location requirements differ between\n          those components.\n        \n\nbenefits of establishing this best practice: For resilience, you should use an approach that builds layers of\n    defense. One layer protects against smaller, more common,\n    disruptions by building a highly available architecture using\n    multiple AZs. Another layer of defense is meant to protect against\n    rare events like widespread natural disasters and Region-level\n    disruptions. This second layer involves architecting your\n    application to span multiple AWS Regions.\n  \n\n\n          The difference between a 99.5% availability and 99.99%\n          availability is over 3.5 hours per month. The expected\n          availability of a workload can only reach \u201cfour nines\u201d if it\n          is in multiple AZs.\n        \n\n\n          By running your workload in multiple AZs, you can isolate\n          faults in power, cooling, and networking, and most natural\n          disasters like fire and flood.\n        \n\n\n          Implementing a multi-Region strategy for your workload helps\n          protect it against widespread natural disasters that affect a\n          large geographic region of a country, or technical failures of\n          Region-wide scope. Be aware that implementing a multi-Region\n          architecture can be significantly complex, and is usually not\n          required for most workloads.\n        \n\nLevel of risk exposed if this best\n      practice is not established: High\n    \nImplementation guidance\n\n      For a disaster event based on disruption or partial loss of one\n      Availability Zone, implementing a highly available workload in\n      multiple Availability Zones within a single AWS Region helps\n      mitigate against natural and technical disasters. Each AWS Region\n      is comprised of multiple Availability Zones, each isolated from\n      faults in the other zones and separated by a meaningful distance.\n      However, for a disaster event that includes the risk of losing\n      multiple Availability Zone components, which are a significant\n      distance away from each other, you should implement disaster\n      recovery options to mitigate against failures of a Region-wide\n      scope. For workloads that require extreme resilience (critical\n      infrastructure, health-related applications, financial system\n      infrastructure, etc.), a multi-Region strategy may be required.\n    \nImplementation Steps\n\n\n\n            Evaluate your workload and determine whether the resilience\n            needs can be met by a multi-AZ approach (single AWS Region),\n            or if they require a multi-Region approach. Implementing a\n            multi-Region architecture to satisfy these requirements will\n            introduce additional complexity, therefore carefully\n            consider your use case and its requirements. Resilience\n            requirements can almost always be met using a single AWS Region. Consider the following possible requirements when\n            determining whether you need to use multiple Regions:\n          \n\n\n\nDisaster recovery (DR): For a disaster event based on\n              disruption or partial loss of one Availability Zone, implementing a highly available\n              workload in multiple Availability Zones within a single AWS Region helps mitigate\n              against natural and technical disasters. For a disaster event that includes the risk\n              of losing multiple Availability Zone components, which are a significant distance away\n              from each other, you should implement disaster recovery across multiple Regions to\n              mitigate against natural disasters or technical failures of a Region-wide scope.\n            \n\n\nHigh availability (HA): A multi-Region architecture\n              (using multiple AZs in each Region) can be used to achieve greater then four 9\u2019s (>\n              99.99%) availability. \n\n\nStack localization: When deploying a workload to a\n              global audience, you can deploy localized stacks in different AWS Regions to serve\n              audiences in those Regions. Localization can include language, currency, and types of\n              data stored. \n\n\nProximity to users: When deploying a workload to a\n              global audience, you can reduce latency by deploying stacks in AWS Regions close to\n              where the end users are. \n\n\nData residency: Some workloads are subject to data\n              residency requirements, where data from certain users must remain within a specific\n              country\u2019s borders. Based on the regulation in question, you can choose to deploy an\n              entire stack, or just the data, to the AWS Region within those borders. \n\n\n\n            Here are some examples of multi-AZ functionality provided by\n            AWS services:\n          \n\n\n To protect workloads using EC2 or ECS, deploy an Elastic Load Balancer in front\n              of the compute resources. Elastic Load Balancing then provides the solution to detect instances in\n              unhealthy zones and route traffic to the healthy ones. \n\n\n\nGetting started with Application Load Balancers\n\n\n\nGetting started with Network Load Balancers\n\n\n\n In the case of EC2 instances running commercial off-the-shelf software that do\n              not support load balancing, you can achieve a form of fault tolerance by implementing\n              a multi-AZ disaster recovery methodology. \n\n\nREL13-BP02 Use defined recovery strategies to meet the recovery\n  objectives\n\n\n For Amazon ECS tasks, deploy your service evenly across three AZs to achieve a balance\n              of availability and cost. \n\n\n\nAmazon ECS\n                    availability best practices | Containers\n\n\n\n For non-Aurora Amazon RDS, you can choose Multi-AZ as a configuration option. Upon\n              failure of the primary database instance, Amazon RDS automatically promotes a standby\n              database to receive traffic in another availability zone. Multi-Region read-replicas\n              can also be created to improve resilience. \n\n\n\nAmazon RDS Multi AZ\n                    Deployments\n\n\n\nCreating a read replica\n                    in a different AWS Region\n\n\n\n  Here are some examples of multi-Region functionality provided by AWS services: \n\n\n For Amazon S3 workloads, where multi-AZ availability is provided automatically by the\n              service, consider Multi-Region Access Points if a multi-Region deployment is needed. \n\n\n\nMulti-Region Access\n                    Points in Amazon S3\n\n\n\n For DynamoDB tables, where multi-AZ availability is provided automatically by the\n              service, you can easily convert existing tables to global tables to take advantage of\n              multiple regions. \n\n\n\nConvert Your Single-Region Amazon DynamoDB Tables to Global Tables\n\n\n\n If your workload is fronted by Application Load Balancers or Network Load Balancers, use AWS Global Accelerator\n              to improve the availability of your application by directing traffic to multiple\n              regions that contain healthy endpoints. \n\n\n\nEndpoints for standard\n                    accelerators in AWS Global Accelerator - AWS Global Accelerator (amazon.com)\n\n\n\n For applications that leverage AWS EventBridge, consider cross-Region buses to forward\n              events to other Regions you select. \n\n\n\nSending and receiving\n                    Amazon EventBridge events between AWS Regions\n\n\n\n For Amazon Aurora databases, consider Aurora global databases, which span multiple\n              AWS regions. Existing clusters can be modified to add new Regions as well. \n\n\n\nGetting started with Amazon Aurora global databases\n\n\n\n If your workload includes AWS Key Management Service (AWS KMS) encryption keys, consider whether\n              multi-Region keys are appropriate for your application. \n\n\n\nMulti-Region\n                    keys in AWS KMS\n\n\n\n For other AWS service features, see this blog series on Creating a Multi-Region Application with AWS Services series\n\n\n\n\nLevel of effort for the Implementation Plan: Moderate to High \nResources\n\nRelated documents:\n\n\n\n\nCreating\n          a Multi-Region Application with AWS Services series\n\n\n\nDisaster\n          Recovery (DR) Architecture on AWS, Part IV: Multi-site\n          Active/Active\n\n\n\nAWS           Global Infrastructure\n\n\n\nAWS           Local Zones FAQ\n\n\n\nDisaster\n          Recovery (DR) Architecture on AWS, Part I: Strategies for\n          Recovery in the Cloud\n\n\n\nDisaster\n          recovery is different in the cloud\n\n\n\nGlobal\n          Tables: Multi-Region Replication with DynamoDB\n\n\n\nRelated videos:\n\n\n\n\nAWS re:Invent\n          2018: Architecture Patterns for Multi-Region Active-Active\n          Applications (ARC209-R2)\n\n\n\nAuth0:\n          Multi-Region High-Availability Architecture that Scales to\n          1.5B+ Logins a Month with automated failover\n\n\n\nRelated examples:", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_fault_isolation_select_location.html", "title": "REL10-BP02 Select the appropriate locations for your multi-location deployment - Reliability Pillar", "description": "For high availability, always (when possible) deploy your workload components to multiple Availability Zones (AZs). For workloads with extreme resilience requirements, carefully evaluate the options for a multi-Region architecture.", "language": "en-US"}}