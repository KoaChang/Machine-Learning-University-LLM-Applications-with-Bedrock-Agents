{"page_content": "COST02-BP03 Implement an account structure - AWS Well-Architected FrameworkCOST02-BP03 Implement an account structure - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesCOST02-BP03 Implement an account structure\n    Implement a structure of accounts that maps to your organization.\n    This assists in allocating and managing costs throughout your\n    organization.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      AWS Organizations allows you to create multiple AWS accounts which can help you centrally \n      govern your environment as you scale your workloads on AWS. You can model your organizational \n      hierarchy by grouping AWS accounts in organizational unit (OU) structure and creating multiple \n      AWS accounts under each OU. To create an account structure, you need to decide which of your AWS accounts \n      will be the management account first. After that, you can create \n      new AWS accounts or select existing accounts as member accounts based on your designed account \n      structure by following management account best practices \n      and member account best practices.\n    \n\n      It is advised to always have at least one management account with one member account linked to it, \n      regardless of your organization size or usage. All workload resources should reside only within member \n      accounts and no resource should be created in management account. There is no one size fits all answer \n      for how many AWS accounts you should have. Assess your current and future operational and cost models \n      to ensure that the structure of your AWS accounts reflects your organization\u2019s goals. Some companies \n      create multiple AWS accounts for business reasons, for example: \n    \n\nAdministrative or fiscal and billing isolation is required between organization\n        units, cost centers, or specific workloads.AWS service limits are set to be specific to particular workloads.There is a requirement for isolation and separation between workloads and\n        resources.\n\n      Within AWS Organizations, \n      consolidated billing \n      creates the construct between one or more member accounts and\n      the management account. Member accounts allow you to isolate and distinguish your cost and\n      usage by groups. A common practice is to have separate member accounts for each organization\n      unit (such as finance, marketing, and sales), or for each environment lifecycle (such as\n      development, testing and production), or for each workload (workload a, b, and c), and then\n      aggregate these linked accounts using consolidated billing.\n    \n\n      Consolidated billing allows you to consolidate payment for multiple member AWS accounts\n      under a single management account, while still providing visibility for each linked account\u2019s\n      activity. As costs and usage are aggregated in the management account, this allows you to\n      maximize your service volume discounts, and maximize the use of your commitment\n      discounts (Savings Plans and Reserved Instances) to achieve the highest discounts.\n    \n\n      The following diagram shows how you can use AWS Organizations with organizational units (OU) \n      to group multiple accounts, and place multiple AWS accounts under each OU. It is recommended \n      to use OUs for various use cases and workloads which provides patterns for organizing accounts.\n    \n\n\nExample of grouping multiple AWS accounts under organizational units.\n\n\nAWS Control Tower\n      can quickly set up and configure multiple AWS accounts, ensuring that governance is aligned\n      with your organization\u2019s requirements.\nImplementation steps\n\n\n\n\nDefine separation requirements: Requirements for separation \n          are a combination of multiple factors, including security, reliability, and financial constructs. \n          Work through each factor in order and specify whether the workload or workload environment \n          should be separate from other workloads. Security promotes adhesion to access and data \n          requirements. Reliability manages limits so that environments and workloads do not impact \n          others. Review the security and reliability pillars of the Well-Architected Framework \n          periodically and follow the provided best practices. Financial constructs create strict \n          financial separation (different cost center, workload ownerships and accountability). \n          Common examples of separation are production and test workloads being run in separate \n          accounts, or using a separate account so that the invoice and billing data can be provided \n          to the individual business units or departments in the organization or stakeholder who \n          owns the account. \n\n\nDefine grouping requirements: Requirements for grouping \n          do not override the separation requirements, but are used to assist management. Group \n          together similar environments or workloads that do not require separation. An example \n          of this is grouping multiple test or development environments from one or more workloads \n          together.\n\n\nDefine account structure: Using these separations and \n          groupings, specify an account for each group and maintain separation requirements. \n          These accounts are your member or linked accounts. By grouping these member accounts \n          under a single management or payer account, you combine usage, which allows for greater \n          volume discounts across all accounts, which provides a single bill for all accounts. \n          It's possible to separate billing data and provide each member account with an individual \n          view of their billing data. If a member account must not have its usage or billing data \n          visible to any other account, or if a separate bill from AWS is required, define multiple \n          management or payer accounts. In this case, each member account has its own management or \n          payer account. Resources should always be placed in member or linked accounts. The management \n          or payer accounts should only be used for management. \n\nResources\n\nRelated documents:\n\n\n\n\nUsing Cost Allocation Tags\n\n\n\nAWS           managed policies for job functions\n\n\n\nAWS           multiple account billing strategy\n\n\n\nControl\n          access to AWS Regions using IAM policies\n\n\n\nAWS Control Tower\n\n\n\nAWS Organizations\n\n\n\n          Best practices for management accounts \n          and member accounts\n\n\n\nOrganizing Your AWS Environment Using Multiple Accounts\n\n\n\nTurning on shared reserved instances and Savings Plans discounts\n\n\n\nConsolidated billing\n\n\n\nConsolidated billing\n\n\n\nRelated examples:\n\n\n\n\nSplitting\n          the CUR and Sharing Access\n\n\n\nRelated videos:\n\n\n\n Introducing AWS Organizations\n\n Set Up a Multi-Account AWS\n            Environment that Uses Best Practices for AWS Organizations\n\n\nRelated examples:\n\n\n\n Well-Architected Labs: Create an AWS Organization (Level 100) \n\n\n            Splitting the AWS Cost and Usage Report and Sharing Access \n\n\nDefining an AWS Multi-Account Strategy for telecommunications companies\n\n\n\nBest Practices for Optimizing AWS accounts\n\n\n\nBest Practices for Organizational Units with AWS Organizations\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsCOST02-BP02 Implement goals and targetsCOST02-BP04 Implement groups and rolesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/cost_govern_usage_account_structure.html", "title": "COST02-BP03 Implement an account structure - AWS Well-Architected Framework", "description": "Implement a structure of accounts that maps to your organization. This assists in allocating and managing costs throughout your organization.", "language": "en-US"}}