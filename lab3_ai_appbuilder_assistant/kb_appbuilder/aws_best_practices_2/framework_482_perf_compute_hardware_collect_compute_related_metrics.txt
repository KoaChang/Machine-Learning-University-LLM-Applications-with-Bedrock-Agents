{"page_content": "PERF02-BP03 Collect compute-related metrics - AWS Well-Architected FrameworkPERF02-BP03 Collect compute-related metrics - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceImplementation stepsResourcesPERF02-BP03 Collect compute-related metrics\n    Record and track compute-related metrics to better understand how\n    your compute resources are performing and improve their performance\n    and their utilization.\n  \nCommon anti-patterns:\n\n\n\n        You only use manual log file searching for metrics.\u00a0\n      \n\n\n        You only use the default metrics recorded by your monitoring\n        software.\n      \n\n\n        You only review metrics when there is an issue.\n      \n\nBenefits of establishing this best\n    practice: Collecting performance-related metrics will\n    help you align application performance with business requirements to\n    ensure that you are meeting your workload needs. It can also help\n    you continually improve the resource performance and utilization in\n    your workload.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Cloud workloads can generate large volumes of data such as\n      metrics, logs, and events. In the AWS Cloud, collecting metrics is\n      a crucial step to improve security, cost efficiency, performance,\n      and sustainability. AWS provides a wide range of\n      performance-related metrics using monitoring services such as\n      Amazon CloudWatch to provide you with valuable insights. Metrics\n      such as CPU utilization, memory utilization, disk I/O, and network\n      inbound and outbound can provide insight into utilization levels\n      or performance bottlenecks. Use these metrics as part of a\n      data-driven approach to actively tune and optimize your workload's\n      resources.\u00a0 In an ideal case, you should collect all metrics\n      related to your compute resources in a single platform with\n      retention policies implemented to support cost and operational\n      goals.\n    \nImplementation steps\n\n\n\n          Identify which performance-related metrics are relevant to\n          your workload. You should collect metrics around resource\n          utilization and the way your cloud workload is operating (like\n          response time and throughput).\n        \n\n\n\nAmazon EC2\n              default metrics\n\n\n\nAmazon ECS default metrics\n\n\n\nAmazon EKS\n              default metrics\n\n\n\nLambda\n              default metrics\n\n\n\nAmazon EC2\n              memory and disk metrics\n\n\n\n\n          Choose and set up the right logging and monitoring solution\n          for your workload.\n        \n\n\n\nAWS               native Observability\n\n\n\nAWS Distro\n              for OpenTelemetry\n\n\n\nAmazon Managed Service for Prometheus\n\n\n\n\n          Define the required filter and aggregation for the metrics\n          based on your workload requirements.\n        \n\n\n\nQuantify\n              custom application metrics with Amazon CloudWatch Logs and\n              metric filters\n\n\n\nCollect\n              custom metrics with Amazon CloudWatch strategic\n              tagging\n\n\n\n\n          Configure data retention policies for your metrics to match\n          your security and operational goals.\n        \n\n\n\nDefault\n              data retention for CloudWatch metrics\n\n\n\nDefault\n              data retention for CloudWatch Logs\n\n\n\n\n          If required, create alarms and notifications for your metrics\n          to help you proactively respond to performance-related issues.\n        \n\n\n\nCreate\n              alarms for custom metrics using Amazon CloudWatch anomaly\n              detection\n\n\n\nCreate\n              metrics and alarms for specific web pages with Amazon CloudWatch RUM\n\n\n\n\n          Use automation to deploy your metric and log aggregation\n          agents.\n        \n\n\n\nAWS Systems Manager automation\n\n\n\nOpenTelemetry\n              Collector\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nAmazon CloudWatch documentation\n\n\n\nCollect\n          metrics and logs from Amazon EC2 instances and on-premises\n          servers with the CloudWatch Agent\n\n\n\nAccessing\n          Amazon CloudWatch Logs for AWS Lambda\n\n\n\nUsing\n          CloudWatch Logs with container instances\n\n\n\nPublish\n          custom metrics\n\n\n\nAWS           Answers: Centralized Logging\n\n\n\nAWS Services That Publish CloudWatch Metrics\n\n\n\nMonitoring\n          Amazon EKS on AWS Fargate\n\n\n\nRelated videos:\n\n\n\n\nApplication\n          Performance Management on AWS\n\n\n\nRelated examples:\n\n\n\n\nLevel\n          100: Monitoring with CloudWatch Dashboards\n\n\n\nLevel\n          100: Monitoring Windows EC2 instance with CloudWatch\n          Dashboards\n\n\n\nLevel\n          100: Monitoring an Amazon Linux EC2 instance with CloudWatch\n          Dashboards\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF02-BP02 Understand the available compute configuration and\n  featuresPERF02-BP04 Configure and right-size compute resourcesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_compute_hardware_collect_compute_related_metrics.html", "title": "PERF02-BP03 Collect compute-related metrics - AWS Well-Architected Framework", "description": "Record and track compute-related metrics to better understand how your compute resources are performing and improve their performance and their utilization.", "language": "en-US"}}