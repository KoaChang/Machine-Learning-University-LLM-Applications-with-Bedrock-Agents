{"page_content": "SEC11-BP07 Regularly assess security properties of the pipelines - Security PillarSEC11-BP07 Regularly assess security properties of the pipelines - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidance Resources SEC11-BP07 Regularly assess security properties of the\n  pipelines\n      Apply the principles of the Well-Architected Security Pillar to\n      your pipelines, with particular attention to the separation of\n      permissions. Regularly assess the security properties of your\n      pipeline infrastructure. Effectively managing the security\n      of the pipelines allows you to deliver the\n      security of the software that passes through\n      the pipelines.\n    Desired outcome: The pipelines used to build and deploy\n    your software should follow the same recommended practices as any other workload in your\n    environment. The tests that are implemented in the pipelines should not be editable by the\n    builders who are using them. The pipelines should only have the permissions needed for the\n    deployments they are doing and should implement safeguards to avoid deploying to the wrong\n    environments. Pipelines should not rely on long-term credentials, and should be configured to\n    emit state so that the integrity of the build environments can be validated. Common anti-patterns:\n\n\n          Security tests that can be bypassed by builders.\n        \n\n\n          Overly broad permissions for deployment pipelines.\n        \n\n\n          Pipelines not being configured to validate inputs.\n        \n\n\n          Not regularly reviewing the permissions associated with your\n          CI/CD infrastructure.\n        \n\n\n          Use of long-term or hardcoded credentials.\n        \nBenefits of establishing this best practice:\n\n\n          Greater confidence in the integrity of the software that is\n          built and deployed through the pipelines.\n        \n\n\n          Ability to stop a deployment when there is suspicious\n          activity.\n        \n Level of risk exposed if this best practice is not\n      established: High \nImplementation guidance \n\n        Starting with managed CI/CD services that support IAM roles\n        reduces the risk of credential leakage. Applying the Security\n        Pillar principles to your CI/CD pipeline infrastructure can help\n        you determine where security improvements can be made. Following\n        the\n        AWS         Deployment Pipelines Reference Architecture is a good\n        starting point for building your CI/CD environments. Regularly\n        reviewing the pipeline implementation and analyzing logs for\n        unexpected behavior can help you understand the usage patterns\n        of the pipelines being used to deploy software.\n      \nImplementation steps\n\n\n\n            Start with the\n            AWS             Deployment Pipelines Reference Architecture.\n          \n\n\n            Consider using\n            AWS             IAM Access Analyzer to programmatically generate\n            least privilege IAM policies for the pipelines.\n          \n\n\n            Integrate your pipelines with monitoring and alerting so\n            that you are notified of unexpected or abnormal activity,\n            for AWS managed services\n            Amazon EventBridge allows you to route data to targets such\n            as AWS Lambda or\n            Amazon Simple Notification Service (Amazon SNS).\n          \n\nResources \n\nRelated documents:\n\n\n\n\nAWS           Deployment Pipelines Reference Architecture\n\n\n\nMonitoring\n          AWS CodePipeline\n\n\n\nSecurity\n          best practices for AWS CodePipeline\n\n\n\nRelated examples:\n\n\n\n\nDevOps\n            monitoring dashboard (GitHub) \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC11-BP06 Deploy software programmaticallySEC11-BP08 Build a program that embeds security ownership in\n  workload teamsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/sec_appsec_regularly_assess_security_properties_of_pipelines.html", "title": "SEC11-BP07 Regularly assess security properties of the pipelines - Security Pillar", "description": "Apply the principles of the Well-Architected Security Pillar to your pipelines, with particular attention to the separation of permissions. Regularly assess the security properties of your pipeline infrastructure. Effectively managing the security of the pipelines allows you to deliver the security of the software that passes through the pipelines.", "language": "en-US"}}