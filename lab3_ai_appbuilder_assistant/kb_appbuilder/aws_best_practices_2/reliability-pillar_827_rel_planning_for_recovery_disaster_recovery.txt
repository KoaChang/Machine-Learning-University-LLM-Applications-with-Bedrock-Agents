{"page_content": "Design a plan for how your workload will fail back.\n\n Failback is when you return workload operation to the primary Region, after a\n          disaster event has abated. Provisioning infrastructure and code to the primary Region\n          generally follows the same steps as were initially used, relying on infrastructure as code\n          and code deployment pipelines. The challenge with failback is restoring data stores, and\n          ensuring their consistency with the recovery Region in operation. \n In the failed over state, the databases in the recovery Region are live and have the\n          up-to-date data. The goal then is to re-synchronize from the recovery Region to the\n          primary Region, ensuring it is up-to-date. \n Some AWS services will do this automatically. If using Amazon DynamoDB global tables, even if the table in the\n          primary Region had become not available, when it comes back online, DynamoDB resumes\n          propagating any pending writes. If using Amazon Aurora Global Database and using managed planned failover, then Aurora global database's existing replication\n          topology is maintained. Therefore, the former read/write instance in the primary Region\n          will become a replica and receive updates from the recovery Region. \n In cases where this is not automatic, you will need to re-establish the database in\n          the primary Region as a replica of the database in the recovery Region. In many cases this\n          will involve deleting the old primary database, and creating new replicas. \n After a failover, if you can continue running in your recovery Region, consider\n          making this the new primary Region. You would still do all the above steps to make the\n          former primary Region into a recovery Region. Some organizations do a scheduled rotation,\n          swapping their primary and recovery Regions periodically (for example every three months). \n All of the steps required to fail over and fail back should be maintained in a\n          playbook that is available to all members of the team, and is periodically reviewed. \n When using Elastic Disaster Recovery, the service will assist in orchestrating and automating the\n          failback process. For more details, see Performing a failback.\n        \n\n\nLevel of effort for the Implementation Plan: High \nResources\n\nRelated best practices:\n\n\n\nREL09-BP01 Identify and back up all data that needs to be\n  backed up, or reproduce the data from sources\n\nREL11-BP04 Rely on the data plane and not the control plane\n  during recovery\n\n\nREL13-BP01 Define recovery objectives for downtime and data\n  loss\n\n\n\nRelated documents:\n\n\n\n\nAWS           Architecture Blog: Disaster Recovery Series\n\n\n\nDisaster\n          Recovery of Workloads on AWS: Recovery in the Cloud (AWS           Whitepaper)\n\n\n\nDisaster\n          recovery options in the cloud\n\n\n\nBuild\n          a serverless multi-region, active-active backend solution in\n          an hour\n\n\n\nMulti-region\n          serverless backend \u2014 reloaded\n\n\n\nRDS:\n          Replicating a Read Replica Across Regions\n\n\n\nRoute\u00a053: Configuring DNS Failover\n\n\n\nS3:\n          Cross-Region Replication\n\n\n\nWhat\n          Is AWS Backup?\n\n\n\nWhat\n          is Route\u00a053 Application Recovery Controller?\n\n\n\nAWS           Elastic Disaster Recovery\n\n\n\nHashiCorp\n          Terraform: Get Started - AWS\n\n\n\nAPN\n          Partner: partners that can help with disaster recovery\n\n\n\nAWS Marketplace: products that can be used for disaster\n          recovery\n\n\n\nRelated videos:\n\n\n\n\nDisaster\n          Recovery of Workloads on AWS\n\n\n\nAWS re:Invent\n          2018: Architecture Patterns for Multi-Region Active-Active\n          Applications (ARC209-R2)\n\n\n\nGet\n          Started with AWS Elastic Disaster Recovery | Amazon Web Services\n\n\n\nRelated examples:\n\n\n\n\nWell-Architected Lab - Disaster Recovery - Series of\n          workshops illustrating DR strategies\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL13-BP01 Define recovery objectives for downtime and data\n  lossREL13-BP03 Test disaster recovery implementation to validate\n  the implementationDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_planning_for_recovery_disaster_recovery.html", "title": "REL13-BP02 Use defined recovery strategies to meet the recovery objectives - Reliability Pillar", "description": "Define a disaster recovery (DR) strategy that meets your workload's recovery objectives. Choose a strategy such as backup and restore, standby (active/passive), or active/active.", "language": "en-US"}}