{"page_content": "PERF01-BP06 Use benchmarking to drive architectural decisions - AWS Well-Architected FrameworkPERF01-BP06 Use benchmarking to drive architectural decisions - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesPERF01-BP06 Use benchmarking to drive architectural\n  decisions\n    Benchmark the performance of an existing workload to understand how\n    it performs on the cloud and drive architectural decisions based on\n    that data.\n  \nCommon anti-patterns:\n\n\n\n        You rely on common benchmarks that are not indicative of your\n        workload\u2019s characteristics.\n      \n\n\n        You rely on customer feedback and perceptions as your only\n        benchmark.\n      \n\nBenefits of establishing this best\n    practice: Benchmarking your current implementation allows\n    you to measure performance improvements.\n  \nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Use benchmarking with synthetic tests to assess how your workload\u2019s components perform.\n      Benchmarking is generally quicker to set up than load testing and\n      is used to evaluate the technology for a particular component.\n      Benchmarking is often used at the start of a new project, when you\n      lack a full solution to load test.\n    \n\n      You can either build your own custom benchmark tests or\n      use an industry standard test, such as\n      TPC-DS, to\n      benchmark your workloads. Industry benchmarks are\n      helpful when comparing environments. Custom benchmarks are useful\n      for targeting specific types of operations that you expect to make\n      in your architecture.\n    \n\n      When benchmarking, it is important to pre-warm your test\n      environment to get valid results. Run the same benchmark multiple\n      times to verify that you\u2019ve captured any variance over time.\n    \n\n      Because benchmarks are generally faster to run than load tests,\n      they can be used earlier in the deployment pipeline and provide\n      faster feedback on performance deviations. When you evaluate a\n      significant change in a component or service, a benchmark can be a\n      quick way to see if you can justify the effort to make the change.\n      Using benchmarking in conjunction with load testing is important\n      because load testing informs you about how your workload\n      performs in production.\n    \nImplementation steps\n\n\n\n            Define the metrics (like CPU utilization, latency, or\n            throughput) to evaluate your workload performance.\n          \n\n\n            Identify and set up a benchmarking tool that is suitable for\n            your workload. You can use AWS services (like Amazon CloudWatch) or a third-party tool that is compatible with\n            your workload.\n          \n\n\n            Perform your benchmark tests and monitor the metrics during\n            the test.\n          \n\n\n            Analyze and document the benchmarking results to identify\n            any bottlenecks and issues.\n          \n\n\n            Use the test results to make architectural decisions and\n            adjust your workload. This may include changing services or\n            adopting new features.\n          \n\n\n            Retest your workload after the adjustment.\n          \n\nResources\n\nRelated documents:\n\n\n\n\nAWS           Architecture Center\n\n\n\nAWS Partner Network\n\n\n\nAWS           Solutions Library\n\n\n\nAWS           Knowledge Center\n\n\n\nAmazon CloudWatch RUM\n\n\n\nAmazon CloudWatch Synthetics\n\n\n\nRelated videos:\n\n\n\n\nThis\n          is my Architecture\n\n\n\nOptimize\n          applications through Amazon CloudWatch RUM\n\n\n\nDemo\n          of Amazon CloudWatch Synthetics\n\n\n\nRelated examples:\n\n\n\n\nAWS           Samples\n\n\n\nAWS           SDK Examples\n\n\n\nDistributed\n          Load Tests\n\n\n\nMeasure\n          page load time with Amazon CloudWatch Synthetics\n\n\n\nAmazon CloudWatch RUM Web Client\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF01-BP05 Use policies and reference architecturesPERF01-BP07 Use a data-driven approach for architectural\n  choicesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_architecture_use_benchmarking.html", "title": "PERF01-BP06 Use benchmarking to drive architectural decisions - AWS Well-Architected Framework", "description": "Benchmark the performance of an existing workload to understand how it performs on the cloud and drive architectural decisions based on that data.", "language": "en-US"}}