{"page_content": "REL13-BP03 Test disaster recovery implementation to validate the implementation - AWS Well-Architected FrameworkREL13-BP03 Test disaster recovery implementation to validate the implementation - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL13-BP03 Test disaster recovery implementation to validate\n  the implementationRegularly test failover to your recovery site to verify that it operates properly and that RTO and RPO are met.\nCommon anti-patterns:\n\n\n\n        Never exercise failovers in production.\n      \n\nBenefits of establishing this best\n    practice: Regularly testing you disaster recovery plan\n    verifies that it will work when it needs to, and that your team knows\n    how to perform the strategy.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      A pattern to avoid is developing recovery paths that are rarely\n      exercised. For example, you might have a secondary data store that\n      is used for read-only queries. When you write to a data store and\n      the primary fails, you might want to fail over to the secondary data\n      store. If you don\u00e2\u20ac\u2122t frequently test this failover, you might find\n      that your assumptions about the capabilities of the secondary data\n      store are incorrect. The capacity of the secondary, which might have\n      been sufficient when you last tested, might be no longer be able to\n      tolerate the load under this scenario. Our experience has shown that\n      the only error recovery that works is the path you test frequently.\n      This is why having a small number of recovery paths is best. You can\n      establish recovery patterns and regularly test them. If you have a\n      complex or critical recovery path, you still need to regularly\n      exercise that failure in production to convince yourself that the\n      recovery path works. In the example we just discussed, you should\n      fail over to the standby regularly, regardless of need.\n    \n\nImplementation steps\n\n\n\n        Engineer your workloads for recovery. Regularly test your recovery\n        paths. Recovery-oriented computing identifies the\n        characteristics in systems that enhance recovery: isolation and redundancy, system-wide ability\n        to roll back changes, ability to monitor and determine health,\n        ability to provide diagnostics, automated recovery, modular\n        design, and ability to restart. Exercise the recovery path to\n        verify that you can accomplish the recovery in the specified time\n        to the specified state. Use your runbooks during this recovery to\n        document problems and find solutions for them before the next\n        test.\n      \nFor Amazon EC2-based workloads, use AWS Elastic Disaster Recovery to implement and launch drill instances for your DR strategy. AWS Elastic Disaster Recovery provides the ability to efficiently run drills, which helps you prepare for a failover event. You can also frequently launch of your instances using Elastic Disaster Recovery for test and drill purposes without redirecting the traffic.\n\nResources\n\nRelated documents:\n\n\n\n\nAPN\n          Partner: partners that can help with disaster recovery\n\n\n\nAWS           Architecture Blog: Disaster Recovery Series\n\n\n\nAWS Marketplace: products that can be used for disaster\n          recovery\n\n\n\nAWS Elastic Disaster Recovery\n\n\n\nDisaster\n          Recovery of Workloads on AWS: Recovery in the Cloud (AWS           Whitepaper)\n\n\n\nAWS Elastic Disaster Recovery Preparing for Failover\n\n\n\nThe\n          Berkeley/Stanford recovery-oriented computing project\n\n\n\nWhat\n          is AWS Fault Injection Simulator?\n\n\n\nRelated videos:\n\n\n\n\nAWS re:Invent\n          2018: Architecture Patterns for Multi-Region Active-Active\n          Applications\n\n\n\nAWS re:Invent\n          2019: Backup-and-restore and disaster-recovery solutions with\n          AWS\n\n\n\nRelated examples:\n\n\n\n\nWell-Architected Lab - Testing for Resiliency\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL13-BP02 Use defined recovery strategies to meet the recovery\n  objectivesREL13-BP04 Manage configuration drift at the DR site or\n  RegionDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_planning_for_recovery_dr_tested.html", "title": "REL13-BP03 Test disaster recovery implementation to validate the implementation - AWS Well-Architected Framework", "description": "Regularly test failover to your recovery site to verify that it operates properly and that RTO and RPO are met.", "language": "en-US"}}