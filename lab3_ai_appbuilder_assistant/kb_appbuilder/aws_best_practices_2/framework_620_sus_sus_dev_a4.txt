{"page_content": "SUS06-BP03 Increase utilization of build environments - AWS Well-Architected FrameworkSUS06-BP03 Increase utilization of build environments - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSUS06-BP03 Increase utilization of build environmentsIncrease the utilization of resources to develop, test, and build your workloads.\nCommon anti-patterns:\n\n\n\n        You manually provision or terminate your build environments.\n      \n\n\n        You keep your build environments running independent of test, build, or release activities (for example, running an environment outside of the working hours of your development team members).\n      \n\n\n        You over-provision resources for your build environments.\n      \n\nBenefits of establishing this best practice: By increasing the utilization of build environments, you can improve the overall efficiency of your cloud workload while allocating the resources to builders to develop, test, and build efficiently.\n  \nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\n\n      Use automation and infrastructure-as-code to bring build environments up when needed and take them down when not used. A common pattern is to schedule periods of availability that coincide with the working hours of your development team members. Your test environments should closely resemble the production configuration. However, look for opportunities to use instance types with burst capacity, Amazon EC2 Spot Instances, automatic scaling database services, containers, and serverless technologies to align development and test capacity with use. Limit data volume to just meet the test requirements. If using production data in test, explore possibilities of sharing data from production and not moving data across.\n    \n\nImplementation steps\n\n\n\n\n          Use infrastructure-as-code to provision your build environments.\n        \n\n\n          Use automation to manage the lifecycle of your development and test environments and maximize the efficiency of your build resources.\n        \n\n\n          Use strategies to maximize the utilization of development and test environments.\n        \n\n\n\n              Use minimum viable representative environments to develop and test potential improvements.\n            \n\n\n              Use serverless technologies if possible.\n            \n\n\n              Use On-Demand Instances to supplement your developer devices.\n            \n\n\n              Use instance types with burst capacity, Spot Instances, and other technologies to align build capacity with use.\n            \n\n\n              Adopt native cloud services for secure instance shell access rather than deploying fleets of bastion hosts.\n            \n\n\n              Automatically scale your build resources depending on your build jobs.\n            \n\n\nResources\n\nRelated documents:\n\n\n\n\nAWS Systems Manager Session Manager\n\n\n\nAmazon EC2 Burstable performance instances\n\n\n\nWhat\n          is AWS CloudFormation?\n\n\n\n          What is AWS CodeBuild?\n        \n\n\n          Instance Scheduler on AWS\n\n\nRelated videos:\n\n\n\n \n          Continuous Integration Best Practices\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS06-BP02 Keep your workload up-to-dateSUS06-BP04 Use managed device farms for testingDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sus_sus_dev_a4.html", "title": "SUS06-BP03 Increase utilization of build environments - AWS Well-Architected Framework", "description": "Increase the utilization of resources to develop, test, and build your workloads.", "language": "en-US"}}