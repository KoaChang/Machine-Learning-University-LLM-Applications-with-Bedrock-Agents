{"page_content": "Question\n              \n\n                Things to consider\n              \n\n\n\n\n                How is the data structured?\n              \n\n\n\n\n                      If the data is unstructured, consider an\n                      object-store such as\n                      Amazon S3 or a NoSQL database such as\n                      Amazon DocumentDB\n\n\n\n                      For key-value data, consider\n                      DynamoDB,\n                      Amazon ElastiCache for Redis or\n                      Amazon MemoryDB for Redis\n\n\n\n\n\n\n                What level of referential integrity is required?\n              \n\n\n\n\n                      For foreign key constraints, relational databases\n                      such as\n                      Amazon RDS and\n                      Aurora\n                      can provide this level of integrity.\n                    \n\n\n                      Typically, within a NoSQL data-model, you would\n                      de-normalize your data into a single document or\n                      collection of documents to be retrieved in a\n                      single request rather than joining across\n                      documents or tables.\u00a0\n                    \n\n\n\n\n\n                Is ACID (atomicity, consistency, isolation, durability)\n                compliance required?\n              \n\n\n\n\n                      If the ACID properties associated with relational\n                      databases are required, consider a relational\n                      database such as\n                      Amazon RDS and\n                      Aurora.\n                    \n\n\n                      If strong consistency is required for\n                      NoSQL\n                      database, you can use strongly consistent\n                      reads with\n                      DynamoDB.\n                    \n\n\n\n\n\n                How will the storage requirements change over time? How\n                does this impact scalability?\n              \n\n\n\n\n                      Serverless databases such as\n                      DynamoDB\n                      and\n                      Amazon Quantum Ledger Database (Amazon QLDB) will scale\n                      dynamically.\n                    \n\n\n                      Relational databases have upper bounds on\n                      provisioned storage, and often must be\n                      horizontally partitioned using mechanisms such as\n                      sharding once they reach these limits.\n                    \n\n\n\n\n\n                What is the proportion of read queries in relation to\n                write queries? Would caching be likely to improve\n                performance?\n              \n\n\n\n\n                      Read-heavy workloads can benefit from a caching\n                      layer, like\n                      ElastiCache\n                      or\n                      DAX\n                      if the database is DynamoDB.\n                    \n\n\n                      Reads can also be offloaded to read replicas with\n                      relational databases such as\n                      Amazon RDS.\n                    \n\n\n\n\n\n                Does storage and modification (OLTP - Online Transaction\n                Processing) or retrieval and reporting (OLAP - Online\n                Analytical Processing) have a higher priority?\n              \n\n\n\n\n                      For high-throughput read as-is transactional\n                      processing, consider a NoSQL database such as\n                      DynamoDB.\n                    \n\n\n                      For high-throughput and complex read patterns\n                      (like join) with consistency use Amazon RDS.\n                    \n\n\n                      For analytical queries, consider a columnar\n                      database such as\n                      Amazon Redshift or exporting the data to Amazon S3\n                      and performing analytics using\n                      Athena\n                      or\n                      Amazon QuickSight.\n                    \n\n\n\n\n\n                What level of durability does the data require?\n              \n\n\n\n\n                      Aurora automatically replicates your data across\n                      three Availability Zones within a Region, meaning\n                      your data is highly durable with less chance of\n                      data loss.\n                    \n\n\n                      DynamoDB is automatically replicated across\n                      multiple Availability Zones, providing high\n                      availability and data durability.\n                    \n\n\n                      Amazon S3 provides 11 nines of durability. Many\n                      database services, such as Amazon RDS and DynamoDB,\n                      support exporting data to Amazon S3 for long-term\n                      retention and archival.\n                    \n\n\n\n\n\n                Is there a desire to move away from commercial database\n                engines or licensing costs?\n              \n\n\n\n\n                      Consider open-source engines such as PostgreSQL\n                      and MySQL on Amazon RDS or Aurora.\n                    \n\n\n                      Leverage\n                      AWS Database Migration Service and\n                      AWS Schema Conversion Tool to perform migrations from commercial\n                      database engines to open-source\n                    \n\n\n\n\n\n                What is the operational expectation for the database? Is\n                moving to managed services a primary concern?\n              \n\n\n\n\n                      Leveraging Amazon RDS instead of Amazon EC2, and\n                      DynamoDB or Amazon DocumentDB instead of\n                      self-hosting a NoSQL database can reduce\n                      operational overhead.\n                    \n\n\n\n\n\n                How is the database currently accessed? Is it only\n                application access, or are there business intelligence\n                (BI) users and other connected off-the-shelf\n                applications?\n              \n\n\n\n\n                      If you have dependencies on external tooling then\n                      you may have to maintain compatibility with the\n                      databases they support. Amazon RDS is fully\n                      compatible with the difference engine versions\n                      that it supports including Microsoft SQL Server,\n                      Oracle, MySQL, and PostgreSQL.\n                    \n\n\n\n\n\n\n            Perform experiments and benchmarking in a non-production\n            environment to identify which data store can address your\n            workload requirements.\n          \n\nResources\n\nRelated documents:\n\n\n\n\nAmazon EBS Volume Types\n\n\n\nAmazon EC2 Storage\n\n\n\nAmazon EFS: Amazon EFS Performance\n\n\n\nAmazon FSx for Lustre Performance\n\n\n\nAmazon FSx for Windows File Server Performance\n\n\n\nAmazon S3 Glacier: S3 Glacier Documentation\n\n\n\nAmazon S3: Request Rate and Performance Considerations\n\n\n\nCloud\n          Storage with AWS\n\n\n\nAmazon EBS\n          I/O Characteristics\n\n\n\nCloud\n          Databases with AWS\u00a0\n\n\n\nAWS           Database Caching\u00a0\n\n\n\nDynamoDB Accelerator\n\n\n\nAmazon Aurora best practices\u00a0\n\n\n\nAmazon Redshift performance\u00a0\n\n\n\nAmazon Athena top 10 performance tips\u00a0\n\n\n\nAmazon Redshift Spectrum best practices\u00a0\n\n\n\nAmazon DynamoDB best practices\n\n\n\nChoose\n          between Amazon EC2 and Amazon RDS\n\n\n\n          Best Practices for Implementing Amazon ElastiCache\n        \n\n\nRelated videos:\n\n\n\n\nDeep\n          dive on Amazon EBS\n\n\n\nOptimize\n          your storage performance with Amazon S3\n\n\nModernize apps with purpose-built databases\n\n\n          Amazon Aurora storage demystified: How it all works\n        \n\n\n          Amazon DynamoDB deep dive: Advanced design patterns\n        \n\n\nRelated examples:\n\n\n\n\nAmazon EFS CSI Driver\n\n\n\nAmazon EBS CSI Driver\n\n\n\nAmazon EFS\n          Utilities\n\n\n\nAmazon EBS Autoscale\n\n\n\nAmazon S3 Examples\n\n\n\nOptimize\n          Data Pattern using Amazon Redshift Data Sharing\n\n\n\nDatabase\n          Migrations\n\n\n\nMS\n          SQL Server - AWS Database Migration Service (AWS DMS) Replication\n          Demo\n\n\n\nDatabase\n          Modernization Hands On Workshop\n\n\n\nAmazon Neptune Samples\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsData managementPERF03-BP02 Evaluate available configuration options for data\n  storeDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/performance-efficiency-pillar/perf_data_use_purpose_built_data_store.html", "title": "PERF03-BP01 Use a purpose-built data store that best supports your data access and storage requirements - Performance Efficiency Pillar", "description": "Understand data characteristics (like shareable, size, cache size, access patterns, latency, throughput, and persistence of data) to select the right purpose-built data stores (storage or database) for your workload.", "language": "en-US"}}