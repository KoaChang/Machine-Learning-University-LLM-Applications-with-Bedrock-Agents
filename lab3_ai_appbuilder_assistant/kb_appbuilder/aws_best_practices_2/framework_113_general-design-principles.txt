{"page_content": "General design principles - AWS Well-Architected FrameworkGeneral design principles - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkGeneral design principles\n      The Well-Architected Framework identifies a set of general design\n      principles to facilitate good design in the cloud:\n    \n\n\nStop guessing your capacity needs: If you make a poor\n          capacity decision when deploying a workload, you might end up sitting on expensive idle\n          resources or dealing with the performance implications of limited capacity. With cloud\n          computing, these problems can go away. You can use as much or as little capacity as you\n          need, and scale in and out automatically. \n\n\nTest systems at production\n            scale: In the cloud, you can create a\n          production-scale test environment on demand, complete your\n          testing, and then decommission the resources. Because you only\n          pay for the test environment when it's running, you can simulate\n          your live environment for a fraction of the cost of testing on\n          premises.\n        \n\n\nAutomate with architectural\n            experimentation in mind: Automation permits you to\n          create and replicate your workloads at low cost and avoid the\n          expense of manual effort. You can track changes to your\n          automation, audit the impact, and revert to previous parameters\n          when necessary.\n        \n\n\nConsider evolutionary architectures: In a traditional\n          environment, architectural decisions are often implemented as static, onetime events, with\n          a few major versions of a system during its lifetime. As a business and its context\n          continue to evolve, these initial decisions might hinder the system's ability to deliver\n          changing business requirements. In the cloud, the capability to automate and test on\n          demand lowers the risk of impact from design changes. This permits systems to evolve over\n          time so that businesses can take advantage of innovations as a standard practice. \n\n\nDrive architectures using data: In the cloud, you can\n          collect data on how your architectural choices affect the behavior of your workload.\n          This lets you make fact-based decisions on how to improve your workload. Your cloud\n          infrastructure is code, so you can use that data to inform your architecture choices and\n          improvements over time. \n\n\nImprove through game days:\n          Test how your architecture and processes perform by regularly\n          scheduling game days to simulate events in production. This will\n          help you understand where improvements can be made and can help\n          develop organizational experience in dealing with events.\n        \n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOn architectureThe pillars of the frameworkDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/general-design-principles.html", "title": "General design principles - AWS Well-Architected Framework", "description": "The Well-Architected Framework identifies a set of general design principles to facilitate good design in the cloud.", "language": "en-US"}}