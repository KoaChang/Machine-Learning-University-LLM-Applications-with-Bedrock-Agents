{"page_content": "SEC01-BP02 Secure account root user and properties - AWS Well-Architected FrameworkSEC01-BP02 Secure account root user and properties - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSEC01-BP02 Secure account root user and properties\n    The root user is the most privileged user in an AWS account, with\n    full administrative access to all resources within the account, and\n    in some cases cannot be constrained by security policies. Deactivating\n    programmatic access to the root user, establishing appropriate\n    controls for the root user, and avoiding routine use of the root\n    user helps reduce the risk of inadvertent exposure of the root\n    credentials and subsequent compromise of the cloud environment.\n  Desired outcome: Securing the root user helps reduce the\n    chance that accidental or intentional damage can occur through the misuse of root user\n    credentials. Establishing detective controls can also alert the appropriate personnel when\n    actions are taken using the root user.Common anti-patterns:\n\n Using the root user for tasks other than the few that require root user credentials.\u00a0\n      \n\n Neglecting to test contingency plans on a regular basis to verify the functioning of\n        critical infrastructure, processes, and personnel during an emergency. \n\n Only considering the typical account login flow and neglecting to consider or test\n        alternate account recovery methods. \n\n Not handling DNS, email servers, and telephone providers as part of the critical\n        security perimeter, as these are used in the account recovery flow. \n\nBenefits of establishing this best practice: Securing access to\n    the root user builds confidence that actions in your account are controlled and audited. \nLevel of risk exposed if this best practice is not established:\n    High \nImplementation guidance\n\n      AWS offers many tools to help secure your account. However,\n      because some of these measures are not turned on by default, you\n      must take direct action to implement them. Consider these\n      recommendations as foundational steps to securing your AWS account. As you implement these steps it\u2019s important that you\n      build a process to continuously assess and monitor the security\n      controls.\n    \n\n      When you first create an AWS account, you begin with one identity\n      that has complete access to all AWS services and resources in the\n      account. This identity is called the AWS account root user. You\n      can sign in as the root user using the email address and password\n      that you used to create the account. Due to the elevated access\n      granted to the AWS root user, you must limit use of the AWS root\n      user to perform tasks that\n      specifically\n      require it. The root user login credentials must be closely\n      guarded, and multi-factor authentication (MFA) should always be\n      used for the AWS account root user.\n    \n\n      In addition to the normal authentication flow to log into your\n      root user using a username, password, and multi-factor\n      authentication (MFA) device, there are account recovery flows to\n      log into your AWS account root user given access to the email\n      address and phone number associated with your account. Therefore,\n      it is equally important to secure the root user email account\n      where the recovery email is sent and the phone number associated\n      with the account. Also consider potential circular dependencies\n      where the email address associated with the root user is hosted on\n      email servers or domain name service (DNS) resources from the same\n      AWS account.\n    \n\n      When using AWS Organizations, there are multiple AWS accounts each\n      of which have a root user. One account is designated as the\n      management account and several layers of member accounts can then\n      be added underneath the management account. Prioritize securing\n      your management account\u2019s root user, then address your member\n      account root users. The strategy for securing your management\n      account\u2019s root user can differ from your member account root\n      users, and you can place preventative security controls on your\n      member account root users.\n    \n\nImplementation steps\n\n The following implementation steps are recommended to establish controls for the root\n        user. Where applicable, recommendations are cross-referenced to CIS AWS\n          Foundations benchmark version 1.4.0. In addition to these steps, consult AWS best\n          practice guidelines for securing your AWS account and resources. \n\nPreventative controls\n\n\n\n Set up accurate contact\n              information for the account. \n\n\n This information is used for the lost password recovery flow, lost MFA device\n                account recovery flow, and for critical security-related communications with your\n                team. \n\n Use an email address hosted by your corporate domain, preferably a distribution\n                list, as the root user\u2019s email address. Using a distribution list rather than an\n                individual\u2019s email account provides additional redundancy and continuity for access\n                to the root account over long periods of time. \n\n The phone number listed on the contact information should be a dedicated,\n                secure phone for this purpose. The phone number should not be listed or shared with\n                anyone. \n\n\n Do not create access keys for the root user. If access keys exist, remove them (CIS\n            1.4). \n\n\n Eliminate any long-lived programmatic credentials (access and secret keys) for\n                the root user. \n\n If root user access keys already exist, you should transition processes using\n                those keys to use temporary access keys from an AWS Identity and Access Management (IAM) role, then delete the root user access keys. \n\n\n Determine if you need to store credentials for the root user. \n\n\n If you are using AWS Organizations to create new member accounts, the initial password\n                for the root user on new member accounts is set to a random value that is not\n                exposed to you. Consider using the password reset flow from your AWS Organization\n                management account to gain access to the member account if needed. \n\n For standalone AWS accounts or the management AWS Organization account,\n                consider creating and securely storing credentials for the root user. Use MFA for\n                the root user. \n\n\n Use preventative controls for member account root users in AWS multi-account\n            environments. \n\n\n Consider using the\u00a0Disallow Creation of Root Access Keys for the Root User\u00a0preventative\n                guard rail for member accounts. \n\n Consider using the\u00a0Disallow Actions as a Root User\u00a0preventative guard rail for member\n                accounts. \n\n\n If you need credentials for the root user: \n\n\n Use a complex password. \n\n Turn on multi-factor authentication (MFA) for the root user, especially for\n                AWS Organizations management (payer) accounts (CIS 1.5). \n\n Consider hardware MFA devices for resiliency and security, as single use\n                devices can reduce the chances that the devices containing your MFA codes might be\n                reused for other purposes. Verify that hardware MFA devices powered by a battery are\n                replaced regularly. (CIS 1.6) \n\n\n To configure MFA for the root user, follow the instructions for creating\n                    either a\u00a0virtual MFA\u00a0or\u00a0hardware MFA device. \n\n\n Consider enrolling multiple MFA devices for backup.\u00a0Up to 8 MFA devices\n                  are allowed per account. \n\n\n Note that enrolling more than one MFA device for the root user\n                    automatically turns off the\u00a0flow for recovering\n                      your account if the MFA device is lost. \n\n\n Store the password securely, and consider circular dependencies if storing the\n                password electronically. Don\u2019t store the password in such a way that would require\n                access to the same AWS account to obtain it. \n\n\n Optional: Consider establishing a periodic password rotation schedule for the root\n            user. \n\n\n Credential management best practices depend on your regulatory and policy\n                requirements. Root users protected by MFA are not reliant on the password as a\n                single factor of authentication. \n\n\nChanging\n                  the root user password on a periodic basis reduces the risk that an\n                inadvertently exposed password can be misused. \n\n\n\nDetective controls\n\n\n\n Create alarms to detect use of the root credentials (CIS 1.7). Amazon GuardDuty can monitor and alert on root user API credential usage through the\n              RootCredentialUsage finding. \n\n Evaluate and implement the detective controls included in the AWS Well-Architected Security Pillar conformance pack for AWS Config, or if\n            using AWS Control Tower, the strongly\n              recommended controls available inside Control Tower. \n\n\nOperational guidance\n\n\n\n Determine who in the organization should have access to the root user credentials. \n\n\n Use a two-person rule so that no one individual has access to all necessary\n                credentials and MFA to obtain root user access. \n\n Verify that the organization, and not a single individual, maintains control\n                over the phone number and email alias associated with the account (which are used\n                for password reset and MFA reset flow). \n\n\n Use root user only by exception (CIS 1.7). \n\n\n The AWS root user must not be used for everyday tasks, even administrative\n                ones. Only log in as the root user to perform AWS tasks that require\n                  root user. All other actions should be performed by other users assuming\n                appropriate roles.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_securely_operate_aws_account.html", "title": "SEC01-BP02 Secure account root user and properties - AWS Well-Architected Framework", "description": "The root user is the most privileged user in an AWS account, with full administrative access to all resources within the account, and in some cases cannot be constrained by security policies. Deactivating programmatic access to the root user, establishing appropriate controls for the root user, and avoiding routine use of the root user helps reduce the risk of inadvertent exposure of the root credentials and subsequent compromise of the cloud environment.", "language": "en-US"}}