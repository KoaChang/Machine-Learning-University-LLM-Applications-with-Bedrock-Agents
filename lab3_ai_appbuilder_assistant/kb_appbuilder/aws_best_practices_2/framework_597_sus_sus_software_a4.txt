{"page_content": "SUS03-BP03 Optimize areas of code that consume the most time or resources - AWS Well-Architected FrameworkSUS03-BP03 Optimize areas of code that consume the most time or resources - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceImplementation stepsResourcesSUS03-BP03 Optimize areas of code that consume the most time or\n  resourcesOptimize your code that runs within different components of your \n    architecture to minimize resource usage while maximizing performance.\nCommon anti-patterns:\n\n\n\n        You ignore optimizing your code for resource usage.\n      \n\n\n        You usually respond to performance issues by increasing the resources.\n      \n\n\n        Your code review and development process does not track performance changes.\n      \n\nBenefits of establishing this best practice: Using \n    efficient code minimizes resource usage and improves performance.\n  \nLevel of risk exposed if this best practice\n      is not established: Medium\n  \nImplementation guidance\n\n      It is crucial to examine every functional area, including the code for a cloud architected application, to optimize its resource usage and performance. Continually monitor your workload\u00e2\u20ac\u2122s performance in build environments and production and identify opportunities to improve code snippets that have particularly high resource usage. Adopt a regular review process to identify bugs or anti-patterns within your code that use resources inefficiently. Leverage simple and efficient algorithms that produce the same results for your use case.\n    \nImplementation steps\n\n\n\n          While developing your workloads, adopt an automated code review process to improve quality and identify bugs and anti-patterns.\n        \n\n\n\n              Automate code reviews with Amazon CodeGuru Reviewer\n            \n\n\n              Detecting concurrency bugs with Amazon CodeGuru\n            \n\n\n              Raising code quality for Python applications using Amazon CodeGuru\n            \n\n\n\n          As you run your workloads, monitor resources to identify components with high resource requirements per unit of work as targets for code reviews.\n        \n\n\n          For code reviews, use a code profiler to identify the areas of code that use the most time or resources as targets for optimization.\n        \n\n\n\n              Reducing your organization's carbon footprint with Amazon CodeGuru Profiler\n            \n\n\n              Understanding memory usage in your Java application with Amazon CodeGuru Profiler\n            \n\n\n              Improving customer experience and reducing cost with Amazon CodeGuru Profiler\n            \n\n\n\n          Use the most efficient operating system and programming language for the workload. For details on energy efficient programming languages (including Rust), see Sustainability with Rust.\n        \n\n\n          Replace computationally intensive algorithms with simpler and more efficient version that produce the same result. \n        \n\n\n          Remove unnecessary code such as sorting and formatting.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nWhat\n          is Amazon CodeGuru Profiler?\n\n\n\nFPGA\n          instances\n\n\n\nThe AWS SDKs\n          on Tools to Build on AWS\n\n\n\nRelated videos:\n\n\n\n \n          Improve Code Efficiency Using Amazon CodeGuru Profiler\n        \n\n\n          Automate Code Reviews and Application Performance Recommendations with Amazon CodeGuru\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS03-BP02 Remove or refactor workload components with low or\n  no useSUS03-BP04 Optimize impact on devices and\n  equipmentDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sus_sus_software_a4.html", "title": "SUS03-BP03 Optimize areas of code that consume the most time or resources - AWS Well-Architected Framework", "description": "Optimize your code that runs within different components of your architecture to minimize resource usage while maximizing performance.", "language": "en-US"}}