{"page_content": "REL09-BP02 Secure and encrypt backups - Reliability PillarREL09-BP02 Secure and encrypt backups - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesREL09-BP02 Secure and encrypt backupsControl and detect access to backups using authentication and authorization. Prevent and detect if data integrity of backups is compromised using encryption.\nCommon anti-patterns:\n\n\n\n        Having the same access to the backups and restoration automation\n        as you do to the data.\n      \n\n\n        Not encrypting your backups.\n      \n\nBenefits of establishing this best\n    practice: Securing your backups prevents tampering with\n    the data, and encryption of the data prevents access to that data if\n    it is accidentally exposed.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Control and detect access to backups using authentication and authorization, such as AWS Identity and Access Management (IAM). Prevent and detect if data integrity of backups is compromised using encryption.\n    \n\n      Amazon S3 supports several methods of encryption of your data at\n      rest. Using server-side encryption, Amazon S3 accepts your objects\n      as unencrypted data, and then encrypts them as they are stored.\n      Using client-side encryption, your workload application is\n      responsible for encrypting the data before it is sent to Amazon S3.\n      Both methods allow you to use AWS Key Management Service (AWS KMS)\n      to create and store the data key, or you can provide your own key,\n      which you are then responsible for. Using AWS KMS, you can set\n      policies using IAM on who can and cannot access your data keys and\n      decrypted data.\n    \n\n      For Amazon RDS, if you have chosen to encrypt your databases, then\n      your backups are encrypted also. DynamoDB backups are always\n      encrypted. When using AWS Elastic Disaster Recovery, all data in transit and at rest is encrypted. With Elastic Disaster Recovery, data at rest can be encrypted using either the default Amazon EBS encryption Volume Encryption Key or a custom customer-managed key.\n    \n\nImplementation steps\n\n\n\n       Use encryption on each of your data stores. If your source data is\n       encrypted, then the backup will also be encrypted.\n     \n\n\nUse encryption in Amazon RDS.. You can configure encryption at rest using AWS Key Management Service\n              when you create an RDS instance. \n\nUse encryption on Amazon EBS volumes.. You can configure default encryption or specify\n              a unique key upon volume creation. \n\n Use the required Amazon DynamoDB encryption. DynamoDB encrypts all data at rest. You can\n              either use an AWS owned AWS KMS key or an AWS managed KMS key, specifying a key that\n              is stored in your account. \n\nEncrypt your data stored in Amazon EFS. Configure the encryption when you create your\n              file system. \n\n Configure the encryption in the source and destination Regions. You can configure\n              encryption at rest in Amazon S3 using keys stored in KMS, but the keys are Region-specific.\n              You can specify the destination keys when you configure the replication. \n\n\n              Choose whether to use the default or custom Amazon EBS encryption for Elastic Disaster Recovery. This option will encrypt your replicated data at rest on the Staging Area Subnet disks and the replicated disks.\n            \n\n       Implement least privilege permissions to access your backups.\n       Follow best practices to limit the access to the backups,\n       snapshots, and replicas in accordance with security best\n       practices.\n     \n\nResources\n\nRelated documents:\n\n\n\n\nAWS Marketplace: products that can be used for backup\n\n\n\nAmazon EBS Encryption\n\n\n\nAmazon S3: Protecting Data Using Encryption\n\n\n\nCRR\n          Additional Configuration: Replicating Objects Created with Server-Side Encryption (SSE) Using Encryption Keys stored in AWS KMS\n\n\n\nDynamoDB\n          Encryption at Rest\n\n\n\nEncrypting\n          Amazon RDS Resources\n\n\n\nEncrypting\n          Data and Metadata in Amazon EFS\n\n\n\nEncryption\n          for Backups in AWS\n\n\n\nManaging\n          Encrypted Tables\n\n\n\nSecurity\n          Pillar - AWS Well-Architected Framework\n\n\n\n          What is AWS Elastic Disaster Recovery?\n        \n\n\nRelated examples:\n\n\n\n\nWell-Architected\n          Lab - Implementing Bi-Directional Cross-Region Replication (CRR) for Amazon S3\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL09-BP01 Identify and back up all data that needs to be\n  backed up, or reproduce the data from sourcesREL09-BP03 Perform data backup automaticallyDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_backing_up_data_secured_backups_data.html", "title": "REL09-BP02 Secure and encrypt backups - Reliability Pillar", "description": "Control and detect access to backups using authentication and authorization. Prevent and detect if data integrity of backups is compromised using encryption.", "language": "en-US"}}