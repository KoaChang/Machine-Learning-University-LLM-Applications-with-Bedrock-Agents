{"page_content": "PERF02-BP02 Understand the available compute configuration and features - AWS Well-Architected FrameworkPERF02-BP02 Understand the available compute configuration and features - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceImplementation stepsResourcesPERF02-BP02 Understand the available compute configuration and\n  features\n    Understand the available configuration options and features for your\n    compute service to help you provision the right amount of resources\n    and improve performance efficiency.\n  \nCommon anti-patterns:\n\n\n\n        You do not evaluate compute options or available instance\n        families against workload characteristics.\n      \n\n\n        You over-provision compute resources to meet peak-demand\n        requirements.\n      \n\n    Benefits of establishing this best practice: Be familiar with AWS compute features and configurations so that you can use a compute solution optimized to meet your workload characteristics and needs.\nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Each compute solution has unique configurations and features\n      available to support different workload characteristics and\n      requirements. Learn how these options complement your workload,\n      and determine which configuration options are best for your\n      application. Examples of these options include instance family,\n      sizes, features (GPU, I/O), bursting, time-outs, function sizes,\n      container instances, and concurrency. If your workload has been\n      using the same compute option for more than four weeks and you\n      anticipate that the characteristics will remain the same in the\n      future, you can\n      use\u00a0AWS Compute Optimizer\u00a0 to find out if your current compute option is\n      suitable for the workloads from CPU and memory perspective.\n    \nImplementation steps\n\n\n\n          Understand workload requirements (like CPU need, memory, and\n          latency).\n        \n\n\n          Review AWS documentation and best practices to learn about\n          recommended configuration options that can help improve compute performance. Here are some key configuration\n          options to consider:\n        \n\n\n\n                  Configuration option\n                \n\n                  Examples\n                \n\n\n\n\n                  Instance type\n                \n\n\n\n\nCompute-optimized\u00a0instances\n                        are ideal for the workloads that require high higher\n                        vCPU to memory ratio.\u00a0\n                      \n\n\nMemory-optimized\u00a0instances\n                        deliver large amounts of memory to support memory\n                        intensive workloads.\n                      \n\n\nStorage-optimized\u00a0instances\n                        are designed for workloads that require high,\n                        sequential read and write access (IOPS) to local\n                        storage.\n                      \n\n\n\n\n\n                  Pricing model\n                \n\n\n\n\nOn-Demand\n                          Instances\u00a0let you use the compute capacity by\n                        the hour or second with no long-term commitment.\n                        These instances are good for bursting above\n                        performance baseline needs.\n                      \n\n\nSavings Plans offer significant savings over\n                        On-Demand Instances in exchange for a commitment to\n                        use a specific amount of compute power for a one or\n                        three-year period.\n                      \n\n\nSpot\n                          Instances\u00a0let you take advantage of unused\n                        instance capacity at a discount for your stateless,\n                        fault-tolerant workloads.\u00a0\n                      \n\n\n\n\nAuto Scaling\n\n                  Use\n                  Auto Scaling configuration to match compute resources to\n                  traffic patterns.\n                \n\n\n\n                  Sizing\n                \n\n\n\n\n                        Use\u00a0Compute Optimizer\u00a0to get a machine-learning powered\n                        recommendations on which compute configuration best\n                        matches your compute characteristics.\n                      \n\n\n                        Use\n                        AWS Lambda Power Tuning to select the best\n                        configuration for your Lambda function.\n                      \n\n\n\n\n\n                  Hardware-based compute accelerators\n                \n\n\n\n\nAccelerated\n                          computing instances\u00a0perform functions like\n                        graphics processing or data pattern matching more\n                        efficiently than CPU-based alternatives.\n                      \n\n\n                        For machine learning workloads, take advantage of\n                        purpose-built hardware that is specific to your\n                        workload, such\n                        as\u00a0AWS                     Trainium,\u00a0AWS                     Inferentia,\n                        and\u00a0Amazon EC2 DL1\n\n\n\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nCloud\n          Compute with AWS\u00a0\n\n\n\nAmazon EC2\n          Instance Types\u00a0\n\n\n\nProcessor\n          State Control for Your Amazon EC2 Instance\u00a0\n\n\n\nAmazon EKS\n          Containers: Amazon EKS Worker Nodes\u00a0\n\n\n\nAmazon ECS Containers: Amazon ECS Container Instances\u00a0\n\n\n\nFunctions:\n          Lambda Function Configuration\n\n\n\nRelated videos:\n\n\n\n\nAmazon EC2 foundations\n\n\n\nPowering\n          next-gen Amazon EC2: Deep dive into the Nitro system\u00a0\n\n\n\nOptimize\n          performance and cost for your AWS compute\n\n\n\nRelated examples:\n\n\n\n\nRightsizing\n          with Compute Optimizer and Memory utilization enabled\n\n\n\nAWS Compute Optimizer Demo code\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF02-BP01 Select the best compute options for your\n  workloadPERF02-BP03 Collect compute-related metricsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_compute_hardware_understand_compute_configuration_features.html", "title": "PERF02-BP02 Understand the available compute configuration and features - AWS Well-Architected Framework", "description": "Understand the available configuration options and features for your compute service to help you provision the right amount of resources and improve performance efficiency.", "language": "en-US"}}