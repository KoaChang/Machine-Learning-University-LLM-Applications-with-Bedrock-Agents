{"page_content": "Software and architecture - AWS Well-Architected FrameworkSoftware and architecture - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkSoftware and architectureImplement patterns for performing load smoothing and maintaining consistent high utilization of deployed resources to minimize the resources consumed. Components might become idle from lack of use because of changes in user behavior over time. Revise patterns and architecture to consolidate under-utilized components to increase overall utilization. Retire components that are no longer required. Understand the performance of your workload components, and optimize the components that consume the most resources. Be aware of the devices that your customers use to access your services, and implement patterns to minimize the need for device upgrades.  The following question focuses on these considerations for sustainability:\n\nSUS 3:\u00a0 How do you take advantage of software and architecture patterns to support your sustainability goals?\n\n\n\n\nImplement patterns for performing load smoothing and maintaining consistent high utilization of deployed resources to minimize the resources consumed. Components might become idle from lack of use because of changes in user behavior over time. Revise patterns and architecture to consolidate under-utilized components to increase overall utilization. Retire components that are no longer required. Understand the performance of your workload components, and optimize the components that consume the most resources. Be aware of the devices that your customers use to access your services, and implement patterns to minimize the need for device upgrades. \n\n\nOptimize software and architecture for asynchronous and scheduled jobs: Use efficient\n        software designs and architectures to minimize the average resources required per unit of\n        work. Implement mechanisms that result in even utilization of components to reduce resources\n        that are idle between tasks and minimize the impact of load spikes. Remove or refactor workload components with low or no use: Monitor workload activity to\n        identify changes in utilization of individual components over time. Remove components that\n        are unused and no longer required, and refactor components with little utilization, to limit\n        wasted resources.Optimize areas of code that consume the most time or resources: Monitor workload\n        activity to identify application components that consume the most resources. Optimize the\n        code that runs within these components to minimize resource usage while maximizing\n        performance. Optimize impact on customer devices and equipment: Understand the devices and equipment\n        that your customers use to consume your services, their expected lifecycle, and the financial and\n        sustainability impact of replacing those components. Implement software patterns and\n        architectures to minimize the need for customers to replace devices and upgrade equipment.\n        For example, implement new features using code that is backward compatible with earlier\n        hardware and operating system versions, or manage the size of payloads so they don\u2019t exceed\n        the storage capacity of the target device. Use software patterns and architectures that most effectively supports data access and storage\n        patterns: Understand how data is used within your workload, consumed by your users,\n        transferred, and stored. Select technologies to minimize data processing and storage\n        requirements. Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsAlignment to demandDataDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sus-software-architecture-patterns.html", "title": "Software and architecture - AWS Well-Architected Framework", "description": "Implement patterns for performing load smoothing and maintaining consistent high utilization of deployed resources to minimize the resources consumed. Components might become idle from lack of use because of changes in user behavior over time. Revise patterns and architecture to consolidate under-utilized components to increase overall utilization. Retire components that are no longer required. Understand the performance of your workload components, and optimize the components that consume the most resources. Be aware of the devices that your customers use to access your services, and implement patterns to minimize the need for device upgrades.", "language": "en-US"}}