{"page_content": "SEC01-BP01 Separate workloads using accounts - Security PillarSEC01-BP01 Separate workloads using accounts - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesSEC01-BP01 Separate workloads using accounts\n      Establish common guardrails and isolation between environments\n      (such as production, development, and test) and workloads through\n      a multi-account strategy. Account-level separation is strongly\n      recommended, as it provides a strong isolation boundary for\n      security, billing, and access.\n    Desired outcome: An account structure that isolates cloud\n    operations, unrelated workloads, and environments into separate accounts, increasing security\n    across the cloud infrastructure.Common anti-patterns:\n\n Placing multiple unrelated workloads with different data sensitivity levels into the\n        same account.\n\n Poorly defined organizational unit (OU) structure.\nBenefits of establishing this best practice:\n\n Decreased scope of impact if a workload is inadvertently accessed.\n\n Central governance of access to AWS services, resources, and Regions.\n\n Maintain security of the cloud infrastructure with policies and centralized\n        administration of security services.\n\n Automated account creation and maintenance process.\n\n Centralized auditing of your infrastructure for compliance and regulatory\n        requirements.\n\nLevel of risk exposed if this best practice is not established:\n    High \nImplementation guidance\n\n      AWS accounts provide a security isolation boundary between\n      workloads or resources that operate at different sensitivity\n      levels. AWS provides tools to manage your cloud workloads at\n      scale through a multi-account strategy to leverage this\n      isolation boundary. For guidance on the concepts, patterns,\n      and implementation of a multi-account strategy on AWS, see\n      Organizing\n        Your AWS Environment Using Multiple Accounts.\n    \n\n      When you have multiple AWS accounts under central management,\n      your accounts should be organized into a hierarchy defined by\n      layers of organizational units (OUs). Security controls can\n      then be organized and applied to the OUs and member accounts,\n      establishing consistent preventative controls on member\n      accounts in the organization. The security controls are\n      inherited, allowing you to filter permissions available to\n      member accounts located at lower levels of an OU hierarchy. A\n      good design takes advantage of this inheritance to reduce the\n      number and complexity of security policies required to achieve\n      the desired security controls for each member account.\n    \n\nAWS Organizations and\n      AWS Control Tower are two services that you can use to\n      implement and manage this multi-account structure in your AWS\n      environment. AWS Organizations allows you to organize accounts\n      into a hierarchy defined by one or more layers of OUs, with\n      each OU containing a number of member accounts.\n      Service\n        control policies (SCPs) allow the organization\n      administrator to establish granular preventative controls on\n      member accounts, and\n      AWS Config can be used to establish proactive and detective\n      controls on member accounts. Many AWS services\n      integrate\n        with AWS Organizations to provide delegated\n      administrative controls and performing service-specific tasks\n      across all member accounts in the organization.\n    \n\n      Layered on top of AWS Organizations,\n      AWS Control Tower provides a one-click best practices setup\n      for a multi-account AWS environment with a\n      landing\n        zone. The landing zone is the entry point to the\n      multi-account environment established by Control Tower.\n      Control Tower provides several\n      benefits\n      over AWS Organizations. Three benefits that provide improved\n      account governance are:\n    \n\n\n Integrated mandatory security controls that are automatically applied to accounts\n          admitted into the organization. \n\n Optional controls that can be turned on or off for a given set of OUs. \n\n\nAWS Control Tower Account Factory provides automated\n          deployment of accounts containing pre-approved baselines and\n          configuration options inside your organization.\n        \n\n\nImplementation steps\n\n\n\n\nDesign an organizational unit\n            structure: A properly designed organizational\n          unit structure reduces the management burden required to\n          create and maintain service control policies and other\n          security controls. Your organizational unit structure should\n          be\n          aligned\n            with your business needs, data sensitivity, and workload\n            structure.\n        \n\n\nCreate a landing zone for your\n            multi-account environment: A landing zone\n          provides a consistent security and infrastructure foundation\n          from which your organization can quickly develop, launch,\n          and deploy workloads. You can use a\n          custom-built\n            landing zone or AWS Control Tower to orchestrate your\n          environment.\n        \n\n\nEstablish guardrails:\n          Implement consistent security guardrails for your\n          environment through your landing zone. AWS Control Tower\n          provides a list of\n          mandatory\n          and\n          optional\n          controls that can be deployed. Mandatory controls are\n          automatically deployed when implementing Control Tower.\n          Review the list of highly recommended and optional controls,\n          and implement controls that are appropriate to your needs.\n        \n\n\nRestrict access to newly added\n            Regions: For new AWS Regions, IAM resources such\n          as users and roles are only propagated to the Regions that\n          you specify. This action can be performed through the\n          console\n            when using Control Tower, or by adjusting\n          IAM\n            permission policies in AWS Organizations.\n        \n\n\nConsider AWS\n            CloudFormation\n              StackSets: StackSets help you deploy\n          resources including IAM policies, roles, and groups into\n          different AWS accounts and Regions from an approved\n          template.\n        \n\nResources\nRelated best practices:\n\n\n\nSEC02-BP04 Rely on a centralized identity provider\n\nRelated documents:\n\n\n\n\nAWS Control Tower\n\n\n\nAWS               Security Audit Guidelines\n\n\n\nIAM\n            Best Practices\n\n\n\nUse\n            CloudFormation StackSets to provision resources across\n            multiple AWS accounts and regions\n\n\n\nOrganizations\n            FAQ\n\n\n\nAWS Organizations terminology and concepts\n\n\n\nBest\n            Practices for Service Control Policies in an AWS Organizations Multi-Account Environment\n\n\n\nAWS               Account Management Reference Guide\n\n\n\nOrganizing\n            Your AWS Environment Using Multiple Accounts\n\n\nRelated videos:\n\n\n\n\nEnable AWS\n            adoption at scale with automation and governance\n\n\n\nSecurity\n            Best Practices the Well-Architected Way\n\n\n\nBuilding\n            and Governing Multiple Accounts using AWS Control Tower\n\n\n\nEnable Control Tower for Existing\n            Organizations\n\n\nRelated workshops:\n\n\n\n\nControl\n            Tower Immersion Day\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsAWS account management and separationSEC01-BP02 Secure account root user and propertiesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/sec_securely_operate_multi_accounts.html", "title": "SEC01-BP01 Separate workloads using accounts - Security Pillar", "description": "Establish common guardrails and isolation between environments (such as production, development, and test) and workloads through a multi-account strategy. Account-level separation is strongly recommended, as it provides a strong isolation boundary for security, billing, and access.", "language": "en-US"}}