{"page_content": "SUS02-BP06 Implement buffering or throttling to flatten the demand curve - AWS Well-Architected FrameworkSUS02-BP06 Implement buffering or throttling to flatten the demand curve - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSUS02-BP06 Implement buffering or throttling to flatten the demand curveBuffering and throttling flatten the demand curve and reduce the provisioned capacity required for your workload. \nCommon anti-patterns:\n\n\nYou process the client requests immediately while it is not needed.\n\nYou do not analyze the requirements for client requests.\n\nBenefits of establishing this best practice: Flattening the demand curve reduce the required provisioned capacity for the workload. Reducing the provisioned capacity means less energy consumption and less environmental impact.\n  \nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\n\n      Flattening the workload demand curve can help you to reduce the provisioned capacity for a workload and reduce its environmental impact. Assume a workload with the demand curve shown in below figure. This workload has two peaks, and to handle those peaks, the resource capacity as shown by orange line is provisioned.  The resources and energy used for this workload is not indicated by the area under the demand curve, but the area under the provisioned capacity line, as provisioned capacity is needed to handle those two peaks.\n    \n\n\nDemand curve with two distinct peaks that require high provisioned capacity.\n\n \n\n      You can use buffering or throttling to modify the demand curve and smooth out the peaks, which means less provisioned capacity and less energy consumed. Implement throttling when your clients can perform retries. Implement buffering to store the request and defer processing until a later time. \n    \n\n\nThrottling's effect on the demand curve and provisioned capacity.\n\n \n\nImplementation steps\n\n\n\n\n          Analyze the client requests to determine how to respond to them. Questions to consider include:\n        \n\n\n\n              Can this request be processed asynchronously?\n            \n\n\n              Does the client have retry capability?\n            \n\n\n\n          If the client has retry capability, then you can implement throttling, which tells the source that if it cannot service the request at the current time, it should try again later. \n        \n\n\n\n              You can use Amazon API Gateway to implement throttling. \n            \n\n\n\n          For clients that cannot perform retries, a buffer needs to be implemented to flatten the demand curve. A buffer defers request processing, allowing applications that run at different rates to communicate effectively. A buffer-based approach uses a queue or a stream to accept messages from producers. Messages are read by consumers and processed, allowing the messages to run at the rate that meets the consumers\u00e2\u20ac\u2122 business requirements. \n        \n\n\n\nAmazon Simple Queue Service (Amazon SQS) is a managed service that provides queues that allow a single consumer to read individual messages.\n            \n\n\nAmazon Kinesis provides a stream that allows many consumers to read the same messages.\n            \n\n\n\n          Analyze the overall demand, rate of change, and required response time to right size the throttle or buffer required.\n        \n\nResources\n\nRelated documents:\n\n\n\n\n          Getting started with Amazon SQS\n        \n\n\n          Application integration Using Queues and Messages\n        \n\n\nRelated videos:\n\n\n\n\n          Choosing the Right Messaging Service for Your Distributed App\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS02-BP05 Optimize team member resources for activities\n  performedSoftware and architectureDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sus_sus_user_a7.html", "title": "SUS02-BP06 Implement buffering or throttling to flatten the demand curve - AWS Well-Architected Framework", "description": "Buffering and throttling flatten the demand curve and reduce the provisioned capacity required for your workload.", "language": "en-US"}}