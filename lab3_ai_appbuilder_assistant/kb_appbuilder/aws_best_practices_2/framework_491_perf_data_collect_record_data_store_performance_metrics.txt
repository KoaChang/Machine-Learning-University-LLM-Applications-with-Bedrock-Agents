{"page_content": "PERF03-BP03 Collect and record data store performance metrics - AWS Well-Architected FrameworkPERF03-BP03 Collect and record data store performance metrics - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceImplementation stepsResourcesPERF03-BP03 Collect and record data store performance\n  metrics\n    Track and record relevant performance metrics for your data store to\n    understand how your data management solutions are performing. These\n    metrics can help you optimize your data store, verify that your\n    workload requirements are met, and provide a clear overview on how\n    the workload performs.\n  \nCommon anti-patterns:\n\n\n\n        You only use manual log file searching for metrics.\n      \n\n\n        You only publish metrics to internal tools used by your team and\n        don\u2019t have a comprehensive picture of your workload.\n      \n\n\n        You only use the default metrics recorded by your selected\n        monitoring software.\n      \n\n\n        You only review metrics when there is an issue.\n      \n\n\n        You only monitor system-level metrics and do not capture data\n        access or usage metrics.\n      \n\nBenefits of establishing this best\n    practice: Establishing a performance baseline helps you\n    understand the normal behavior and requirements of workloads.\n    Abnormal patterns can be identified and debugged faster, improving\n    the performance and reliability of the data store.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      To monitor the performance of your data stores, you must record\n      multiple performance metrics over a period of time. This allows\n      you to detect anomalies, as well as measure performance against\n      business metrics to verify you are meeting your workload needs.\n    \n\n      Metrics should include both the underlying system that is\n      supporting the data store and the database metrics. The underlying\n      system metrics might include CPU utilization, memory, available\n      disk storage, disk I/O, cache hit ratio, and network inbound and\n      outbound metrics, while the data store metrics might include\n      transactions per second, top queries, average queries rates,\n      response times, index usage, table locks, query timeouts, and\n      number of connections open. This data is crucial to understand how\n      the workload is performing and how the data management solution is\n      used. Use these metrics as part of a data-driven approach to tune\n      and optimize your workload's resources.\u00a0\n    \n\n      Use tools, libraries, and systems that record performance\n      measurements related to database performance.\n    \nImplementation steps\n\n\n\n          Identify the key performance metrics for your data store to\n          track.\n        \n\n\n\nAmazon S3 Metrics and dimensions\n\n\n\nMonitoring\n              metrics for in an Amazon RDS instance\n\n\n\nMonitoring DB load with Performance Insights on Amazon RDS\n\n\n\nOverview of Enhanced\n              Monitoring\n\n\n\nDynamoDB\n              Metrics and dimensions\n\n\n\nMonitoring\n              DynamoDB Accelerator\n\n\n\nMonitoring\n                Amazon MemoryDB for Redis with Amazon CloudWatch\n\n\n\nWhich Metrics Should I Monitor?\n\n\n\nMonitoring\n              Amazon Redshift cluster performance\n\n\n\nTimestream\n              metrics and dimensions\n\n\n\nAmazon CloudWatch metrics for Amazon Aurora\n\n\n\nLogging and monitoring in Amazon Keyspaces (for Apache Cassandra)\n\n\n\nMonitoring\n              Amazon Neptune Resources\n\n\n\n\n          Use an approved logging and monitoring solution to collect\n          these metrics.\n          Amazon CloudWatch can collect metrics across the resources in\n          your architecture. You can also collect and publish custom\n          metrics to surface business or derived metrics. Use CloudWatch\n          or third-party solutions to set alarms that indicate when\n          thresholds are breached.\n        \n\n\n          Check if data store monitoring can benefit from a machine\n          learning solution that detects performance anomalies.\n        \n\n\n\nAmazon DevOps\u00a0Guru for Amazon RDS provides visibility into\n              performance issues and makes recommendations for\n              corrective actions.\n            \n\n\n\n          Configure data retention in your monitoring and logging\n          solution to match your security and operational goals.\n        \n\n\n\nDefault\n              data retention for CloudWatch metrics\n\n\n\nDefault\n              data retention for CloudWatch Logs\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nAWS           Database Caching\n\n\n\nAmazon Athena top 10 performance tips\n\n\n\nAmazon Aurora best practices\n\n\n\nDynamoDB Accelerator\n\n\n\nAmazon DynamoDB best practices\n\n\n\nAmazon Redshift Spectrum best practices\n\n\n\nAmazon Redshift performance\n\n\n\nCloud\n          Databases with AWS\n\n\n\nAmazon RDS Performance Insights\n\n\n\nRelated videos:\n\n\n\n\nAWS           purpose-built databases\n\n\n\nAmazon Aurora storage demystified: How it all works\n\n\n\nAmazon DynamoDB deep dive: Advanced design patterns\n\n\n\nBest\n          Practices for Monitoring Redis Workloads on Amazon ElastiCache\n\n\n\nRelated examples:\n\n\n\n\nLevel\n          100: Monitoring with CloudWatch Dashboards\n\n\n\nAWS           Dataset Ingestion Metrics Collection Framework\n\n\n\nAmazon RDS Monitoring Workshop\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF03-BP02 Evaluate available configuration options for data\n  storePERF03-BP04 Implement strategies to improve query performance\n  in data storeDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_data_collect_record_data_store_performance_metrics.html", "title": "PERF03-BP03 Collect and record data store performance metrics - AWS Well-Architected Framework", "description": "Track and record relevant performance metrics for your data store to understand how your data management solutions are performing. These metrics can help you optimize your data store, verify that your workload requirements are met, and provide a clear overview on how the workload performs.", "language": "en-US"}}