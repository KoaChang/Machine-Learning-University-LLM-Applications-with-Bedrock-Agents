{"page_content": "Example implementations for availability goals - Reliability PillarExample implementations for availability goals - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkDependency selectionExample implementations for availability goals\n    In this section, we\u2019ll review workload designs using the deployment\n    of a typical web application that consists of a reverse proxy,\n    static content on Amazon S3, an application server, and a SQL\n    database for persistent storage of data. For each availability\n    target, we provide an example implementation. This workload could\n    instead use containers or AWS Lambda for compute and NoSQL (such as\n    Amazon DynamoDB) for the database, but the approaches are similar.\n    In each scenario, we demonstrate how to meet availability goals\n    through workload design for these topics:\n  \n\n\nTopic\n\n\nFor more information, see this\n            section\n\n\n\n\n\n            Monitor resources\n          \n\nMonitor workload resources\n\n\n\n\n            Adapt to changes in demand\n          \nDesign your workload to adapt to changes in demand\n\n\n\n\n            Implement change\n          \nImplement change\n\n\n\n\n            Back up data\n          \nBack up data\n\n\n\n\n            Architect for resiliency\n          \n\nUse fault isolation to protect\n        your workload\n\nDesign your workload to withstand component failures\n\n\n\n\n Test reliability\nTest reliability\n\n\n\n\n            Plan for disaster recovery (DR)\n          \nPlan for Disaster Recovery (DR)\n\n\n\nDependency selection\n We have chosen to use Amazon EC2 for our applications. We will show how using Amazon RDS and\n      multiple Availability Zones improves the availability of our applications. We will use\n      Amazon Route\u00a053 for DNS. When we use multiple Availability Zones, we will use Elastic Load Balancing. Amazon S3 is used\n      for backups and static content. As we design for higher reliability, we must use services with\n      higher availability themselves. See Appendix A:\n        Designed-For Availability for Select AWS Services for the design goals for the\n      respective AWS services. \n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL13-BP05 Automate recoverySingle-Region scenariosDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/example-implementations-for-availability-goals.html", "title": "Example implementations for availability goals - Reliability Pillar", "description": "In this section, we\u2019ll review workload designs using the deployment of a typical web application that consists of a reverse proxy, static content on Amazon S3, an application server, and a SQL database for persistent storage of data.", "language": "en-US"}}