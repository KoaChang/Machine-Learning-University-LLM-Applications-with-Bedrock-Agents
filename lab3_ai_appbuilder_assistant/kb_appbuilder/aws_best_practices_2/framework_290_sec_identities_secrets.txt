{"page_content": "Periodically review your code base and re-scan to verify no\n            new secrets have been added to the code.\n          \n\n\n\n                Consider using a tool such as\n                git-secrets\n                to prevent committing new secrets to your source code\n                repository.\n              \n\n\n\nMonitor\n              Secrets Manager activity for indications of unexpected\n            usage, inappropriate secret access, or attempts to delete\n            secrets.\n          \n\n\n            Reduce human exposure to credentials. Restrict access to read,\n            write, and modify credentials to an IAM role dedicated for\n            this purpose, and only provide access to assume the role to a\n            small subset of operational users.\n          \n\nResources\n\nRelated best practices:\n\n\n\nSEC02-BP02 Use temporary credentials\n\nSEC02-BP05 Audit and rotate credentials periodically\n\n\nRelated documents:\n\n\n\n\nGetting\n            Started with AWS Secrets Manager\n\n\n\nIdentity\n            Providers and Federation\n\n\n\nAmazon CodeGuru Introduces Secrets Detector\n\n\n\nHow\n            AWS Secrets Manager uses AWS Key Management Service\n\n\n\nSecret\n            encryption and decryption in Secrets Manager\n\n\n\nSecrets Manager blog entries\n\n\n\nAmazon RDS announces integration with AWS Secrets Manager\n\n\n\nRelated videos:\n\n\n\n\nBest\n            Practices for Managing, Retrieving, and Rotating Secrets at\n            Scale\n\n\n\nFind\n            Hard-Coded Secrets Using Amazon CodeGuru Secrets\n            Detector\n\n\n\nSecuring\n            Secrets for Hybrid Workloads Using AWS Secrets Manager\n\n\n\nRelated workshops:\n\n\n\n\nStore,\n            retrieve, and manage sensitive credentials in AWS Secrets Manager\n\n\n\nAWS Systems Manager Hybrid Activations\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC02-BP02 Use temporary credentialsSEC02-BP04 Rely on a centralized identity providerDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_identities_secrets.html", "title": "SEC02-BP03 Store and use secrets securely - AWS Well-Architected Framework", "description": "A workload requires an automated capability to prove its identity to databases, resources, and third-party services. This is accomplished using secret access credentials, such as API access keys, passwords, and OAuth tokens. Using a purpose-built service to store, manage, and rotate these credentials helps reduce the likelihood that those credentials become compromised.", "language": "en-US"}}