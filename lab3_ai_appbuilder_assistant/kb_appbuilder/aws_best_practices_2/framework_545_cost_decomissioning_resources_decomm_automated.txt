{"page_content": "COST04-BP04 Decommission resources automatically - AWS Well-Architected FrameworkCOST04-BP04 Decommission resources automatically - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesCOST04-BP04 Decommission resources automatically\n    Design your workload to gracefully handle resource termination as\n    you identify and decommission non-critical resources, resources that\n    are not required, or resources with low utilization.\n  \nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\nUse automation to reduce or remove the associated costs of the decommissioning process.\n      Designing your workload to perform automated decommissioning will reduce the overall workload\n      costs during its lifetime. You can use Amazon EC2 Auto Scaling or Application Auto Scaling to perform the decommissioning process. You can also implement custom code\n      using the API or SDK to decommission\n      workload resources automatically.\n\nModern applications are built serverless-first, a strategy that prioritizes the adoption of \n      serverless services. AWS developed serverless services for all three layers of your stack: \n      compute, integration, and data stores. Using serverless architecture will allow you to save \n      costs during low-traffic periods with scaling up and down automatically. \n    \nImplementation steps\n\n\n Implement Amazon EC2 Auto Scaling or Application Auto Scaling: For resources that\n          are supported, configure them with Amazon EC2 Auto Scaling or Application Auto Scaling.  These services can help you\n          optimize your utilization and cost efficiencies when consuming AWS services. When demand\n          drops, these services will automatically remove any excess resource capacity so you avoid\n          overspending.\n\n Configure CloudWatch to terminate instances: Instances can\n          be configured to terminate using CloudWatch alarms. Using the metrics from the decommissioning\n          process, implement an alarm with an Amazon Elastic Compute Cloud action. Verify the operation in a\n          non-production environment before rolling out. \n\n\nImplement code within the workload: You can use the AWS\n          SDK or AWS CLI to decommission workload resources. Implement code within the application\n          that integrates with AWS and terminates or removes resources that are no longer used. \n\n\nUse serverless services: Prioritize building serverless \n            architectures and event-driven architecture on AWS to build and run your applications. \n          AWS offers multiple serverless technology services that inherently provide automatically \n          optimized resource utilization and automated decommissioning (scale in and scale out). \n          With serverless applications, resource utilization is automatically optimized and you \n          never pay for over-provisioning.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nAmazon EC2 Auto Scaling\n\n\n\nGetting Started with Amazon EC2 Auto Scaling\n\n\n\nApplication Auto Scaling\n\n\n\nAWS Trusted Advisor\n\n\n\nServerless on AWS\n\n\n\nCreate\n          Alarms to Stop, Terminate, Reboot, or Recover an\n          Instance\n\n\n\nAdding terminate actions to Amazon CloudWatch alarms\n\n\n\nRelated examples:\n\n\n\n\nScheduling automatic deletion of AWS CloudFormation stacks\n\n\n\nWell-Architected Labs \u00e2\u20ac\u201c Decommission resources automatically (Level 100)\n\n\n\nServian AWS Auto Cleanup\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsCOST04-BP03 Decommission resourcesCOST04-BP05 Enforce data retention policiesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/cost_decomissioning_resources_decomm_automated.html", "title": "COST04-BP04 Decommission resources automatically - AWS Well-Architected Framework", "description": "Design your workload to gracefully handle resource termination as you identify and decommission non-critical resources, resources that are not required, or resources with low utilization.", "language": "en-US"}}