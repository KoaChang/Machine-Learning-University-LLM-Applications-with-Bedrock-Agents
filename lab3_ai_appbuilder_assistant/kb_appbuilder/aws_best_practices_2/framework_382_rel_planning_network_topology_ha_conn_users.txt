{"page_content": "REL02-BP01 Use highly available network connectivity for your workload public endpoints - AWS Well-Architected FrameworkREL02-BP01 Use highly available network connectivity for your workload public endpoints - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL02-BP01 Use highly available network connectivity for your\n  workload public endpoints\n    Building highly available network connectivity to public endpoints of your workloads can help you reduce downtime due to loss of connectivity and improve the availability and SLA of your workload. To achieve this, use highly available DNS, content delivery networks (CDNs), API gateways, load balancing, or reverse proxies.\n  \nDesired outcome: It is critical to plan, build, and operationalize highly available network connectivity for your public endpoints. If your workload becomes unreachable due to a loss in connectivity, even if your workload is running and available, your customers will see your system as down. By combining the highly available and resilient network connectivity for your workload\u2019s public endpoints, along with a resilient architecture for your workload itself, you can provide the best possible availability and service level for your customers.\n  \n    AWS Global Accelerator, Amazon CloudFront, Amazon API Gateway, AWS Lambda Function URLs, AWS AppSync APIs, and Elastic Load Balancing (ELB) all provide highly available public endpoints. Amazon Route\u00a053 provides a highly available DNS service for domain name resolution to verify that your public endpoint addresses can be resolved.\n  \n    You can also evaluate AWS Marketplace software appliances for load balancing and proxying.\n  \nCommon anti-patterns:\n\n\nDesigning a highly available workload without planning out DNS and network connectivity for high availability.\n\n Using public internet addresses on individual instances or containers and managing the connectivity to them with DNS.\n\n Using IP addresses instead of domain names for locating services.\n\n\n        Not testing out scenarios where connectivity to your public endpoints is lost.\n      \n\n\n        Not analyzing network throughput needs and distribution patterns.\n      \n\n\n        Not testing and planning for scenarios where internet network connectivity to your public endpoints of your workload might be interrupted.\n      \n\n\n        Providing content (like web pages, static assets, or media files) to a large geographic area and not using a content delivery network. \n      \n\n\n        Not planning for distributed denial of service (DDoS) attacks. DDoS attacks risk shutting out legitimate traffic and lowering availability for your users.\n      \n\nBenefits of establishing this best\n      practice: Designing for highly available and resilient network connectivity ensures that your workload is accessible and available to your users.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      At the core of building highly available network connectivity to your public endpoints is the routing of the traffic. To verify your traffic is able to reach the endpoints, the DNS must be able to resolve the domain names to their corresponding IP addresses. Use a highly available and scalable Domain Name System (DNS) such as Amazon Route\u00a053 to manage your domain\u2019s DNS records. You can also use health checks provided by Amazon Route\u00a053. The health checks verify that your application is reachable, available, and functional, and they can be set up in a way that they mimic your user\u2019s behavior, such as requesting a web page or a specific URL. In case of failure, Amazon Route\u00a053 responds to DNS resolution requests and directs the traffic to only healthy endpoints. You can also consider using Geo DNS and Latency Based Routing capabilities offered by Amazon Route\u00a053.\n    \n\n      To verify that your workload itself is highly available, use Elastic Load Balancing (ELB). Amazon Route\u00a053 can be used to target traffic to ELB, which distributes the traffic to the target compute instances. You can also use Amazon API Gateway along with AWS Lambda for a serverless solution. Customers can also run workloads in multiple AWS Regions. With multi-site active/active pattern, the workload can serve traffic from multiple Regions. With a multi-site active/passive pattern, the workload serves traffic from the active region while data is replicated to the secondary region and becomes active in the event of a failure in the primary region. Route\u00a053 health checks can then be used to control DNS failover from any endpoint in a primary Region to an endpoint in a secondary Region, verifying that your workload is reachable and available to your users.\n    \n\n      Amazon CloudFront provides a simple API for distributing content with low latency and high data transfer rates by serving requests using a network of edge locations around the world. Content delivery networks (CDNs) serve customers by serving content located or cached at a location near to the user. This also improves availability of your application as the load for content is shifted away from your servers over to CloudFront\u2019s edge locations. The edge locations and regional edge caches hold cached copies of your content close to your viewers resulting in quick retrieval and increasing reachability and availability of your workload.\n    \n\n      For workloads with users spread out geographically, AWS Global Accelerator helps you improve the availability and performance of the applications. AWS Global Accelerator provides Anycast static IP addresses that serve as a fixed entry point to your application hosted in one or more AWS Regions. This allows traffic to ingress onto the AWS global network as close to your users as possible, improving reachability and availability of your workload. AWS Global Accelerator also monitors the health of your application endpoints by using TCP, HTTP, and HTTPS health checks. Any changes in the health or configuration of your endpoints permit redirection of user traffic to healthy endpoints that deliver the best performance and availability to your users. In addition, AWS Global Accelerator has a fault-isolating design that uses two static IPv4 addresses that are serviced by independent network zones increasing the availability of your applications.\n    \n\n      To help protect customers from DDoS attacks, AWS provides AWS Shield Standard. Shield Standard comes automatically turned on and protects from common infrastructure (layer 3 and 4) attacks like SYN/UDP floods and reflection attacks to support high availability of your applications on AWS. For additional protections against more sophisticated and larger attacks (like UDP floods), state exhaustion attacks (like TCP SYN floods), and to help protect your applications running on Amazon Elastic Compute Cloud (Amazon EC2), Elastic Load Balancing (ELB), Amazon CloudFront, AWS Global Accelerator, and Route\u00a053, you can consider using AWS Shield Advanced. For protection against Application layer attacks like HTTP POST or GET floods, use AWS WAF. AWS WAF can use IP addresses, HTTP headers, HTTP body, URI strings, SQL injection, and cross-site scripting conditions to determine if a request should be blocked or allowed.\n    \n\nImplementation steps\n\n\n\n\n          Set up highly available DNS: Amazon Route\u00a053 is a highly available and scalable domain name system (DNS) web service. Route\u00a053 connects user requests to internet applications running on AWS or on-premises. For more information, see configuring Amazon Route\u00a053 as your DNS service. \n        \n\n\n          Setup health checks: When using Route\u00a053, verify that only healthy targets are resolvable. Start by creating Route\u00a053 health checks and configuring DNS failover. The following aspects are important to consider when setting up health checks: \n        \n\n\n\n              How Amazon Route\u00a053 determines whether a health check is healthy\n            \n\n\n              Creating, updating, and deleting health checks\n            \n\n\n              Monitoring health check status and getting notifications\n            \n\n\n              Best practices for Amazon Route\u00a053 DNS\n            \n\n\n\n          Connect your DNS service to your endpoints.\n        \n\n\n\n              When using Elastic Load Balancing as a target for your traffic, create an alias record using Amazon Route\u00a053 that points to your load balancer\u2019s regional endpoint. During the creation of the alias record, set the Evaluate target health option to Yes.\n            \n\n\n              For serverless workloads or private APIs when API Gateway is used, use Route\u00a053 to direct traffic to API Gateway.\n            \n\n\n\n          Decide on a content delivery network.\n        \n\n\n\n              For delivering content using edge locations closer to the user, start by understanding how CloudFront delivers content.\n            \n\n\n              Get started with a simple CloudFront distribution. CloudFront then knows where you want the content to be delivered from, and the details about how to track and manage content delivery. The following aspects are important to understand and consider when setting up CloudFront distribution:\n            \n\n\n\n                  How caching works with CloudFront edge locations\n                \n\n\n                  Increasing the proportion of requests that are served directly from the CloudFront caches (cache hit ratio)\n                \n\n\n                  Using Amazon CloudFront Origin Shield\n                \n\n\n                  Optimizing high availability with CloudFront origin failover", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_planning_network_topology_ha_conn_users.html", "title": "REL02-BP01 Use highly available network connectivity for your workload public endpoints - AWS Well-Architected Framework", "description": "Building highly available network connectivity to public endpoints of your workloads can help you reduce downtime due to loss of connectivity and improve the availability and SLA of your workload. To achieve this, use highly available DNS, content delivery networks (CDNs), API gateways, load balancing, or reverse proxies.", "language": "en-US"}}