{"page_content": "Prepare - AWS Well-Architected FrameworkPrepare - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkPrepare\n      To prepare for operational excellence, you have to understand your\n      workloads and their expected behaviors. You will then be able to \n      design them to provide insight to their status and build the\n      procedures to support them.\n    \n      Design your workload so that it provides the information necessary\n      for you to understand its internal state (for example, metrics,\n      logs, events, and traces) across all \n      components in support of observability and investigating issues.\n      Observability goes beyond simple monitoring, providing a comprehensive understanding of a system's internal workings based on its external outputs. Rooted in metrics, logs, and traces, observability offers profound insights into system behavior and dynamics. With effective observability, teams can discern patterns, anomalies, and trends, allowing them to proactively address potential issues and maintain optimal system health. Identifying key performance indicators (KPIs) is pivotal to ensure alignment between monitoring activities and business objectives. This alignment ensures that teams are making data-driven decisions using metrics that genuinely matter, optimizing both system performance and business outcomes. \n      Furthermore, observability empowers businesses to be proactive rather than reactive. Teams can understand the cause-and-effect relationships within their systems, predicting and preventing issues rather than just reacting to them. As workloads evolve, it's essential to revisit and refine the observability strategy, ensuring it remains relevant and effective.\n      \n    \n      Adopt approaches that improve the \ufb02ow of changes into production\n      and that achieves refactoring, fast feedback on quality, and bug\n      fixing. These accelerate beneficial changes entering production,\n      limit issues deployed, and activate rapid identification and\n      remediation of issues introduced through deployment activities or\n      discovered in your environments.\n    \n      Adopt approaches that provide fast feedback on quality and achieves\n      rapid recovery from changes that do not have desired outcomes.\n      Using these practices mitigates the impact of issues introduced\n      through the deployment of changes. Plan for unsuccessful changes\n      so that you are able to respond faster if necessary and test and\n      validate the changes you make. Be aware of planned activities in\n      your environments so that you can manage the risk of changes\n      impacting planned activities. Emphasize frequent, small,\n      reversible changes to limit the scope of change. This results in\n      faster troubleshooting and remediation with the option to\n      roll back a change. It also means you are able to get the benefit\n      of valuable changes more frequently.\n    \n      Evaluate the operational readiness of your workload, processes,\n      procedures, and personnel to understand the operational risks\n      related to your workload. Use a consistent process\n      (including manual or automated checklists) to know when you are\n      ready to go live with your workload or a change. This will also\n      help you to find\n      any areas that you must make plans to address. Have runbooks\n      that document your routine activities and playbooks that guide\n      your processes for issue resolution. Understand the benefits and\n      risks to make informed decisions to permit changes to enter\n      production.\n     AWS allows you to view your entire workload (applications, infrastructure, policy,\n          governance, and operations) as code. This means you can apply the same engineering\n          discipline that you use for application code to every element of your stack and share\n          these across teams or organizations to magnify the benefits of development efforts. Use\n          operations as code in the cloud and the ability to safely experiment to develop your\n          workload, your operations procedures, and practice failure. Using AWS CloudFormation allows you to\n          have consistent, templated, sandbox development, test, and production environments with\n          increasing levels of operations control. \n      The following questions focus on these considerations for\n      operational excellence.\n    \n\nOPS 4:\u00a0 How do you implement observability in your workload?\n\n\n\nImplement observability in your workload so that you can understand its state and make data-driven decisions based on business requirements.\n\n\n\nOPS 5:\u00a0 How do you reduce defects, ease remediation, and improve flow into\n                  production?\n\n\n\n Adopt approaches that improve flow of changes into production that achieve refactoring fast feedback on quality, and bug fixing. These accelerate beneficial\n                  changes entering production, limit issues deployed, and achieve rapid\n                  identification and remediation of issues introduced through deployment activities.\n                \n\n\n\nOPS 6:\u00a0 How do you mitigate deployment risks?\n\n\n\n Adopt approaches that provide fast feedback on quality and achieve rapid\n                  recovery from changes that do not have desired outcomes. Using these practices\n                  mitigates the impact of issues introduced through the deployment of changes.\n                \n\n\n\nOPS 7:\u00a0 How do you know that you are ready to support a workload?\n\n\n\n Evaluate the operational readiness of your workload, processes and\n                  procedures, and personnel to understand the operational risks related to your\n                  workload. \n\n\n      Invest in implementing operations activities as code to maximize\n      the productivity of operations personnel, minimize error rates,\n      and achieve automated responses. Use \u201cpre-mortems\u201d to anticipate\n      failure and create procedures where appropriate. Apply metadata\n      using Resource Tags and AWS Resource Groups following a consistent\n      tagging strategy to achieve identification of your resources. Tag\n      your resources for organization, cost accounting, access\n      controls, and targeting the running of automated operations\n      activities. Adopt deployment practices that take advantage of the\n      elasticity of the cloud to facilitate development activities,\n      and pre-deployment of systems for faster implementations. When you\n      make changes to the checklists you use to evaluate your\n      workloads, plan what you will do with live systems that no longer\n      comply.\n     Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOrganizationOperateDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/oe-prepare.html", "title": "Prepare - AWS Well-Architected Framework", "description": "To prepare for operational excellence, you have to understand your workloads and their expected behaviors. You will then be able to design them to provide insight to their status and build the procedures to support them.", "language": "en-US"}}