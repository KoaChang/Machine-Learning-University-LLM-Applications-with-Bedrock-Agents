{"page_content": "Multi-site active/active\n\n You can run your workload simultaneously in multiple Regions as part of\n            a\u00a0multi-site active/active\u00a0strategy. Multi-site active/active\n          serves traffic from all regions to which it is deployed. Customers may select this\n          strategy for reasons other than DR. It can be used to increase availability, or when\n          deploying a workload to a global audience (to put the endpoint closer to users and/or to\n          deploy stacks localized to the audience in that region). As a DR strategy, if the workload\n          cannot be supported in one of the AWS Regions to which it is deployed, then that Region\n          is evacuated, and the remaining Regions are used to maintain availability. Multi-site\n          active/active is the most operationally complex of the DR strategies, and should only be\n          selected when business requirements necessitate it. \n\n\n\nFigure 22: Multi-site active/active architecture\n\n\n \n For more details on this strategy, see Disaster Recovery (DR) Architecture on AWS, Part IV: Multi-site\n          Active/Active. \n\nAWS Elastic Disaster Recovery\n\n If you are considering the pilot light or warm standby strategy for disaster\n          recovery, AWS Elastic Disaster Recovery could provide an alternative approach with improved benefits. Elastic Disaster Recovery\n          can offer an RPO and RTO target similar to warm standby, but maintain the low-cost\n          approach of pilot light. Elastic Disaster Recovery replicates your data from your primary region to your\n          recovery Region, using continual data protection to achieve an RPO measured in seconds and\n          an RTO that can be measured in minutes. Only the resources required to replicate the data\n          are deployed in the recovery region, which keeps costs down, similar to the pilot light\n          strategy. When using Elastic Disaster Recovery, the service coordinates and orchestrates the recovery of\n          compute resources when initiated as part of failover or drill. \n\n\n\nFigure 23: AWS Elastic Disaster Recovery architecture\n\n\n\nAdditional practices for protecting data\n\n With all strategies, you must also mitigate against a data disaster. Continuous data\n          replication protects you against some types of disaster, but it may not protect you\n          against data corruption or destruction unless your strategy also includes versioning of\n          stored data or options for point-in-time recovery. You must also back up the replicated\n          data in the recovery site to create point-in-time backups in addition to the replicas. \n\nUsing multiple Availability Zones (AZs) within a single\n            AWS Region\n\n When using multiple AZs within a single Region, your DR implementation uses multiple\n          elements of the above strategies. First you must create a high-availability (HA)\n          architecture, using multiple AZs as shown in Figure 23. This architecture makes use of a\n          multi-site active/active approach, as the Amazon EC2 instances and the Elastic Load Balancer have resources deployed in multiple AZs, actively handing\n          requests. The architecture also demonstrates hot standby, where if the primary Amazon RDS instance fails (or the AZ itself fails), then the standby instance is\n          promoted to primary. \n\n\n\nFigure 24: Multi-AZ architecture\n\n\n In addition to this HA architecture, you need to add backups of all data required to\n          run your workload. This is especially important for data that is constrained to a single\n          zone such as Amazon EBS volumes or Amazon Redshift clusters. If an\n          AZ fails, you will need to restore this data to another AZ. Where possible, you should\n          also copy data backups to another AWS Region as an additional layer of protection. \n An less common alternative approach to single Region, multi-AZ DR is illustrated in\n          the blog post, Building highly resilient applications using Amazon Route\u00a053 Application Recovery Controller,\n            Part 1: Single-Region stack. Here, the strategy is to maintain as much isolation\n          between the AZs as possible, like how Regions operate. Using this alternative strategy,\n          you can choose an active/active or active/passive approach. \nNoteSome workloads have regulatory data residency requirements. If this applies to your\n            workload in a locality that currently has only one AWS Region, then multi-Region will\n            not suit your business needs. Multi-AZ strategies provide good protection against most\n            disasters. \n\n\nAssess the resources of your workload, and what their configuration\n            will be in the recovery Region prior to failover (during normal operation).\n\n For infrastructure and AWS resources use infrastructure as code such as AWS CloudFormation or third-party tools like\n          Hashicorp Terraform. To deploy across multiple accounts and Regions with a single\n          operation you can use AWS CloudFormation\n            StackSets. For Multi-site active/active and Hot Standby strategies, the deployed\n          infrastructure in your recovery Region has the same resources as your primary Region. For\n          Pilot Light and Warm Standby strategies, the deployed infrastructure will require\n          additional actions to become production ready. Using CloudFormation\u00a0parameters\u00a0and\u00a0conditional logic, you can control whether a deployed stack is active or\n          standby with a single template. When using Elastic Disaster Recovery, the service will replicate and orchestrate\n          the restoration of application configurations and compute resources. \n All DR strategies require that data sources are backed up within the AWS Region,\n          and then those backups are copied to the recovery Region. AWS Backup\u00a0provides a centralized view where you can configure,\n          schedule, and monitor backups for these resources. For Pilot Light, Warm Standby, and\n          Multi-site active/active, you should also replicate data from the primary Region to data\n          resources in the recovery Region, such as\u00a0Amazon Relational Database Service\n            (Amazon RDS)\u00a0DB instances or\u00a0Amazon DynamoDB\u00a0tables. These data resources are therefore live and ready to serve\n          requests in the recovery Region. \n To learn more about how AWS services operate across Regions, see this blog series\n          on Creating a Multi-Region Application with AWS Services. \n\n\nDetermine and implement how you will make your recovery Region ready\n            for failover when needed (during a disaster event).\n\n For multi-site active/active, failover means evacuating a Region, and relying on the\n          remaining active Regions. In general, those Regions are ready to accept traffic. For Pilot\n          Light and Warm Standby strategies, your recovery actions will need to deploy the missing\n          resources, such as the EC2 instances in Figure 20, plus any other missing resources. \n For all of the above strategies you may need to promote read-only instances of\n          databases to become the primary read/write instance. \n For backup and restore, restoring data from backup creates resources for that data\n          such as EBS volumes, RDS DB instances, and DynamoDB tables. You also need to restore the\n          infrastructure and deploy code. You can use AWS Backup to restore data in the recovery\n          Region. See REL09-BP01 Identify and back up all data that needs to be\n  backed up, or reproduce the data from sources for more details.\n          Rebuilding the infrastructure includes creating resources like EC2 instances in addition\n          to the\u00a0Amazon Virtual Private Cloud (Amazon VPC), subnets, and security\n          groups needed. You can automate much of the restoration process. To learn how, see this blog post. \n\n\nDetermine and implement how you will reroute traffic to failover\n            when needed (during a disaster event).\n\n This failover operation can be initiated either automatically or manually.\n          Automatically initiated failover based on health checks or alarms should be used with\n          caution since an unnecessary failover (false alarm) incurs costs such as non-availability\n          and data loss. Manually initiated failover is therefore often used. In this case, you\n          should still automate the steps for failover, so that the manual initiation is like the\n          push of a button. \n There are several traffic management options to consider when using AWS services.\n          One option is to use\u00a0Amazon Route\u00a053. Using\n          Amazon Route\u00a053, you can associate multiple IP endpoints in one or more AWS Regions with\n          a Route\u00a053 domain name. To implement manually initiated failover you can use\u00a0Amazon Route\u00a053\n            Application Recovery Controller, which provides a highly available data plane\n          API to reroute traffic to the recovery Region. When implementing failover, use data plane\n          operations and avoid control plane ones as described in REL11-BP04 Rely on the data plane and not the control plane\n  during recovery. \n To learn more about this and other options see this section of the Disaster Recovery Whitepaper. \n\n\nDesign a plan for how your workload will fail back.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_planning_for_recovery_disaster_recovery.html", "title": "REL13-BP02 Use defined recovery strategies to meet the recovery objectives - Reliability Pillar", "description": "Define a disaster recovery (DR) strategy that meets your workload's recovery objectives. Choose a strategy such as backup and restore, standby (active/passive), or active/active.", "language": "en-US"}}