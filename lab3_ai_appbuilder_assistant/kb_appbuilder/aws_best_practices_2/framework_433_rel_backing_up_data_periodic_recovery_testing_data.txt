{"page_content": "REL09-BP04 Perform periodic recovery of the data to verify backup integrity and processes - AWS Well-Architected FrameworkREL09-BP04 Perform periodic recovery of the data to verify backup integrity and processes - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL09-BP04 Perform periodic recovery of the data to verify\n  backup integrity and processesValidate that your backup process implementation meets your Recovery Time Objectives (RTO) and Recovery Point Objectives (RPO) by performing a recovery test.\nDesired outcome: Data from\n    backups is periodically recovered using well-defined mechanisms to\n    verify that recovery is possible within the established recovery\n    time objective (RTO) for the workload. Verify that restoration from\n    a backup results in a resource that contains the original data\n    without any of it being corrupted or inaccessible, and with data\n    loss within the recovery point objective (RPO).\n  \nCommon anti-patterns:\n\n\n\n        Restoring a backup, but not querying or retrieving any data to\n        check that the restoration is usable.\n      \n\n\n        Assuming that a backup exists.\n      \n\n\n        Assuming that the backup of a system is fully operational and\n        that data can be recovered from it.\n      \n\n\n        Assuming that the time to restore or recover data from a backup\n        falls within the RTO for the workload.\n      \n\n\n        Assuming that the data contained on the backup falls within the\n        RPO for the workload\n      \n\n\n        Restoring when necessary, without using a runbook or outside of an\n        established automated procedure.\n      \n\nBenefits of establishing this best\n    practice: Testing the recovery of the backups verifies that\n    data can be restored when needed without having any worry that data\n    might be missing or corrupted, that the restoration and recovery is\n    possible within the RTO for the workload, and any data loss falls\n    within the RPO for the workload.\n  \nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Testing backup and restore capability increases confidence in the\n      ability to perform these actions during an outage. Periodically\n      restore backups to a new location and run tests to verify the\n      integrity of the data. Some common tests that should be performed\n      are checking if all data is available, is not corrupted, is accessible, and that any data loss falls within the RPO for the workload. Such tests can also help ascertain if recovery mechanisms are fast enough to accommodate the workload's RTO.\n    \n\n      Using AWS, you can stand up a testing environment and restore your\n      backups to assess RTO and RPO capabilities, and run tests on data\n      content and integrity.\n    \n\n      Additionally, Amazon RDS and Amazon DynamoDB allow point-in-time\n      recovery (PITR). Using continuous backup, you can restore your\n      dataset to the\u00c2\u00a0state it was in at a specified date and time.\n    \n\n      If all the data is available, is not corrupted, is accessible, and\n      any data loss falls within the RPO for the workload. Such tests\n      can also help ascertain if recovery mechanisms are fast enough to\n      accommodate the workload's RTO.\n    \n\n      AWS Elastic Disaster Recovery offers continual point-in-time recovery snapshots of Amazon EBS volumes. As source servers are replicated, point-in-time states are chronicled over time based on the configured policy. Elastic Disaster Recovery helps you verify the integrity of these snapshots by launching instances for test and drill purposes without redirecting the traffic.\n    \n\nImplementation steps\n\n\n\n\nIdentify data sources that\n          are currently being backed up and where these backups are\n          being stored. For implementation guidance, see REL09-BP01 Identify and back up all data that needs to be\n  backed up, or reproduce the data from sources.\n        \n\n\nEstablish criteria for data\n          validation for each data source. Different types of\n          data will have different properties which might require\n          different validation mechanisms. Consider how this data might\n          be validated before you are confident to use it in production.\n          Some common ways to validate data are using data and backup\n          properties such as data type, format, checksum, size, or a\n          combination of these with custom validation logic. For\n          example, this might be a comparison of the checksum values\n          between the restored resource and the data source at the time\n          the backup was created.\n        \n\n\nEstablish RTO and RPO for\n          restoring the data based on data criticality. For implementation guidance, see\n          REL13-BP01 Define recovery objectives for downtime and data\n  loss.\n        \n\n\nAssess your recovery\n          capability. Review your backup and restore strategy\n          to understand if it can meet your RTO and RPO, and adjust the\n          strategy as necessary. Using\n          AWS           Resilience Hub, you can run an assessment of your\n          workload. The assessment evaluates your application\n          configuration against the resiliency policy and reports if\n          your RTO and RPO targets can be met.\n        \n\n\nDo a test restore using\n          currently established processes used in production for data\n          restoration. These processes depend on how the original data\n          source was backed up, the format and storage location of the\n          backup itself, or if the data is reproduced from other\n          sources. For example, if you are using a managed service such\n          as\n          AWS Backup, this might be as simple as restoring the backup into a\n          new resource. If you used AWS Elastic Disaster Recovery\n          you can\n          launch\n          a recovery drill.\n        \n\n\nValidate data recovery from\n          the restored resource based on\n          criteria you previously established for data validation. Does the restored and recovered data contain the most\n          recent record or item at the time of backup? Does this data fall\n          within the RPO for the workload?\n        \n\n\nMeasure time required for\n          restore and recovery and compare it to your established RTO. Does this process fall within the RTO for the\n          workload? For example, compare the timestamps from when the\n          restoration process started and when the recovery validation\n          completed to calculate how long this process takes. All AWS\n          API calls are timestamped and this information is available in\n          AWS CloudTrail. While this information can provide details\n          on when the restore process started, the end timestamp for\n          when the validation was completed should be recorded by your\n          validation logic. If using an automated process, then services\n          like\n          Amazon DynamoDB can be used to store this information.\n          Additionally, many AWS services provide an event history which\n          provides timestamped information when certain actions\n          occurred. Within AWS Backup, backup and restore actions are\n          referred to as jobs, and these jobs\n          contain timestamp information as part of its metadata which\n          can be used to measure time required for restoration and\n          recovery.\n        \n\n\nNotify stakeholders if data\n          validation fails, or if the time required for restoration and\n          recovery exceeds the established RTO for the workload. When\n          implementing automation to do this,\n          such\n          as in this lab, services like Amazon Simple Notification Service (Amazon SNS) can be used to send push\n          notifications such as email or SMS to stakeholders.\n          These\n          messages can also be published to messaging applications such\n          as Amazon Chime, Slack, or Microsoft Teams or used to\n          create\n          tasks as OpsItems using AWS Systems Manager OpsCenter.\n        \n\n\nAutomate this process to run\n          periodically. For example, services like AWS Lambda\n          or a State Machine in AWS Step Functions can be used to\n          automate the restore and recovery processes, and Amazon EventBridge can be used to invoke this automation workflow\n          periodically as shown in the architecture diagram below. Learn\n          how to\n          Automate\n          data recovery validation with AWS Backup. Additionally,\n          this\n          Well-Architected lab provides a hands-on experience on\n          one way to do automation for several of the steps here.\n        \n\n\n\nFigure 9. An automated backup and restore process\n\n\nLevel of effort for the Implementation\n      Plan: Moderate to high depending on the complexity of\n      the validation criteria.\n    \nResources\n\nRelated documents:\n\n\n\n\nAutomate\n          data recovery validation with AWS Backup\n\n\n\nAPN\n          Partner: partners that can help with backup\n\n\n\nAWS Marketplace: products that can be used for backup\n\n\n\nCreating\n          an EventBridge Rule That Triggers on a Schedule\n\n\n\nOn-demand\n          backup and restore for DynamoDB\n\n\n\nWhat\n          Is AWS Backup?\n\n\n\nWhat\n          Is AWS Step Functions?\n\n\n\nWhat\n          is AWS Elastic Disaster Recovery\n\n\n\nAWS Elastic Disaster Recovery\n\n\n\nRelated examples:\n\n\n\n\nWell-Architected\n          lab: Testing Backup and Restore of Data", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_backing_up_data_periodic_recovery_testing_data.html", "title": "REL09-BP04 Perform periodic recovery of the data to verify backup integrity and processes - AWS Well-Architected Framework", "description": "Validate that your backup process implementation meets your Recovery Time Objectives (RTO) and Recovery Point Objectives (RPO) by performing a recovery test.", "language": "en-US"}}