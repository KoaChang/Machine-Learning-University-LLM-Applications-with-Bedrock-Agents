{"page_content": "SEC03-BP04 Reduce permissions continuously - Security PillarSEC03-BP04 Reduce permissions continuously - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidance ResourcesSEC03-BP04 Reduce permissions continuouslyAs your teams determine what access is required, remove unneeded permissions and establish review processes to achieve least privilege permissions. Continually monitor and remove unused identities and permissions for both human and machine access.\nDesired outcome: Permission policies should adhere to the least privilege principle. As job duties and roles become better defined, your permission policies need to be reviewed to remove unnecessary permissions. This approach lessens the scope of impact should credentials be inadvertently exposed or otherwise accessed without authorization.\n  \nCommon anti-patterns:\n\n\n\n        Defaulting to granting users administrator permissions.\n      \n\n\n        Creating policies that are overly permissive, but without full administrator privileges.\n      \n\n\n        Keeping permission policies after they are no longer needed.\n      \n\nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance \n\n      As teams and projects are just getting started, permissive permission policies might be used to inspire innovation and agility. For example, in a development or test environment, developers can be given access to a broad set of AWS services. We recommend that you evaluate access continuously and restrict access to only those services and service actions that are necessary to complete the current job. We recommend this evaluation for both human and machine identities. Machine identities, sometimes called system or service accounts, are identities that give AWS access to applications or servers. This access is especially important in a production environment, where overly permissive permissions can have a broad impact and potentially expose customer data.\n    \n\n      AWS provides multiple methods to help identify unused users, roles, permissions, and credentials. AWS can also help analyze access activity of IAM users and roles, including associated access keys, and access to AWS resources such as objects in Amazon S3 buckets. AWS Identity and Access Management Access Analyzer policy generation can assist you in creating restrictive permission policies based on the actual services and actions a principal interacts with.  Attribute-based access control (ABAC) can help simplify permissions management, as you can provide permissions to users using their attributes instead of attaching permissions policies directly to each user.\n    \n\nImplementation steps\n\n\n\n\nUse AWS Identity and Access Management Access Analyzer: IAM Access Analyzer helps identify resources in your organization and accounts, such as Amazon Simple Storage Service (Amazon S3) buckets or IAM roles that are shared with an external entity.\n        \n\n\nUse IAM Access Analyzer policy generation: IAM Access Analyzer policy generation helps you create fine-grained permission policies based on an IAM user or role\u2019s access activity.\n        \n\n\nDetermine an acceptable timeframe and usage policy for IAM users and roles: Use the last accessed timestamp to identify unused users and roles and remove them. Review service and action last accessed information to identify and scope permissions for specific users and roles. For example, you can use last accessed information to identify the specific Amazon S3 actions that your application role requires and restrict the role\u2019s access to only those actions. Last accessed information features are available in the AWS Management Console and programmatically allow you to incorporate them into your infrastructure workflows and automated tools. \n        \n\n\nConsider logging data events in AWS CloudTrail: By default, CloudTrail does not log data events such as Amazon S3 object-level activity (for example, GetObject and DeleteObject) or Amazon DynamoDB table activities (for example, PutItem and DeleteItem). Consider using logging for these events to determine what users and roles need access to specific Amazon S3 objects or DynamoDB table items. \n        \n\nResources\n\nRelated documents:\n\n\n\n\nGrant least privilege\n\n\n\nRemove unnecessary credentials\n\n\n\n          What is AWS CloudTrail?\n        \n\n\nWorking with Policies\n\n\n\n          Logging and monitoring DynamoDB\n        \n\n\n          Using CloudTrail event logging for Amazon S3 buckets and objects\n        \n\n\n          Getting credential reports for your AWS account\n\n\nRelated videos:\n\n\n\n\nBecome an IAM Policy Master in 60 Minutes or\n            Less\n\n\n\nSeparation of Duties, Least Privilege,\n            Delegation, and CI/CD\n\n\nAWS re:Inforce 2022 - AWS Identity and Access Management (IAM) deep dive\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC03-BP03 Establish emergency access processSEC03-BP05 Define permission guardrails for your organizationDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/sec_permissions_continuous_reduction.html", "title": "SEC03-BP04 Reduce permissions continuously - Security Pillar", "description": "As your teams determine what access is required, remove unneeded permissions and establish review processes to achieve least privilege permissions. Continually monitor and remove unused identities and permissions for both human and machine access.", "language": "en-US"}}