{"page_content": "OPS08-BP04 Create actionable alerts - AWS Well-Architected FrameworkOPS08-BP04 Create actionable alerts - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesOPS08-BP04 Create actionable alerts\n    Promptly detecting and responding to deviations in your application's behavior is crucial. Especially vital is recognizing when outcomes based on key performance indicators (KPIs) are at risk or when unexpected anomalies arise. Basing alerts on KPIs ensures that the signals you receive are directly tied to business or operational impact. This approach to actionable alerts promotes proactive responses and helps maintain system performance and reliability.\n  \nDesired outcome: Receive timely, relevant, and actionable alerts for rapid identification and mitigation of potential issues, especially when KPI outcomes are at risk.\n  \nCommon anti-patterns:\n\n\n\n        Setting up too many non-critical alerts, leading to alert fatigue.\n      \n\n\n        Not prioritizing alerts based on KPIs, making it hard to understand the business impact of issues.\n      \n\n\n        Neglecting to address root causes, leading to repetitive alerts for the same issue.\n      \n\nBenefits of establishing this best\n    practice:\n\n\n\n        Reduced alert fatigue by focusing on actionable and relevant alerts.      \n      \n\n\n        Improved system uptime and reliability through proactive issue detection and mitigation.\n      \n\n\n        Enhanced team collaboration and quicker issue resolution by integrating with popular alerting and communication tools.\n      \n\nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      To create an effective alerting mechanism, it's vital to use metrics, logs, and trace data that flag when outcomes based on KPIs are at risk or anomalies are detected.\n    \nImplementation steps\n\n\n\nDetermine key performance indicators (KPIs): Identify your application's KPIs. Alerts should be tied to these KPIs to reflect the business impact accurately.\n          \n\n\nImplement anomaly detection:\n\n\n\n\nUse CloudWatch anomaly detection: Set up CloudWatch anomaly detection to automatically detect unusual patterns, ensuring alerts are only generated for genuine anomalies.\n              \n\n\nUse X-Ray Insights:\n\n\n\n\n                    Set up X-Ray Insights to detect anomalies in trace data.\n                  \n\n\n                    Configure notifications for X-Ray Insights to be alerted on detected issues.\n                  \n\n\n\nIntegrate with DevOps\u00a0Guru:\n\n\n\n\n                    Leverage Amazon DevOps\u00a0Guru for its machine learning capabilities in detecting operational anomalies with existing data.\n                  \n\n\n                    Navigate to the notification settings in DevOps\u00a0Guru to set up anomaly alerts.\n                  \n\n\n\n\nImplement actionable alerts: Design alerts that provide adequate information for immediate action.\n          \n\n\nReduce alarm fatigue: Minimize non-critical alerts. Overwhelming teams with numerous insignificant alerts can lead to oversight of critical issues and diminish the overall effectiveness of the alerting mechanism.\n          \n\n\nSet up composite alarms: Use Amazon CloudWatch composite alarms to consolidate multiple alarms.\n          \n\n\nIntegrate with alerting tools: Incorporate tools like Ops Genie and PagerDuty.\n          \n\n\nEngage AWS Chatbot Integrate AWS Chatbotto relay alerts to Chime, Microsoft Teams, and Slack.\n          \n\n\nAlert based on logs: Use log metric filters in CloudWatch to create alarms based on specific log events.\n          \n\n\nReview and iterate: Regularly revisit and refine alert configurations.\n          \n\n\nLevel of effort for the implementation plan: Medium\n    \nResources\n\nRelated best practices:\n\n\n\n\nOPS04-BP01 Identify key performance indicators\n\n\n\nOPS04-BP02 Implement application telemetry\n\n\n\nOPS04-BP03 Implement user experience telemetry\n\n\n\nOPS04-BP04 Implement dependency telemetry\n\n\n\nOPS04-BP05 Implement distributed tracing\n\n\n\nOPS08-BP01 Analyze workload metrics\n\n\n\nOPS08-BP02 Analyze workload logs\n\n\n\nOPS08-BP03 Analyze workload traces\n\n\n\nRelated documents:\n\n\n\n\n          Using Amazon CloudWatch Alarms\n        \n\n\n          Create a composite alarm\n        \n\n\n          Create a CloudWatch alarm based on anomaly detection\n        \n\n\n          DevOps\u00a0Guru Notifications\n        \n\n\n          X-Ray Insights notifications\n        \n\n\n          OMonitor, operate, and troubleshoot your AWS resources with interactive ChatOps\n        \n\n\n          Amazon CloudWatch Integration Guide | PagerDuty\n        \n\n\n          Integrate OpsGenie with Amazon CloudWatch\n        \n\n\nRelated videos:\n\n\n\n\n          Create Composite Alarms in Amazon CloudWatch\n        \n\nAWS Chatbot Overview\n        \n\nAWS on Air ft. Mutative Commands in AWS Chatbot\n\n\nRelated examples:\n\n\n\n\n          Alarms, incident management, and remediation in the cloud with Amazon CloudWatch\n        \n\n\n          Tutorial: Creating an Amazon EventBridge rule that sends notifications to AWS Chatbot\n\n\n          One Observability Workshop\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOPS08-BP03 Analyze workload tracesOPS08-BP05 Create dashboardsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/ops_workload_observability_create_alerts.html", "title": "OPS08-BP04 Create actionable alerts - AWS Well-Architected Framework", "description": "Promptly detecting and responding to deviations in your application's behavior is crucial. Especially vital is recognizing when outcomes based on key performance indicators (KPIs) are at risk or when unexpected anomalies arise. Basing alerts on KPIs ensures that the signals you receive are directly tied to business or operational impact. This approach to actionable alerts promotes proactive responses and helps maintain system performance and reliability.", "language": "en-US"}}