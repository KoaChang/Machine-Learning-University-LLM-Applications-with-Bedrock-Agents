{"page_content": "SUS04-BP05 Remove unneeded or redundant data - AWS Well-Architected FrameworkSUS04-BP05 Remove unneeded or redundant data - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSUS04-BP05 Remove unneeded or redundant dataRemove unneeded or redundant data to minimize the \n    storage resources required to store your datasets. \nCommon anti-patterns:\n\n\n\n        You duplicate data that can be easily obtained or recreated.\n      \n\n\n        You back up all data without considering its criticality.\n      \n\n\n        You only delete data irregularly, on operational events, or not at all.\n      \n\n\n        You store data redundantly irrespective of the storage service's durability.\n      \n\n\n        You turn on Amazon S3 versioning without any business justification.\n      \n\nBenefits of establishing this best practice: Removing unneeded data reduces the \n    storage size required for your workload and the workload environmental impact.\n  \nLevel of risk exposed if this best practice\n      is not established: Medium\n  \nImplementation guidance\n\n      Do not store data that you do not need. Automate the deletion of unneeded data. Use technologies \n      that deduplicate data at the file and block level. Leverage native data replication and redundancy \n      features of services.\n    \n\nImplementation steps\n\n\n\n\n          Evaluate if you can avoid storing data by using existing publicly available datasets in \n          AWS Data Exchange and Open Data on AWS.\n        \n\n\n          Use mechanisms that can deduplicate data at the block and object level. \n          Here are some examples of how to deduplicate data on AWS:\n        \n\n\nStorage service\nDeduplication mechanism\n\n\n\n\nAmazon S3\n\n\nUse AWS Lake Formation FindMatches to find matching records \n                    across a dataset (including ones without identifiers) by using \n                    the new FindMatches ML Transform.\n\n\n\n\nAmazon FSx\n\n\nUse data deduplication on Amazon FSx for Windows.\n\n\n\n\nAmazon Elastic Block Store snapshots\n\n\nSnapshots are incremental backups, which means that only the \n                    blocks on the device that have changed after your most recent \n                    snapshot are saved.\n\n\n\n\n\n          Analyze the data access to identify unneeded data. Automate lifecycle policies. \n          Leverage native service features like Amazon DynamoDB Time To Live, \n          Amazon S3 Lifecycle, \n          or Amazon CloudWatch log retention for deletion. \n        \n\n\n          Use data virtualization capabilities on AWS to maintain data at its source and avoid data duplication.\n        \n\n\n\nCloud Native Data Virtualization on AWS\n\n\n\nLab: Optimize Data Pattern Using Amazon Redshift Data Sharing\n\n\n\n\n          Use backup technology that can make incremental backups.\n        \n\n\n          Leverage the durability of Amazon S3 and \n          replication of Amazon EBS to meet your \n          durability goals instead of self-managed technologies (such as a redundant array \n          of independent disks (RAID)).\n        \n\n\n          Centralize log and trace data, deduplicate identical log entries, and establish mechanisms to tune verbosity when needed.\n        \n\n\n          Pre-populate caches only where justified.\n        \n\n\n          Establish cache monitoring and automation to resize the cache accordingly.\n        \n\n\n          Remove out-of-date deployments and assets from object stores and edge caches when pushing new versions of your workload.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nChange\n          log data retention in CloudWatch Logs\n\n\n\nData\n          deduplication on Amazon FSx for Windows File Server\n\n\n\nFeatures\n          of Amazon FSx for ONTAP including data deduplication\n\n\n\nInvalidating\n          Files on Amazon CloudFront\n\n\n\nUsing\n          AWS Backup to back up and restore Amazon EFS file\n          systems\n\n\n\nWhat\n          is Amazon CloudWatch Logs?\n\n\n\nWorking\n          with backups on Amazon RDS\n\n\n\nRelated videos:\n\n\n\n\nFuzzy Matching and Deduplicating Data with ML Transforms for AWS Lake Formation\n\n\n\nRelated examples:\n\n\n\n\nHow do I analyze my Amazon S3 server access logs using Amazon Athena?\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS04-BP04 Use elasticity and automation to expand block storage or file systemSUS04-BP06 Use shared file systems or storage to access\n  common dataDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sus_sus_data_a6.html", "title": "SUS04-BP05 Remove unneeded or redundant data - AWS Well-Architected Framework", "description": "Remove unneeded or redundant data to minimize the storage resources required to store your datasets.", "language": "en-US"}}