{"page_content": "Understanding availability needs - Reliability PillarUnderstanding availability needs - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkUnderstanding availability needs\n      It\u2019s common to initially think of an application\u2019s availability as\n      a single target for the application as a whole. However, upon\n      closer inspection, we frequently find that certain aspects of an\n      application or service have different availability requirements.\n      For example, some systems might prioritize the ability to receive\n      and store new data ahead of retrieving existing data. Other\n      systems prioritize real-time operations over operations that\n      change a system\u2019s configuration or environment. Services might\n      have very high availability requirements during certain hours of\n      the day, but can tolerate much longer periods of disruption\n      outside of these hours. These are a few of the ways that you can\n      decompose a single application into constituent parts, and\n      evaluate the availability requirements for each. The benefit of\n      doing this is to focus your efforts (and expense) on availability\n      according to specific needs, rather than engineering the whole\n      system to the strictest requirement.\n    \n\n\n              Recommendation\n            \n\n\n\n Critically evaluate the unique aspects to your applications and, where\n              appropriate, differentiate the availability and disaster recovery design goals to\n              reflect the needs of your business. \n\n Within AWS, we commonly divide services into the \u201cdata plane\u201d and the \u201ccontrol plane.\u201d\n      The data plane is responsible for delivering real-time service while control planes are used\n      to configure the environment. For example, Amazon EC2 instances, Amazon RDS databases, and Amazon DynamoDB\n      table read/write operations are all data plane operations. In contrast, launching new EC2\n      instances or RDS databases, or adding or changing table metadata in DynamoDB are all considered\n      control plane operations. While high levels of availability are important for all of these\n      capabilities, the data planes typically have higher availability design goals than the control\n      planes. Therefore workloads with high availability requirements should avoid run-time\n      dependency on control plane operations.\n      Many AWS customers take a similar approach to critically\n      evaluating their applications and identifying subcomponents with\n      different availability needs. Availability design goals are then\n      tailored to the different aspects, and the appropriate work\n      efforts are performed to engineer the system. AWS has significant\n      experience engineering applications with a range of availability\n      design goals, including services with 99.999% or greater\n      availability. AWS Solution Architects (SAs) can help you design\n      appropriately for your availability goals. Involving AWS early in\n      your design process improves our ability to help you meet your\n      availability goals. Planning for availability is not only done\n      before your workload launches. It\u2019s also done continuously to\n      refine your design as you gain operational experience, learn from\n      real world events, and endure failures of different types. You can\n      then apply the appropriate work effort to improve upon your\n      implementation.\n    \n      The availability needs that are required for a workload must be\n      aligned to the business need and criticality. By first defining\n      business criticality framework with defined RTO, RPO, and\n      availability, you can then assess each workload. Such an approach\n      requires that the people involved in implementation of the\n      workload are knowledgeable of the framework, and the impact their\n      workload has on business needs.\n     Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsDisaster Recovery (DR) objectivesFoundationsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/understanding-availability-needs.html", "title": "Understanding availability needs - Reliability Pillar", "description": "It\u2019s common to initially think of an application\u2019s availability as a single target for the application as a whole. However, upon closer inspection, we frequently find that certain aspects of an application or service have different availability requirements. For example, some systems might prioritize the ability to receive and store new data ahead of retrieving existing data. Other systems prioritize real-time operations over operations that change a system\u2019s configuration or environment. Services might have very high availability requirements during certain hours of the day, but can tolerate much longer periods of disruption outside of these hours. These are a few of the ways that you can decompose a single application into constituent parts, and evaluate the availability requirements for each. The benefit of doing this is to focus your efforts (and expense) on availability according to specific needs, rather than engineering the whole system to the strictest requirement.", "language": "en-US"}}