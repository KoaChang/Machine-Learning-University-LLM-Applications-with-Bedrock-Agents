{"page_content": "Design principles - AWS Well-Architected FrameworkDesign principles - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkDesign principles\n      The following are design principles for operational excellence in the\n      cloud:\n    \n\n\nPerform operations as code: In the cloud, you can apply\n            the same engineering discipline that you use for application code to your entire\n            environment. You can define your entire workload (applications, infrastructure, etc.) as\n            code and update it with code. You can script your operations procedures and automate their\n            process by launching them in response to events. By performing operations as code, you\n            limit human error and create consistent responses to events. \n\n\nMake frequent, small, reversible changes: Design workloads that are scalable and loosely coupled to permit components to be updated regularly. Automated deployment techniques together with smaller, incremental changes reduces the blast radius and allows for faster reversal when failures occur. This increases confidence to deliver beneficial changes to your workload while maintaining quality and adapting quickly to changes in market conditions.\n\n\nRefine operations procedures frequently: As you evolve your workloads, evolve your operations appropriately. As you use operations procedures, look for opportunities to improve them. Hold regular reviews and validate that all procedures are effective and that teams are familiar with them. Where gaps are identified, update procedures accordingly.  Communicate procedural updates to all stakeholders and teams. Gamify your operations to share best practices and educate teams.\n\n\nAnticipate failure: Perform \u201cpre-mortem\u201d exercises to identify potential sources of failure so that they can be removed or mitigated. Test your failure scenarios and validate your understanding of their impact. Test your response procedures to ensure they are effective and that teams are familiar with their process. Set up regular game days to test workload and team responses to simulated events. \n\n\nLearn from all operational failures: Drive improvement through lessons learned from all operational events and failures. Share what is learned across teams and through the entire organization.\n\n\nUse managed services: Reduce operational burden by using AWS managed services where possible.  Build operational procedures around interactions with those services.\n          \n\n\nImplement observability for actionable insights: Gain a comprehensive understanding of workload behavior, performance, reliability, cost, and health. Establish key performance indicators (KPIs) and leverage observability telemetry to make informed decisions and take prompt action when business outcomes are at risk. Proactively improve performance, reliability, and cost based on actionable observability data.\n          \n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsOperational excellenceDefinitionDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/oe-design-principles.html", "title": "Design principles - AWS Well-Architected Framework", "description": "There are five design principles for operational excellence in the cloud.", "language": "en-US"}}