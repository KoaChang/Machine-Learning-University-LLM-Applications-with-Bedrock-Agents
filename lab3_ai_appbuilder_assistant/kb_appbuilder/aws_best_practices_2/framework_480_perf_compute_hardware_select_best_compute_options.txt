{"page_content": "PERF02-BP01 Select the best compute options for your workload - AWS Well-Architected FrameworkPERF02-BP01 Select the best compute options for your workload - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceImplementation stepsResourcesPERF02-BP01 Select the best compute options for your\n  workload\n    Selecting the most appropriate compute option for your workload\n    allows you to improve performance, reduce unnecessary infrastructure\n    costs, and lower the operational efforts required to maintain your\n    workload.\n  \nCommon anti-patterns:\n\n\n\n        You use the same compute option that was used on\n        premises.\n      \n\n\n        You lack awareness of the cloud compute options, features, and\n        solutions, and how those solutions might improve your compute\n        performance.\n      \n\n\n        You over-provision an existing compute option to meet scaling or\n        performance requirements when an alternative compute option\n        would align to your workload characteristics more precisely.\n      \n\nBenefits of establishing this best\n    practice: By identifying the compute requirements and\n    evaluating against the options available, you can make your workload\n    more resource efficient.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      To optimize your cloud workloads for performance efficiency, it is\n      important to select the most appropriate compute options for your\n      use case and performance requirements. AWS provides a variety of\n      compute options that cater to different workloads in the cloud.\n      For instance, you can use Amazon EC2 to launch and manage virtual\n      servers, AWS Lambda to run code without having to provision or\n      manage servers, Amazon ECS or Amazon EKS to run and manage containers, or\n      AWS Batch to process large volumes of data in parallel. Based on\n      your scale and compute needs, you should choose and configure the\n      optimal compute solution for your situation. You can also consider\n      using multiple types of compute solutions in a single workload, as\n      each one has its own advantages and drawbacks.\n    \n\n      The following steps guide you through selecting the right compute\n      options to match your workload characteristics and performance\n      requirements.\n    \nImplementation steps\n\n\n\n          Understand your workload compute requirements. Key\n          requirements to consider include processing needs, traffic\n          patterns, data access patterns, scaling needs, and latency\n          requirements.\n        \n\n\n          Learn about different compute options available for your\n          workload on AWS (as outlined in PERF01-BP01 Learn about and understand available cloud services and\n  features. Here are some key\n          AWS compute options, their characteristics, and common\n          use cases:\n        \n\n\n\n                  AWS service\n                \n\n                  Key characteristics\n                \n\n                  Common use cases\n                \n\n\n\n\nAmazon Elastic Compute Cloud (Amazon EC2)\n\n\n                  Has dedicated option for hardware, license requirements,\n                  large selection of different instance families, processor\n                  types and compute accelerators\n                \n\n                  Lift and shift migrations, monolithic application, hybrid\n                  environments, enterprise applications\n                \n\n\n\nAmazon Elastic Container Service (Amazon ECS), Amazon Elastic Kubernetes Service (Amazon EKS)\u00a0\n                \n\n                  Easy deployment, consistent environments, scalable\n                \n\n                  Microservices, hybrid environments\n                \n\n\n\nAWS Lambda\n\n\n                  \u00a0Serverless\n                    compute\u00a0service that runs code in response to\n                  events and automatically manages the underlying compute\n                  resources.\n                \n\n                  Microservices, event-driven applications\n                \n\n\n\nAWS Batch\n\n\n                  Efficiently and dynamically provisions and\n                  scales\u00a0Amazon Elastic Container Service\u00a0(Amazon ECS),\u00a0Amazon Elastic Kubernetes Service (Amazon EKS),\n                  and\u00a0AWS Fargate\u00a0compute resources, with an option to use\n                  On-Demand or Spot Instances based on your job requirements\n                \n\n                  HPC, train ML models\n                \n\n\n\nAmazon Lightsail\n\n\n                  Preconfigured Linux and Windows application for running\n                  small workloads\n                \n\n                  Simple web applications, custom website\n                \n\n\n\n\n          Evaluate cost (like hourly charge or data transfer) and\n          management overhead (like patching and scaling) associated to\n          each compute option.\n        \n\n\n          Perform experiments and benchmarking in a non-production\n          environment to identify which compute option can best address\n          your workload requirements.\n        \n\n\n          Once you have experimented and identified your new compute\n          solution, plan your migration and validate your performance\n          metrics.\n        \n\n\n          Use AWS monitoring tools like Amazon CloudWatch and\n          optimization services like AWS Compute Optimizer to\n          continually optimize your compute resources based on real-world usage\n          patterns.\n        \n\n\n\nResources\n\nRelated documents:\n\n\n\n\nCloud\n          Compute with AWS\u00a0\n\n\n\nAmazon EC2\n          Instance Types\u00a0\n\n\n\nAmazon EKS\n          Containers: Amazon EKS Worker Nodes\u00a0\n\n\n\nAmazon ECS Containers: Amazon ECS Container\n          Instances\u00a0\n\n\n\nFunctions:\n          Lambda Function Configuration\n\n\nPrescriptive Guidance for Containers\n\n\n\nPrescriptive\n          Guidance for Serverless\n\n\n\nRelated videos:\n\n\n\n\nHow\n          to choose compute option for startups\n\n\n\nOptimize\n          performance and cost for your AWS compute\n          \n\n\n\nAmazon EC2 foundations\n\n\n\nPowering\n          next-gen Amazon EC2: Deep dive into the Nitro\n          system\u00a0\n\n\n\nDeploy ML models for inference at high performance and low cost\n\n\n\nBetter,\n          faster, cheaper compute: Cost-optimizing Amazon EC2\n\n\n\nRelated examples:\n\n\n\n\nMigrating\n          the Web application to containers\n\n\n\nRun\n          a Serverless Hello World\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF 2. How do you select and use compute resources in your workload?PERF02-BP02 Understand the available compute configuration and\n  featuresDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_compute_hardware_select_best_compute_options.html", "title": "PERF02-BP01 Select the best compute options for your workload - AWS Well-Architected Framework", "description": "Selecting the most appropriate compute option for your workload allows you to improve performance, reduce unnecessary infrastructure costs, and lower the operational efforts required to maintain your workload.", "language": "en-US"}}