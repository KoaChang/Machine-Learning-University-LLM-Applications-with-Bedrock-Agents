{"page_content": "REL08-BP03 Integrate resiliency testing as part of your deployment - AWS Well-Architected FrameworkREL08-BP03 Integrate resiliency testing as part of your deployment - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL08-BP03 Integrate resiliency testing as part of your\n  deployment\n    Resiliency tests (using the\n    principles of\n    chaos engineering) are run as part of the automated\n    deployment pipeline in a pre-production environment.\n  \n    These tests are staged and run in the pipeline in a pre-production\n    environment. They should also be run in production as part\n    of\u00a0game\n    days.\n  \nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n \n        Integrate resiliency testing as part of your deployment. Use Chaos\n        Engineering, the discipline of experimenting on a workload to\n        build confidence in the workload\u2019s capability to withstand\n        turbulent conditions in production.\n      \n\n\n Resiliency tests inject faults or resource degradation to assess that your\n              workload responds with its designed resilience. \n\n\n\nWell-Architected lab: Level 300: Testing for Resiliency of EC2 RDS and\n                    S3\n\n\n\n These tests can be run regularly in pre-production environments in automated\n              deployment pipelines. \n\n They should also be run in production, as part of scheduled game days. \n\n Using Chaos Engineering principles, propose hypotheses about how your workload\n              will perform under various impairments, then test your hypotheses using resiliency\n              testing. \n\n\n\nPrinciples of Chaos\n                    Engineering\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nPrinciples\n          of Chaos Engineering\n\n\n\nWhat\n          is AWS Fault Injection Simulator?\n\n\n\nRelated examples:\n\n\n\n\nWell-Architected\n          lab: Level 300: Testing for Resiliency of EC2 RDS and\n          S3\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL08-BP02 Integrate functional testing as part of your\n  deploymentREL08-BP04 Deploy using immutable infrastructureDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_tracking_change_management_resiliency_testing.html", "title": "REL08-BP03 Integrate resiliency testing as part of your deployment - AWS Well-Architected Framework", "description": "Resiliency tests (using the principles of chaos engineering) are run as part of the automated deployment pipeline in a pre-production environment.", "language": "en-US"}}