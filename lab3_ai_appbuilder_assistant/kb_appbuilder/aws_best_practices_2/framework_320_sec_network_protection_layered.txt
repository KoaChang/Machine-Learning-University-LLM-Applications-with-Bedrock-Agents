{"page_content": "SEC05-BP02 Control traffic at all layers - AWS Well-Architected FrameworkSEC05-BP02 Control traffic at all layers - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSEC05-BP02 Control traffic at all layers\n    \u00a0When architecting your network topology, you should examine the\n    connectivity requirements of each component. For example, if a\n    component requires internet accessibility (inbound and outbound),\n    connectivity to VPCs, edge services, and external data centers.\n  \n    A VPC allows you to define your network topology that spans an AWS Region with a private IPv4 address range that you set, or an IPv6\n    address range AWS selects. You should apply multiple controls with a\n    defense in depth approach for both inbound and outbound traffic,\n    including the use of security groups (stateful inspection firewall),\n    Network ACLs, subnets, and route tables. Within a VPC, you can\n    create subnets in an Availability Zone. Each subnet can have an\n    associated route table that defines routing rules for managing the\n    paths that traffic takes within the subnet. You can define an\n    internet routable subnet by having a route that goes to an internet\n    or NAT gateway attached to the VPC, or through another VPC.\n  \n    When an instance, Amazon Relational Database Service(Amazon RDS) database, or other service is launched within\n    a VPC, it has its own security group per network interface. This\n    firewall is outside the operating system layer and can be used to\n    define rules for allowed inbound and outbound traffic. You can also\n    define relationships between security groups. For example, instances\n    within a database tier security group only accept traffic from\n    instances within the application tier, by reference to the security\n    groups applied to the instances involved. Unless you are using\n    non-TCP protocols, it shouldn\u2019t be necessary to have an Amazon Elastic Compute Cloud(Amazon EC2) instance\n    directly accessible by the internet (even with ports restricted by\n    security groups) without a load balancer,\n    or\u00a0CloudFront.\n    This helps protect it from unintended access through an operating\n    system or application issue. A subnet can also have a network ACL\n    attached to it, which acts as a stateless firewall. You should\n    configure the network ACL to narrow the scope of traffic allowed\n    between layers, note that you need to define both inbound and\n    outbound rules.\n   Some AWS services require components to access the internet for making API calls,\n      where\u00a0AWS API\n      endpoints\u00a0are located. Other AWS services use\u00a0VPC endpoints\u00a0within your Amazon VPCs. Many\n    AWS services, including Amazon S3 and Amazon DynamoDB, support VPC endpoints, and this technology has\n    been generalized in\u00a0AWS PrivateLink. We\n    recommend you use this approach to access AWS services, third-party services, and your own\n    services hosted in other VPCs securely. All network traffic on AWS PrivateLink stays on the global\n    AWS backbone and never traverses the internet. Connectivity can only be initiated by the\n    consumer of the service, and not by the provider of the service. Using AWS PrivateLink for\n    external service access allows you to create air-gapped VPCs with no internet access and helps\n    protect your VPCs from external threat vectors. Third-party services can use AWS PrivateLink to\n    allow their customers to connect to the services from their VPCs over private IP addresses. For\n    VPC assets that need to make outbound connections to the internet, these can be made outbound\n    only (one-way) through an AWS managed NAT gateway, outbound only internet gateway, or web\n    proxies that you create and manage. \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n\n\n          Control network traffic in a VPC: Implement VPC best practices\n          to control traffic.\n        \n\n\n\nAmazon VPC\n                security\n\n\n\nVPC\n                endpoints\n\n\n\nAmazon VPC\n                security group\n\n\n\nNetwork\n                ACLs\n\n\n\n Control traffic at the edge: Implement edge services, such as Amazon CloudFront, to provide an\n          additional layer of protection and other features. \n\n\n\nAmazon CloudFront use\n                cases\n\n\n\nAWS\n                Global Accelerator\n\n\n\nAWS Web\n                Application Firewall (AWS WAF)\n\n\n\nAmazon Route\u00a053\n\n\n\nAmazon VPC Ingress Routing\n\n\n\n Control private network traffic: Implement services that protect your private traffic\n          for your workload. \n\n\n\nAmazon VPC\n                Peering\n\n\n\nAmazon VPC\n                Endpoint Services (AWS PrivateLink)\n\n\n\nAmazon VPC\n                Transit Gateway\n\n\n\nAWS Direct Connect\n\n\n\nAWS Site-to-Site\n                VPN\n\n\n\nAWS Client VPN\n\n\n\nAmazon S3 Access\n                Points\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nAWS Firewall Manager\n\n\n\nAmazon Inspector\n\n\n\nGetting\n          started with AWS WAF\n\n\n\nRelated videos:\n\n\n\n\nAWS Transit\n          Gateway reference architectures for many VPCs\n\n\n\nApplication Acceleration and Protection with\n            Amazon CloudFront, AWS WAF, and AWS Shield\n\n\nRelated examples:\n\n\n\n\nLab:\n          Automated Deployment of VPC\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC05-BP01 Create network layersSEC05-BP03 Automate network protectionDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_network_protection_layered.html", "title": "SEC05-BP02 Control traffic at all layers - AWS Well-Architected Framework", "description": "When architecting your network topology, you should examine the connectivity requirements of each component. For example, if a component requires internet accessibility (inbound and outbound), connectivity to VPCs, edge services, and external data centers.", "language": "en-US"}}