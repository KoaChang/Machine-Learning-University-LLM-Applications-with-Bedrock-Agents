{"page_content": "Time-based scaling policies\n\n \nYou can use scheduled or predictive auto scaling to implement a time-based approach. Workloads can be\n      scheduled to scale out or in at defined times (for example, the start of business hours), \n      making resources available when users arrive or demand increases. Predictive scaling uses \n      patterns to scale out while scheduled scaling uses pre-defined times to scale out. You can \n      also use attribute-based instance type selection (ABS) strategy in Auto Scaling groups, \n      which lets you express your instance requirements as a set of attributes, such as vCPU, \n      memory, and storage. This also allows you to automatically use newer generation instance \n      types when they are released and access a broader range of capacity with Amazon EC2 Spot Instances. \n      Amazon EC2 Fleet and Amazon EC2 Auto Scaling select and launch instances that fit the specified attributes, \n      removing the need to manually pick instance types.\n    \nYou can also leverage the AWS APIs\n        and SDKs and AWS CloudFormation\n      to automatically provision and decommission entire environments as you need them. This\n      approach is well suited for development or test environments that run only in defined business\n      hours or periods of time. You can use APIs to scale the size of resources within an environment (vertical scaling). For\n      example, you could scale up a production workload by changing the instance size or class.\n      This can be achieved by stopping and starting the instance and selecting the different\n      instance size or class. This technique can also be applied to other resources, such as Amazon EBS\n      Elastic Volumes, which can be modified to increase size, adjust performance (IOPS) or\n      change the volume type while in use.\nWhen architecting with a time-based approach keep in mind two key considerations. First,\n      how consistent is the usage pattern? Second, what is the impact if the pattern changes? You\n      can increase the accuracy of predictions by monitoring your workloads and by using\n      business intelligence. If you see significant changes in the usage pattern, you can adjust the\n      times to ensure that coverage is provided.\nImplementation steps\n\n\n Configure scheduled scaling: For predictable\n          changes in demand, time-based scaling can provide the correct number of resources in a\n          timely manner. It is also useful if resource creation and configuration is not fast enough\n          to respond to changes on demand. Using the workload analysis configure scheduled scaling\n          using AWS Auto Scaling. To configure time-based scheduling, you can use predictive scaling of scheduled \n          scaling to increase the number of Amazon EC2 instances in your Auto Scaling groups in advance according \n          to expected or predictable load changes.\n\n\nConfigure predictive scaling: Predictive scaling allows you \n          to increase the number of Amazon EC2 instances in your Auto Scaling group in advance of daily and \n          weekly patterns in traffic flows. If you have regular traffic spikes and applications that \n          take a long time to start, you should consider using predictive scaling. Predictive scaling \n          can help you scale faster by initializing capacity before projected load compared to dynamic \n          scaling alone, which is reactive in nature. For example, if users start using your workload \n          with the start of the business hours and don\u2019t use after hours, then predictive scaling can \n          add capacity before the business hours which eliminates delay of dynamic scaling to react to \n          changing traffic.   \n        \n\n Configure dynamic automatic scaling: To configure scaling based\n          on active workload metrics, use Auto Scaling. Use the analysis and configure Auto Scaling to launch on the \n          correct resource levels, and verify that the workload scales in the required time. You can launch \n          and automatically scale a fleet of On-Demand Instances and Spot Instances within a single \n          Auto Scaling group. In addition to receiving discounts for using Spot Instances, you can use \n          Reserved Instances or a Savings Plan to receive discounted rates of the regular On-Demand \n          Instance pricing. All of these factors combined help you to optimize your cost savings for \n          Amazon EC2 instances and help you get the desired scale and performance for your application.\n\nResources\n\nRelated documents:\n\n\n\n\nAWS Auto Scaling\n\n\n\nAWS Instance Scheduler\n\n\n\n          Scale the size of your Auto Scaling group\n        \n\n\nGetting\n          Started with Amazon EC2 Auto Scaling\n\n\n\nGetting\n          started with Amazon SQS\n\n\n\nScheduled\n          Scaling for Amazon EC2 Auto Scaling\n\n\n\n          Predictive scaling for Amazon EC2 Auto Scaling\n        \n\n\nRelated videos:\n\n\n\n\n          Target Tracking Scaling Policies for Auto Scaling\n        \n\nAWS Instance Scheduler\n        \n\n\nRelated examples:\n\n\n\n\n          Attribute based Instance Type Selection for Auto Scaling for Amazon EC2 Fleet\n        \n\n\n          Optimizing Amazon Elastic Container Service for cost using scheduled scaling\n        \n\n\n          Predictive Scaling with Amazon EC2 Auto Scaling\n        \n\n\n          How do I use Instance Scheduler with AWS CloudFormation to schedule Amazon EC2 instances?\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsCOST09-BP02 Implement a buffer or throttle to manage\n  demandOptimize over timeDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/cost-optimization-pillar/cost_manage_demand_resources_dynamic.html", "title": "COST09-BP03 Supply resources dynamically - Cost Optimization Pillar", "description": "Resources are provisioned in a planned manner. This can be demand-based, such as through automatic scaling, or time-based, where demand is predictable and resources are provided based on time. These methods result in the least amount of over-provisioning or under-provisioning.", "language": "en-US"}}