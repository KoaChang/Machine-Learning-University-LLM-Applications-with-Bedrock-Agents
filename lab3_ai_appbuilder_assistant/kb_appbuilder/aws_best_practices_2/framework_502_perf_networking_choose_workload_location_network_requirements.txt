{"page_content": "PERF04-BP06 Choose your workload's location based on network requirements - AWS Well-Architected FrameworkPERF04-BP06 Choose your workload's location based on network requirements - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesPERF04-BP06 Choose your workload's location based on network requirementsEvaluate options for resource placement to reduce network latency and improve throughput, providing an optimal user experience by reducing page load and data transfer times.\nCommon anti-patterns:\n\n\n\n        You consolidate all workload resources into one geographic location.\n      \n\n\n        You chose the closest Region to your location but not to the workload end user.\n      \n\nBenefits of establishing this best\n      practice:\u00a0User experience is greatly affected by the latency between the user and your application. By using appropriate AWS Regions and the AWS private global network, you can reduce latency and deliver a better experience to remote users.\n  \nLevel of risk exposed if this best practice\n    is not established:\u00a0Medium\n  \nImplementation guidance\n\n      Resources, such as Amazon EC2 instances, are placed into Availability Zones within AWS Regions, AWS Local Zones, AWS Outposts, or AWS Wavelength zones. Selection of this location influences network latency and throughput from a given user location. Edge services like Amazon CloudFront and AWS Global Accelerator can also be used to improve network performance by either caching content at edge locations or providing users with an optimal path to the workload through the AWS global network.\n    \n\n      Amazon EC2 provides placement groups for networking. A placement group is a logical grouping of instances to decrease latency. Using placement groups with supported instance types and an Elastic Network Adapter (ENA) enables workloads to participate in a low-latency, reduced jitter 25 Gbps network. Placement groups are recommended for workloads that benefit from low network latency, high network throughput, or both.\n    \n\n      Latency-sensitive services are delivered at edge locations using AWS global network, such as Amazon CloudFront. These edge locations commonly provide services like content delivery network (CDN) and domain name system (DNS). By having these services at the edge, workloads can respond with low latency to requests for content or DNS resolution. These services also provide geographic services, such as geotargeting of content (providing different content based on the end users\u2019 location) or latency-based routing to direct end users to the nearest Region (minimum latency). \n    \n\n      Use edge services to reduce latency and to enable content caching. Configure cache control correctly for both DNS and HTTP/HTTPS to gain the most benefit from these approaches.\n    \nImplementation steps\n\n\n\n            Capture information about the IP traffic going to and from network interfaces.\n          \n\n\n\n                Logging IP traffic using VPC Flow Logs\n              \n\n\n                How the client IP address is preserved in AWS Global Accelerator\n\n\n\n            Analyze network access patterns in your workload to identify how users use your application.\n          \n\n\n\n                Use monitoring tools, such as Amazon CloudWatch and AWS CloudTrail, to gather data on network activities.\n              \n\n\n                Analyze the data to identify the network access pattern.\n              \n\n\n\n            Select Regions for your workload deployment based on the following key elements:\n          \n\n\n\nWhere your data is located: For data-heavy\n                applications (such as big data and machine learning), application code should run as\n                close to the data as possible. \n\n\nWhere your users are located: For user-facing\n                applications, choose a Region (or Regions) close to your workload\u2019s users. \n\n\nOther constraints: Consider constraints such as\n                cost and compliance as explained in What to Consider when Selecting a Region for\n                your Workloads.\n\n\n\n            Use AWS Local Zones to run workloads like video rendering. Local Zones allow you to benefit from having compute and storage resources closer to end users.\n          \n\n\n            Use AWS Outposts for workloads that need to remain on-premises and where you want that workload to run seamlessly with the rest of your other workloads in AWS.\n          \n\n\n            Applications like high-resolution live video streaming, high-fidelity audio, and augmented reality or virtual reality (AR/VR) require ultra-low-latency for 5G devices. For such applications, consider AWS Wavelength. AWS Wavelength embeds AWS compute and storage services within 5G networks, providing mobile edge computing infrastructure for developing, deploying, and scaling ultra-low-latency applications.\n          \n\n\n            Use local caching or AWS Caching Solutions for frequently used assets to improve performance, reduce data movement, and lower environmental impact.\n          \n\n\nService\nWhen to use\n\n\n\n\nAmazon CloudFront\n\n\nUse to cache static content such as images, scripts, and videos, as well as dynamic content such as API responses or web applications.\n\n\n\n\nAmazon ElastiCache\n\n\nUse to cache content for web applications.\n\n\n\n\nDynamoDB Accelerator\n\n\nUse to add in-memory acceleration to your DynamoDB tables.\n\n\n\n\n\n            Use services that can help you run code closer to users of your workload like the following:\n          \n\n\nService\nWhen to use\n\n\n\n\nLambda@edge\n\n\nUse for compute-heavy operations that are initiated when objects are not in the cache.\n\n\n\n\nAmazon CloudFront Functions\n\n\nUse for simple use cases like HTTP(s) requests or response manipulations that can be initiated by short-lived functions.\n\n\n\nAWS IoT Greengrass\n\n\nUse to run local compute, messaging, and data caching for connected devices.\n\n\n\n\n\n            Some applications require fixed entry points or higher performance by reducing first byte latency and jitter, and increasing throughput. These applications can benefit from networking services that provide static anycast IP addresses and TCP termination at edge locations. AWS Global Accelerator can improve performance for your applications by up to 60% and provide quick failover for multi-region architectures. AWS Global Accelerator provides you with static anycast IP addresses that serve as a fixed entry point for your applications hosted in one or more AWS Regions. These IP addresses permit traffic to ingress onto the AWS global network as close to your users as possible. AWS Global Accelerator reduces the initial connection setup time by establishing a TCP connection between the client and the AWS edge location closest to the client. Review the use of AWS Global Accelerator to improve the performance of your TCP/UDP workloads and provide quick failover for multi-Region architectures.\n          \n\nResources\n\nRelated best practices:\n\n\n\n\n          COST07-BP02 Implement Regions based on cost\n        \n\n\n          COST08-BP03 Implement services to reduce data transfer costs\n        \n\n\n          REL10-BP01 Deploy the workload to multiple locations\n        \n\n\n          REL10-BP02 Select the appropriate locations for your multi-location deployment\n        \n\n\n          SUS01-BP01 Choose Region based on both business requirements and sustainability goals\n        \n\n\n          SUS02-BP04 Optimize geographic placement of workloads based on their networking requirements\n        \n\n\n          SUS04-BP07 Minimize data movement across networks\n        \n\n\nRelated documents:\n\n\n\nAWS Global Infrastructure \n        \n\nAWS Local Zones and AWS Outposts, choosing the right technology for your edge workload \n        \n\n\n          Placement groups\n        \n\nAWS Local Zones\n        \n\nAWS Outposts\n\nAWS Wavelength\n\n\n          Amazon CloudFront\n        \n\nAWS Global Accelerator\n\nAWS Direct Connect\n\nAWS Site-to-Site VPN\n\n\n          Amazon Route\u00a053\n        \n\n\nRelated videos:\n\n\n\nAWS Local Zones Explainer Video\n        \n\nAWS Outposts: Overview and How it Works\n        \n\nAWS re:Invent 2021 - AWS Outposts: Bringing the AWS experience on premises \n        \n\nAWS re:Invent 2020: AWS Wavelength: Run apps with ultra-low latency at 5G edge \n        \n\nAWS re:Invent 2022 - AWS Local Zones: Building applications for a distributed edge \n        \n\nAWS re:Invent 2021 - Building low-latency websites with Amazon CloudFront \n        \n\nAWS re:Invent 2022 - Improve performance and availability with AWS Global Accelerator\n\nAWS re:Invent 2022 - Build your global wide area network using AWS\n\nAWS re:Invent 2020: Global traffic management with Amazon Route\u00a053 \n        \n\n\nRelated examples:\n\n\n\nAWS Global Accelerator Workshop\n        \n\n\n          Handling Rewrites and Redirects using Edge Functions\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF04-BP05 Choose network protocols to improve\n  performancePERF04-BP07 Optimize network configuration based on\n  metricsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_networking_choose_workload_location_network_requirements.html", "title": "PERF04-BP06 Choose your workload's location based on network requirements - AWS Well-Architected Framework", "description": "Evaluate options for resource placement to reduce network latency and improve throughput, providing an optimal user experience by reducing page load and data transfer times.", "language": "en-US"}}