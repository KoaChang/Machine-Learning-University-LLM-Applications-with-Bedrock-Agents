{"page_content": "SEC08-BP02 Enforce encryption at rest - AWS Well-Architected FrameworkSEC08-BP02 Enforce encryption at rest - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesSEC08-BP02 Enforce encryption at rest\n    You should enforce the use of encryption for data at rest. Encryption maintains the confidentiality of sensitive data in the event of unauthorized access or accidental disclosure.        \n  \nDesired outcome: Private data should be encrypted by default when at rest. Encryption helps maintain confidentiality of the data and provides an additional layer of protection against intentional or inadvertent data disclosure or exfiltration. Data that is encrypted cannot be read or accessed without first unencrypting the data. Any data stored unencrypted should be inventoried and controlled.\n  \nCommon anti-patterns:\n\n\n\n        Not using encrypt-by-default configurations.\n      \n\n\n        Providing overly permissive access to decryption keys.\n      \n\n\n        Not monitoring the use of encryption and decryption keys.\n      \n\n\n        Storing data unencrypted.\n      \n\n\n        Using the same encryption key for all data regardless of data usage, types, and classification.\n      \n\nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Map encryption keys to data classifications within your workloads. This approach helps protect against overly permissive access when using either a single, or very small number of encryption keys for your data (see SEC07-BP01 Identify the data within your workload).\n    \n\n      AWS Key Management Service (AWS KMS) integrates with many AWS services to make it easier to encrypt your data at rest. For example, in Amazon Simple Storage Service (Amazon S3), you can set default encryption on a bucket so that new objects are automatically encrypted. When using AWS KMS, consider how tightly the data needs to be restricted. Default and service-controlled AWS KMS keys are managed and used on your behalf by AWS. For sensitive data that requires fine-grained access to the underlying encryption key, consider customer managed keys (CMKs). You have full control over CMKs, including rotation and access management through the use of key policies.\n    \n\n      Additionally, Amazon Elastic Compute Cloud (Amazon EC2) and Amazon S3 support the enforcement of encryption by setting default encryption. You can use AWS Config Rules to check automatically that you are using encryption, for example, for Amazon Elastic Block Store (Amazon EBS) volumes, Amazon Relational Database Service (Amazon RDS) instances, and Amazon S3 buckets.\n    \n\n      AWS also provides options for client-side encryption, allowing you to encrypt data prior to uploading it to the cloud. The AWS Encryption SDK provides a way to encrypt your data using envelope encryption. You provide the wrapping key, and the AWS Encryption SDK generates a unique data key for each data object it encrypts. Consider AWS CloudHSM if you need a managed single-tenant hardware security module (HSM). AWS CloudHSM allows you to generate, import, and manage cryptographic keys on a FIPS 140-2 level 3 validated HSM. Some use cases for AWS CloudHSM include protecting private keys for issuing a certificate authority (CA), and turning on transparent data encryption (TDE) for Oracle databases. The AWS CloudHSM Client SDK provides software that allows you to encrypt data client side using keys stored inside AWS CloudHSM prior to uploading your data into AWS. The Amazon DynamoDB Encryption Client also allows you to encrypt and sign items prior to upload into a DynamoDB table.\n    \n\nImplementation steps\n\n\n\n\nEnforce encryption at rest for Amazon S3: Implement Amazon S3 bucket default encryption.\n        \n\nConfigure default encryption for new Amazon EBS volumes: Specify that you want all newly created Amazon EBS volumes to be created in encrypted form, with the option of using the default key provided by AWS or a key that you create.\n        \n\nConfigure encrypted Amazon Machine Images (AMIs): Copying an existing AMI with encryption configured will automatically encrypt root volumes and snapshots.\n        \n\nConfigure Amazon RDS encryption: Configure encryption for your Amazon RDS database clusters and snapshots at rest by using the encryption option.\n        \n\nCreate and configure AWS KMS keys with policies that limit access to the appropriate principals for each classification of data: For example, create one AWS KMS key for encrypting production data and a different key for encrypting development or test data. You can also provide key access to other AWS accounts. Consider having different accounts for your development and production environments. If your production environment needs to decrypt artifacts in the development account, you can edit the CMK policy used to encrypt the development artifacts to give the production account the ability to decrypt those artifacts. The production environment can then ingest the decrypted data for use in production.\n        \n\nConfigure encryption in additional AWS services: For other AWS services you use, review the security documentation for that service to determine the service\u00e2\u20ac\u2122s encryption options.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nAWS           Crypto Tools\n\n\n\nAWS Encryption SDK\n\n\n\nAWS KMS Cryptographic Details Whitepaper\n\n\n\nAWS Key Management Service\n\n\n\nAWS           cryptographic services and tools\n\n\n\nAmazon EBS Encryption\n\n\n\nDefault\n          encryption for Amazon EBS volumes\n\n\n\nEncrypting\n          Amazon RDS Resources\n\n\n\nHow\n          do I enable default encryption for an Amazon S3 bucket?\n\n\n\nProtecting\n          Amazon S3 Data Using Encryption\n\n\n\nRelated videos:\n\n\n\n\nHow Encryption\n          Works in AWS\n\n\n\nSecuring Your\n          Block Storage on AWS\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC08-BP01 Implement secure key managementSEC08-BP03 Automate data at rest protectionDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_protect_data_rest_encrypt.html", "title": "SEC08-BP02 Enforce encryption at rest - AWS Well-Architected Framework", "description": "You should enforce the use of encryption for data at rest. Encryption maintains the confidentiality of sensitive data in the event of unauthorized access or accidental disclosure.", "language": "en-US"}}