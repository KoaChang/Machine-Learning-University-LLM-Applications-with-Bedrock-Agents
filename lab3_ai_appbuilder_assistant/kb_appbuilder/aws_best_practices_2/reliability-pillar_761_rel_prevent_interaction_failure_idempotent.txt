{"page_content": "REL04-BP04 Make all responses idempotent - Reliability PillarREL04-BP04 Make all responses idempotent - Reliability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesREL04-BP04 Make all responses idempotent\n    An idempotent service promises that each request is completed\n    exactly once, such that making multiple identical requests has the\n    same effect as making a single request. An idempotent service makes\n    it easier for a client to implement retries without fear that a\n    request will be erroneously processed multiple times. To do this,\n    clients can issue API requests with an idempotency token\u2014the same\n    token is used whenever the request is repeated. An idempotent\n    service API uses the token to return a response identical to the\n    response that was returned the first time that the request was\n    completed.\n  \n    In a distributed system, it\u2019s easy to perform an action at most once\n    (client makes only one request), or at least once (keep requesting\n    until client gets confirmation of success). But it\u2019s hard to\n    guarantee an action is idempotent, which means it\u2019s\n    performed\u00a0exactly\u00a0once, such that making\n    multiple identical requests has the same effect as making a single\n    request. Using idempotency tokens in APIs, services can receive a\n    mutating request one or more times without creating duplicate\n    records or side effects.\n  \nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n\n        Make all responses idempotent. An idempotent service promises that\n        each request is completed exactly once, such that making multiple\n        identical requests has the same effect as making a single request.\n      \n\n\n Clients can issue API requests with an idempotency token\u2014the same token is used\n              whenever the request is repeated. An idempotent service API uses the token to return a\n              response identical to the response that was returned the first time that the request\n              was completed. \n\n\n\nAmazon EC2: Ensuring\n                    Idempotency\n\n\n\nResources\n\nRelated documents:\n\n\n\n\nAmazon EC2: Ensuring Idempotency\n\n\n\nThe\n          Amazon Builders' Library: Challenges with distributed\n          systems\n\n\n\nThe\n          Amazon Builders' Library: Reliability, constant work, and a\n          good cup of coffee\n\n\n\nRelated videos:\n\n\n\n\nAWS New York\n          Summit 2019: Intro to Event-driven Architectures and Amazon EventBridge (MAD205)\n\n\n\nAWS re:Invent\n          2018: Close Loops and Opening Minds: How to Take Control of\n          Systems, Big and Small ARC337 (includes loose coupling, constant work, static stability)\n\n\n\nAWS re:Invent\n          2019: Moving to event-driven architectures (SVS308)\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL04-BP03 Do constant workDesign interactions in a distributed system to mitigate or withstand failuresDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_prevent_interaction_failure_idempotent.html", "title": "REL04-BP04 Make all responses idempotent - Reliability Pillar", "description": "An idempotent service promises that each request is completed exactly once, such that making multiple identical requests has the same effect as making a single request. An idempotent service makes it easier for a client to implement retries without fear that a request will be erroneously processed multiple times. To do this, clients can issue API requests with an idempotency token\u2014the same token is used whenever the request is repeated. An idempotent service API uses the token to return a response identical to the response that was returned the first time that the request was completed.", "language": "en-US"}}