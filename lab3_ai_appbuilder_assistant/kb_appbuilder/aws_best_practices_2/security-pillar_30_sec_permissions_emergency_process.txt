{"page_content": "SEC03-BP03 Establish emergency access process - Security PillarSEC03-BP03 Establish emergency access process - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidance Resources SEC03-BP03 Establish emergency access\n      process\n    Create a process that allows for emergency access to your workloads\n    in the unlikely event of an issue with your centralized identity\n    provider.\n  \n    You must design processes for different failure modes that may\n    result in an emergency event. For example, under normal\n    circumstances, your workforce users federate to the cloud using a\n    centralized identity provider\n    (SEC02-BP04)\n    to manage their workloads. However, if your centralized identity\n    provider fails, or the configuration for federation in the cloud is\n    modified, then your workforce users may not be able to federate into\n    the cloud. An emergency access process allows authorized\n    administrators to access your cloud resources through alternate\n    means (such as an alternate form of federation or direct user\n    access) to fix issues with your federation configuration or your\n    workloads. The emergency access process is used until the normal\n    federation mechanism is restored.\n  \nDesired outcome:\n\n\n\n        You have defined and documented the failure modes that count as\n        an emergency: consider your normal circumstances and the systems\n        your users depend on to manage their workloads. Consider how\n        each of these dependencies can fail and cause an emergency\n        situation. You may find the questions and best practices in the\n        Reliability\n          pillar useful to identify failure modes and architect\n        more resilient systems to minimize the likelihood of failures.\n      \n\n\n        You have documented the steps that must be followed to confirm a\n        failure as an emergency. For example, you can require your\n        identity administrators to check the status of your primary and\n        standby identity providers and, if both are unavailable, declare\n        an emergency event for identity provider failure.\n      \n\n\n        You have defined an emergency access process specific to each\n        type of emergency or failure mode. Being specific can reduce the\n        temptation on the part of your users to overuse a general\n        process for all types of emergencies. Your emergency access\n        processes describe the circumstances under which each process\n        should be used, and conversely situations where the process\n        should not be used and points to alternate processes that may\n        apply.\n      \n\n\n        Your processes are well-documented with detailed instructions\n        and playbooks that can be followed quickly and efficiently.\n        Remember that an emergency event can be a stressful time for\n        your users and they may be under extreme time pressure, so\n        design your process to be as simple as possible.\n      \n\nCommon anti-patterns:\n\n\n\n        You do not have well-documented and well-tested emergency access\n        processes. Your users are unprepared for an emergency and follow\n        improvised processes when an emergency event arises.\n      \n\n\n        Your emergency access processes depend on the same systems (such\n        as a centralized identity provider) as your normal access\n        mechanisms. This means that the failure of such a system may\n        impact both your normal and emergency access mechanisms and\n        impair your ability to recover from the failure.\n      \n\n\n        Your emergency access processes are used in non-emergency\n        situations. For example, your users frequently misuse emergency\n        access processes as they find it easier to make changes directly\n        than submit changes through a pipeline.\n      \n\n\n        Your emergency access processes do not generate sufficient logs\n        to audit the processes, or the logs are not monitored to alert\n        for potential misuse of the processes.\n      \n\nBenefits of establishing this best\n      practice:\n\n\n\n        By having well-documented and well-tested emergency access\n        processes, you can reduce the time taken by your users to\n        respond to and resolve an emergency event. This can result in\n        less downtime and higher availability of the services you\n        provide to your customers.\n      \n\n\n        You can track each emergency access request and detect and alert\n        on unauthorized attempts to misuse the process for non-emergency\n        events.\n      \n\nLevel of risk exposed if this best practice\n      is not established: Medium\n  \nImplementation guidance \n\n      This section provides guidance for creating emergency access\n      processes for several failure modes related to workloads deployed\n      on AWS, starting with common guidance that applies to all failure\n      modes and followed by specific guidance based on the type of\n      failure mode.\n    \n\nCommon guidance for all failure\n      modes\n\n\n      Consider the following as you design an emergency access process\n      for a failure mode:\n    \n\n\n\n          Document the pre-conditions and assumptions of the process:\n          when the process should be used and when it should not be\n          used. It helps to detail the failure mode and document\n          assumptions, such as the state of other related systems. For\n          example, the process for the Failure Mode 2 assumes that the identity provider is\n          available, but the configuration on AWS is modified or has\n          expired.\n        \n\n\n          Pre-create resources needed by the emergency access process\n          (SEC10-BP05).\n          For example, pre-create the emergency access AWS account with\n          IAM users and roles, and the cross-account IAM roles in all\n          the workload accounts. This verifies that these resources are\n          ready and available when an emergency event happens. By\n          pre-creating resources, you do not have a dependency on AWS\n          control plane\n          APIs (used to create and modify AWS resources) that may be\n          unavailable in an emergency. Further, by pre-creating IAM\n          resources, you do not need to account for\n          potential\n          delays due to eventual consistency.\n\n\n\n          Include emergency access processes as part of your incident\n          management plans\n          (SEC10-BP02).\n          Document how emergency events are tracked and communicated to\n          others in your organization such as peer teams, your\n          leadership, and, when applicable, externally to your customers\n          and business partners.\n        \n\n\n          Define the emergency access request process in your existing\n          service request workflow system if you have one. Typically,\n          such workflow systems allow you to create intake forms to\n          collect information about the request, track the request\n          through each stage of the workflow, and add both automated and\n          manual approval steps. Relate each request with a\n          corresponding emergency event tracked in your incident\n          management system. Having a uniform system for emergency\n          accesses allows you to track those requests in a single\n          system, analyze usage trends, and improve your processes.\n        \n\n\n          Verify that your emergency access processes can only be\n          initiated by authorized users and require approvals from the\n          user's peers or management as appropriate. The approval\n          process should operate effectively both inside and outside\n          business hours. Define how requests for approval allow\n          secondary approvers if the primary approvers are unavailable\n          and are escalated up your management chain until approved.\n        \n\n\n          Verify that the process generates detailed audit logs and\n          events for both successful and failed attempts to gain\n          emergency access. Monitor both the request process and the\n          emergency access mechanism to detect misuse or unauthorized\n          accesses. Correlate activity with ongoing emergency events\n          from your incident management system and alert when actions\n          happen outside of expected time periods. For example, you\n          should monitor and alert on activity in the emergency access\n          AWS account, as it should never be used in normal operations.\n        \n\n\n          Test emergency access processes periodically to verify that\n          the steps are clear and grant the correct level of access\n          quickly and efficiently. Your emergency access processes\n          should be tested as part of incident response simulations\n          (SEC10-BP07)\n          and disaster recovery tests\n          (REL13-BP03).\n        \n\n\nFailure Mode 1: Identity provider used to\n      federate to AWS is unavailable\n\n\n      As described in\n      SEC02-BP04\n      Rely on a centralized identity provider, we recommend\n      relying on a centralized identity provider to federate your\n      workforce users to grant access to AWS accounts. You can federate\n      to multiple AWS accounts in your AWS organization using IAM Identity Center, or you can federate to individual AWS accounts\n      using IAM. In both cases, workforce users authenticate with\n      your centralized identity provider before being redirected to an\n      AWS sign-in endpoint to single sign-on.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/sec_permissions_emergency_process.html", "title": "SEC03-BP03 Establish emergency access process - Security Pillar", "description": "Create a process that allows for emergency access to your workloads in the unlikely event of an issue with your centralized identity provider.", "language": "en-US"}}