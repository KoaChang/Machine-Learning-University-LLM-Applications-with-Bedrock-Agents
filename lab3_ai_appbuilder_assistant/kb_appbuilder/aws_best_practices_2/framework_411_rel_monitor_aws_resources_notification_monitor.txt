{"page_content": "REL06-BP03 Send notifications (Real-time processing and alarming) - AWS Well-Architected FrameworkREL06-BP03 Send notifications (Real-time processing and alarming) - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesREL06-BP03 Send notifications (Real-time processing and\n  alarming)When organizations detect potential issues, they send real-time notifications and alerts to the appropriate personnel and systems in order to respond quickly and effectively to these issues.\nDesired outcome: Rapid responses to operational events are possible through configuration of relevant alarms based on service and application metrics. When alarm thresholds are breached, the appropriate personnel and systems are notified so they can address underlying issues.\n  \nCommon anti-patterns:\n\n\nConfiguring alarms with an excessively high threshold, resulting in the failure to send vital notifications.\n\nConfiguring alarms with a threshold that is too low, resulting in inaction on important alerts due to the noise of excessive notifications.\n\n\n        Not updating alarms and their threshold when usage changes.\n      \n\n\n        For alarms best addressed through automated actions, sending the notification to personnel instead of generating the automated action results in excessive notifications being sent.\n      \n\nBenefits of establishing this best\n      practice: Sending real-time notifications and alerts to the appropriate personnel and systems allows for early detection of issues and rapid responses to operational incidents.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Workloads should be equipped with real-time processing and alarming to improve the detectability of issues that could impact the availability of the application and serve as triggers for automated response. Organizations can perform real-time processing and alarming by creating alerts with defined metrics in order to receive notifications whenever significant events occur or a metric exceeds a threshold.\n    \n\nAmazon CloudWatch allows you to create metric and composite alarms using CloudWatch alarms based on static threshold, anomaly detection, and other criteria. For more detail on the types of alarms you can configure using CloudWatch, see the alarms section of the CloudWatch documentation.\n    \n\n      You can construct customized views of metrics and alerts of your AWS resources for your teams using CloudWatch dashboards. The customizable home pages in the CloudWatch console allow you to monitor your resources in a single view across multiple Regions. \n    \n\n      Alarms can perform one or more actions, like sending a notification to an Amazon SNS topic, performing an Amazon EC2 action or an Amazon EC2 Auto Scaling action, or creating an OpsItem or incident in AWS Systems Manager.\n    \n\n      Amazon CloudWatch uses Amazon SNS to send notifications when the alarm changes state, providing message delivery from the publishers (producers) to the subscribers (consumers). \n      For more detail on setting up Amazon SNS notifications, see Configuring Amazon SNS.\n    \n\n      CloudWatch sends EventBridge events whenever a CloudWatch alarm is created, updated, deleted, or its state changes. You can use EventBridge with these events to create rules that perform actions, such as notifying you whenever the state of an alarm changes or \n      automatically triggering events in your account using Systems Manager automation.\n    \n\n      When should you use EventBridge or Amazon SNS?\n    \n\n      Both EventBridge and Amazon SNS can be used to develop event-driven applications, and your choice will depend on your specific needs.\n    \n\n      Amazon EventBridge is recommended when you want to build an application that reacts to events from your own applications, SaaS applications, and AWS services. EventBridge is the only event-based service that integrates directly with third-party SaaS partners. EventBridge also automatically ingests events from over 200 AWS services without requiring developers to create any resources in their account.\n    \n\n      EventBridge uses a defined JSON-based structure for events, and helps you create rules that are applied across the entire event body to select events to forward to a target. EventBridge currently supports over 20 AWS services as targets, including AWS Lambda, Amazon SQS, Amazon SNS, Amazon Kinesis Data Streams, and Amazon Data Firehose.\n    \n\n      Amazon SNS is recommended for applications that need high fan out (thousands or millions of endpoints). A common pattern we see is that customers use Amazon SNS as a target for their rule to filter the events that they need, and fan out to multiple endpoints.\n    \n\n      Messages are unstructured and can be in any format. Amazon SNS supports forwarding messages to six different types of targets, including Lambda, Amazon SQS, HTTP/S endpoints, SMS, mobile push, and email. Amazon SNS typical latency is under 30 milliseconds. A wide range of AWS services send Amazon SNS messages by configuring the service to do so (more than 30, including Amazon EC2, Amazon S3, and Amazon RDS).\n    \nImplementation steps\n\n\n\n            Create an alarm using Amazon CloudWatch alarms. \n          \n\n\n\n                A metric alarm monitors a single CloudWatch metric or an expression dependent on CloudWatch metrics. The alarm initiates one or more actions based on the value of the metric or expression in comparison to a threshold over a number of time intervals. The action may consist of sending a notification to an Amazon SNS topic, performing an Amazon EC2 action or an Amazon EC2 Auto Scaling action, or creating an OpsItem or incident in AWS Systems Manager.\n              \n\n\n                A composite alarm consists of a rule expression that considers the alarm conditions of other alarms you've created. The composite alarm only enters alarm state if all rule conditions are met. The alarms specified in the rule expression of a composite alarm can include metric alarms and additional composite alarms. Composite alarms can send Amazon SNS notifications when their state changes and can create Systems Manager OpsItems or incidents when they enter the alarm state, but they cannot perform Amazon EC2 or Auto Scaling actions. \n              \n\n\n\n            Set up Amazon SNS notifications. When creating a CloudWatch alarm, you can include an Amazon SNS topic to send a notification when the alarm changes state.\n          \n\n\nCreate rules in EventBridge that matches specified CloudWatch alarms. Each rule supports multiple targets, including Lambda functions. For example, you can define an alarm that initiates when available disk space is running low, which triggers a Lambda function through an EventBridge rule, to clean up the space. For more detail on EventBridge targets, see EventBridge targets. \n          \n\nResources\n\nRelated Well-Architected best practices:\n\n\n\n\nREL06-BP01 Monitor all components for the workload\n  (Generation)\n\n\n\nREL06-BP02 Define and calculate metrics (Aggregation)\n\n\n\nREL12-BP01 Use playbooks to investigate failures\n\n\n\nRelated documents:\n\n\n\n\n          Amazon CloudWatch \n        \n\n\n          CloudWatch Logs insights\n        \n\n\nUsing\n          Amazon CloudWatch alarms\n\n\n\nUsing\n          Amazon CloudWatch dashboards\n\n\n\nUsing\n          Amazon CloudWatch metrics\n\n\n\n          Setting up Amazon SNS notifications\n        \n\n\n          CloudWatch anomaly detection\n        \n\n\n          CloudWatch Logs data protection\n        \n\n\n          Amazon EventBridge\n        \n\n\n          Amazon Simple Notification Service\n        \n\n\nRelated videos:\n\n\n\n\n          reinvent 2022 observability videos\n        \n\nAWS re:Invent 2022 - Observability best practices at Amazon\n        \n\n\nRelated examples:\n\n\n\n\nOne\n            Observability Workshop\n\n\n\n          Amazon EventBridge to AWS Lambda with feedback control by Amazon CloudWatch Alarms\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsREL06-BP02 Define and calculate metrics (Aggregation)REL06-BP04 Automate responses (Real-time processing and\n  alarming)Did this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_monitor_aws_resources_notification_monitor.html", "title": "REL06-BP03 Send notifications (Real-time processing and alarming) - AWS Well-Architected Framework", "description": "When organizations detect potential issues, they send real-time notifications and alerts to the appropriate personnel and systems in order to respond quickly and effectively to these issues.", "language": "en-US"}}