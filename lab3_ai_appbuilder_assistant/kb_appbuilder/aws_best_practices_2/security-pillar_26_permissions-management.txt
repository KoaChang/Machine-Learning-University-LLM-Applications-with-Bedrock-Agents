{"page_content": "Permissions management - Security PillarPermissions management - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkPermissions managementManage permissions to control access to human and machine identities that require access\n      to AWS and your workloads. Permissions control who can access what, and under what conditions.\n      Set permissions to specific human and machine identities to grant access to specific service\n      actions on specific resources. Additionally, specify conditions that must be true for access\n      to be granted. For example, you can allow developers to create new Lambda functions, but only\n      in a specific Region. When managing your AWS environments at scale, adhere to the following\n      best practices to ensure that identities only have the access they need and nothing\n      more.There are a number of ways to grant access to different types of resources. One way is\n        by using different policy types.Identity-based policies in IAM are managed or\n        inline, and attach to IAM identities, including users,\n      groups, or roles. These policies let you specify what that identity can do (its permissions).\n      Identity-based policies can be further categorized.Managed policies \u2013 Standalone identity-based policies\n      that you can attach to multiple users, groups, and roles in your AWS account. There are two\n      types of managed policies: \n\nAWS-managed policies \u2013 Managed policies that are\n          created and managed by AWS. \n\nCustomer-managed policies \u2013 Managed policies that you\n          create and manage in your AWS account. Customer-managed policies provide more precise\n          control over your policies than AWS-managed policies. \nManaged polices are the preferred method for applying permissions. However, you also can\n      use inline policies that you add directly to a single user, group, or role. Inline policies\n      maintain a strict one-to-one relationship between a policy and an identity. Inline policies\n      are deleted when you delete the identity.In most cases, you should create your own customer-managed policies following the\n      principle of least privilege.Resource-based policies are attached to a resource. For example, an S3 bucket\n        policy is a resource-based policy. These policies grant permission to a principal that can\n        be in the same account as the resource or in another account. For a list of services that\n        support resource-based policies, see AWS services that work with IAM.Permissions boundaries use a managed policy to set the maximum permissions that an\n      administrator can set. This allows you to delegate the ability to create and manage\n      permissions to developers, such as the creation of an IAM role, but limit the permissions they\n      can grant so that they cannot escalate their permission using what they have created. \nAttribute-based\n          access control (ABAC) allows you to grant permissions based on attributes. In\n        AWS, these are called tags. Tags can be attached to IAM principals (users or roles) and to\n        AWS resources. Using IAM policies, administrators can create a reusable policy that applies\n        permissions based on the attributes of the IAM principal. For example, as an administrator\n        you can use a single IAM policy that grants developers in your organization access to AWS\n        resources that match the developers\u2019 project tags. As the team of developers adds resources\n        to projects, permissions are automatically applied based on attributes. As a result, no\n        policy update is required for each new resource.Organizations service control policies (SCP) define the maximum permissions for\n        account members of an organization or organizational unit (OU). SCPs limit permissions that identity-based policies or resource-based policies\n        grant to entities (users or roles) within the account, but do\n          not grant permissions.Session policies assume a role or a federated user. Pass session policies when\n        using the AWS CLI or AWS API Session policies to limit the permissions that the role or\n        user's identity-based policies grant to the session. These policies limit permissions for a created session, but do not\n          grant permissions. For more information, see Session Policies.Best practices SEC03-BP01 Define access requirementsSEC03-BP02 Grant least privilege accessSEC03-BP03 Establish emergency access\n      processSEC03-BP04 Reduce permissions continuouslySEC03-BP05 Define permission guardrails for\n      your organizationSEC03-BP06 Manage access based on lifecycleSEC03-BP07 Analyze public and cross-account accessSEC03-BP08 Share resources securely within your organizationSEC03-BP09 Share resources securely with a third party Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC02-BP06 Leverage user groups and attributesSEC03-BP01 Define access requirementsDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/permissions-management.html", "title": "Permissions management - Security Pillar", "description": "Manage permissions to control access to human and machine identities that require access to AWS and your workloads. Permissions control who can access what, and under what conditions. Set permissions to specific human and machine identities to grant access to specific service actions on specific resources. Additionally, specify conditions that must be true for access to be granted.", "language": "en-US"}}