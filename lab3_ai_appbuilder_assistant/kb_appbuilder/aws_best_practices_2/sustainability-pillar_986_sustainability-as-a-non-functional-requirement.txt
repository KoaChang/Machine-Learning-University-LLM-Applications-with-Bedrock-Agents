{"page_content": "Sustainability as a non-functional requirement - Sustainability PillarSustainability as a non-functional requirement - Sustainability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkSustainability as a non-functional requirement\n    Adding sustainability to your list of business requirements can\n    result in more cost-effective solutions. Focusing on getting more\n    value from the resources you use and using fewer of them directly\n    translates to cost savings on AWS as you pay only for what you use.\n  \n    Meeting sustainability targets might not require equivalent\n    trade-offs in one or more other traditional metrics such as uptime,\n    availability, or response time. You can achieve significant gains in\n    sustainability with no measurable impact on service levels. Where\n    minor trade-offs are required, the sustainability improvements\n    gained by these trade-offs can outweigh the change in quality of\n    service.\n  \n    Encourage your team members to continually experiment with\n    sustainability improvements as they develop functional requirements.\n    Teams should also embed proxy metrics when setting goals to ensure\n    that they evaluate resource intensity when developing their\n    workloads.\n  \n    The following are example trade-offs that can reduce the cloud\n    resources you consume:\n  \nAdjust quality of result: You can\n    trade Quality of Results (QoR) for a reduction in workload intensity\n    with approximate computing. The practice of approximate computing\n    looks for opportunities to exploit the gap between what customers\n    need and what you actually produce. For example, if you place your\n    data in a set\u00c2\u00a0data structure, you can drop the\n    ORDER BY operator in SQL to remove unnecessary processing, saving\n    resources while still providing an acceptable answer.\n  \nAdjust response time: An answer\n    with a slower response time can reduce carbon by minimizing shared\n    overhead. Processing ad hoc, ephemeral tasks can incur startup\n    overhead. Group and process tasks in batches instead of paying for\n    overhead each time a task arrives. Batch processing trades increased\n    response time for a reduction in the shared overhead of spinning up\n    an instance, downloading the source code, and running the process.\n  \nAdjust availability: With AWS, you can add redundancy and\n    meet high-availability targets with just a few clicks. You can increase redundancy through\n    techniques like static stability by provisioning idle resources that always result in decreased\n    utilization. Evaluate the needs of the business when setting targets. Relatively minor\n    trade-offs in availability can result in much larger improvements in utilization. For example,\n    the static stability architecture pattern involves provisioning idle failover capacity to\n    immediately take on load after a component fault. Relaxing the availability requirement can\n    remove the need for idle online capacity by allowing time for automation to deploy replacement\n    resources. Adding failover capacity on-demand drives higher overall utilization with no impact\n    to the business during normal operations and has the secondary benefit of reducing costs. Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsMeasure results and replicate successesBest practices for sustainability in the cloudDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/sustainability-pillar/sustainability-as-a-non-functional-requirement.html", "title": "Sustainability as a non-functional requirement - Sustainability Pillar", "description": "Adding sustainability to your list of business requirements can result in more cost-effective solutions. Focusing on getting more value from the resources you use and using fewer of them directly translates to cost savings on AWS as you pay only for what you use.", "language": "en-US"}}