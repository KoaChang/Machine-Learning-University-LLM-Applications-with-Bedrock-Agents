{"page_content": "COST09-BP02 Implement a buffer or throttle to manage demand - AWS Well-Architected FrameworkCOST09-BP02 Implement a buffer or throttle to manage demand - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesCOST09-BP02 Implement a buffer or throttle to manage\n  demand\n\nThis best practice was updated with new guidance on December 6, 2023.\n\n\n    Buffering and throttling modify the demand on your workload,\n    smoothing out any peaks. Implement throttling when your clients\n    perform retries. Implement buffering to store the request and defer\n    processing until a later time. Verify that your throttles and\n    buffers are designed so clients receive a response in the required\n    time.\n  \nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Implementing a buffer or throttle is crucial in cloud computing in order to manage demand and reduce the provisioned capacity required for your workload. For optimal performance, it's essential to gauge the total demand, including peaks, the pace of change in requests, and the necessary response time. When clients have the ability to resend their requests, it becomes practical to apply throttling. Conversely, for clients lacking retry functionalities, the ideal approach is implementing a buffer solution. Such buffers streamline the influx of requests and optimize the interaction of applications with varied operational speeds. \n    \n\n\nDemand curve with two distinct peaks that require high provisioned capacity\n\n\n      Assume a workload with the demand curve shown in preceding image. This workload has two peaks, and to handle those peaks, the resource capacity as shown by orange line is provisioned. The resources and energy used for this workload are not indicated by the area under the demand curve, but the area under the provisioned capacity line, as provisioned capacity is needed to handle those two peaks. Flattening the workload demand curve can help you to reduce the provisioned capacity for a workload and reduce its environmental impact. To smooth out the peak, consider to implement throttling or buffering solution. \n    \n\n      To understand them better, let\u2019s explore throttling and buffering.\n    \n\nThrottling: If the source of the demand has retry\n      capability, then you can implement throttling. Throttling tells the source that if it cannot\n      service the request at the current time, it should try again later. The source waits for a\n      period of time, and then retries the request. Implementing throttling has the advantage of\n      limiting the maximum amount of resources and costs of the workload. In AWS, you can use\n        Amazon API Gateway to implement throttling.\n    \n\nBuffer based: A buffer-based approach uses producers (components that send messages to the queue), consumers (components that receive messages from the queue), and a queue (which holds messages) to store the messages. Messages are read by consumers and processed, allowing the messages to run at the rate that meets the consumers\u2019 business requirements. By using a buffer-centric methodology, messages from producers are housed in queues or streams, ready to be accessed by consumers at a pace that aligns with their operational demands. \n    \nIn AWS, you can choose from multiple services to implement a buffering approach. Amazon Simple Queue Service(Amazon SQS) is a managed service that\n      provides queues that allow a single consumer to read individual messages. Amazon Kinesis provides a stream that allows many\n      consumers to read the same messages.\n\n      Buffering and throttling can smooth out any peaks by modifying the demand on your workload. Use throttling when clients retry actions and use buffering to hold the request and process it later. When working with a buffer-based approach, architect your workload to service the request in the required time, verify that you are able to handle duplicate requests for work. Analyze the overall demand, rate of change, and required response time to right size the throttle or buffer required.\n    \nImplementation steps\n\n\n Analyze the client requirements: Analyze the client requests to determine if they are capable of performing retries. For clients that cannot perform retries, buffers need to be implemented. Analyze the overall demand, rate of change, and required response time to determine the size of throttle or buffer required.\n\n Implement a buffer or throttle: Implement a buffer\n          or throttle in the workload. A queue such as Amazon Simple Queue Service (Amazon SQS) can provide a buffer to\n          your workload components. Amazon API Gateway can provide throttling for your workload components. \n\nResources\n\nRelated best practices:\n\n\n\n\n          SUS02-BP06 Implement buffering or throttling to flatten the demand curve\n        \n\n\n          REL05-BP02 Throttle requests\n        \n\n\nRelated documents:\n\n\n\n\nAWS Auto Scaling\n\n\n\nAWS           Instance Scheduler\n\n\n\nAmazon API Gateway\n\n\n\nAmazon Simple Queue Service\n\n\n\nGetting\n          started with Amazon SQS\n\n\n\nAmazon Kinesis\n\n\n\nRelated videos:\n\n\n\n\n          Choosing the Right Messaging Service for Your Distributed App\n        \n\n\nRelated examples:\n\n\n\n\n          Managing and monitoring API throttling in your workloads\n        \n\n\n          Throttling a tiered, multi-tenant REST API at scale using API Gateway\n        \n\n\n          Enabling Tiering and Throttling in a Multi-Tenant Amazon EKS SaaS Solution Using Amazon API Gateway\n        \n\n\n          Application integration Using Queues and Messages   \n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsCOST09-BP01 Perform an analysis on the workload demandCOST09-BP03 Supply resources dynamicallyDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/cost_manage_demand_resources_buffer_throttle.html", "title": "COST09-BP02 Implement a buffer or throttle to manage demand - AWS Well-Architected Framework", "description": "Buffering and throttling modify the demand on your workload, smoothing out any peaks. Implement throttling when your clients perform retries. Implement buffering to store the request and defer processing until a later time. Verify that your throttles and buffers are designed so clients receive a response in the required time.", "language": "en-US"}}