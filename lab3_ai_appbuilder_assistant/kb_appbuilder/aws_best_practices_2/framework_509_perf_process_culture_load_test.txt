{"page_content": "PERF05-BP04 Load test your workload - AWS Well-Architected FrameworkPERF05-BP04 Load test your workload - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkImplementation guidanceResourcesPERF05-BP04 Load test your workload\n    Load test your workload to verify it can handle production load and\n    identify any performance bottleneck.\n  \nCommon anti-patterns:\n\n\n\n        You load test individual parts of your workload but not your\n        entire workload.\n      \n\n\n        You load test on infrastructure that is not the same as your\n        production environment.\n      \n\n\n        You only conduct load testing to your expected load and not\n        beyond, to help foresee where you may have future problems.\n      \n\n\n        You perform load testing without consulting the Amazon EC2 Testing Policy and submitting a Simulated Event Submissions Form. This results in your test failing to run, as it looks like a denial-of-service event.\n      \n\nBenefits of establishing this best\n    practice: Measuring your performance under a load test\n    will show you where you will be impacted as load increases. This can\n    provide you with the capability of anticipating needed changes\n    before they impact your workload.\n  \nLevel of risk exposed if this best practice\n    is not established: Low\n  \nImplementation guidance\n\n      Load testing in the cloud is a process to measure the performance\n      of cloud workload under realistic conditions with expected user\n      load. This process involves provisioning a production-like cloud\n      environment, using load testing tools to generate load, and\n      analyzing metrics to assess the ability of your workload handling\n      a realistic load. Load tests must be run using synthetic or\n      sanitized versions of production data (remove sensitive or\n      identifying information). Automatically carry out load tests as\n      part of your delivery pipeline, and compare the results against\n      pre-defined KPIs and thresholds. This process helps you continue\n      to achieve required performance.\n    \nImplementation steps\n\n\n\n            Set up the test environment based on your production\n            environment. You can use AWS services to run\n            production-scale environments to test your architecture.\n          \n\n\n            Choose and configure the load testing tool that suits your\n            workload.\n          \n\n\n            Define the load testing scenarios and parameters (like test\n            duration and number of users).\n          \n\n\n            Perform test scenarios at scale. Take advantage of the AWS Cloud to test your workload to discover where it fails to\n            scale, or if it scales in a non-linear way. For example, use\n            Spot Instances to generate loads at low cost and discover\n            bottlenecks before they are experienced in production.\n          \n\n\n            Monitor and record performance metrics (like throughput and\n            response time). Amazon CloudWatch can collect metrics across\n            the resources in your architecture. You can also collect and\n            publish custom metrics to surface business or derived\n            metrics.\n          \n\n\n            Analyze the results to identify performance bottlenecks and\n            areas for improvements.\n          \n\n\n            Document and report on load testing process and results.\n          \n\nResources\n\nRelated documents:\n\n\n\n\nAWS CloudFormation\n\n\n\nAmazon CloudWatch RUM\n\n\n\nAmazon CloudWatch Synthetics\n\n\n\nDistributed\n          Load Testing on AWS\n\n\n\nRelated videos:\n\n\n\n\nSolving\n          with AWS Solutions: Distributed Load Testing\n\n\n\n\n\nOptimize\n          applications through Amazon CloudWatch RUM\n\n\n\nDemo\n          of Amazon CloudWatch Synthetics\n\n\n\nRelated examples:\n\n\n\n\nDistributed\n          Load Testing on AWS\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsPERF05-BP03 Define a process to improve workload\n  performancePERF05-BP05 Use automation to proactively remediate\n  performance-related issuesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/perf_process_culture_load_test.html", "title": "PERF05-BP04 Load test your workload - AWS Well-Architected Framework", "description": "Load test your workload to verify it can handle production load and identify any performance bottleneck.", "language": "en-US"}}