{"page_content": "OPS05-BP01 Use version control - Operational Excellence PillarOPS05-BP01 Use version control - Operational Excellence PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesOPS05-BP01 Use version control\n    Use version control to activate tracking of changes and releases.\n  \n    Many AWS services offer version control capabilities. Use a revision\n    or source control system such as\n    AWS CodeCommit to manage code and other artifacts, such as\n    version-controlled\n    AWS CloudFormation templates of your infrastructure.\n  \nDesired outcome: Your teams collaborate on code.  When merged, the code is consistent and no changes are lost. Errors are easily reverted through correct versioning.\n  \nCommon anti-patterns:\n\n\n\n        You have been developing and storing your code on your\n        workstation. You have had an unrecoverable storage failure on\n        the workstation and your code is lost.\n      \n\n\n        After overwriting the existing code with your changes, you\n        restart your application and it is no longer operable. You are\n        unable to revert the change.\n      \n\n\n        You have a write lock on a report file that someone else needs\n        to edit. They contact you asking that you stop work on it so\n        that they can complete their tasks.\n      \n\n\n        Your research team has been working on a detailed analysis that\n        shapes your future work. Someone has accidentally saved\n        their shopping list over the final report. You are unable to\n        revert the change and have to recreate the report.\n      \n\nBenefits of establishing this best\n    practice: By using version control capabilities you can\n    easily revert to known good states and previous versions, and limit the\n    risk of assets being lost.\n  \nLevel of risk exposed if this best practice\n    is not established: High\n  \nImplementation guidance\n\n      Maintain assets in version controlled repositories. Doing so supports tracking changes, deploying new versions, detecting changes to existing versions, and reverting to prior versions (for example, rolling back to a known good state in the event of a failure). Integrate the version control capabilities of your configuration management systems into your procedures.\n    \nResources\n\nRelated best practices:\n\n\n\n\nOPS05-BP04 Use build and deployment management systems\n\n\n\nRelated documents:\n\n\n\n\nWhat\n          is AWS CodeCommit?\n\n\n\nRelated videos:\n\n\n\n\nIntroduction\n          to AWS CodeCommit\n\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsDesign for operationsOPS05-BP02 Test and validate changesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/operational-excellence-pillar/ops_dev_integ_version_control.html", "title": "OPS05-BP01 Use version control - Operational Excellence Pillar", "description": "Use version control to activate tracking of changes and releases.", "language": "en-US"}}