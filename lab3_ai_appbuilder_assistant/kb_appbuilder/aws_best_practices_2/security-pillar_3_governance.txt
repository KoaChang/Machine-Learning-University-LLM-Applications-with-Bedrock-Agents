{"page_content": "Governance - Security PillarGovernance - Security PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkGovernanceSecurity governance, as a subset of the overall approach, is meant to support\n        business objectives by defining policies and control objectives to help manage risk. Achieve\n        risk management by following a layered approach to security control objectives\u2013each layer\n        builds upon the previous one. Understanding the AWS Shared Responsibility Model is your\n        foundational layer. This knowledge provides clarity on what you are responsible for on the\n        customer side and what you inherit from AWS. A beneficial resource is AWS Artifact, which gives you on-demand\n        access to AWS\u2019 security and compliance reports and select online agreements.\n        Meet most of your control objectives at the next layer. This is where the\n        platform-wide capability lives. For example, this layer includes the AWS account vending\n        process, integration with an identity provider such as AWS IAM Identity Center, and the\n        common detective controls. Some of the output of the platform governance process is here\n        too. When you want to start using a new AWS service, update service control policies (SCPs)\n        in the AWS Organizations service to provide the guardrails for initial use of the service.\n        You can use other SCPs to implement common security control objectives, often referred to as\n        security invariants. These are control objectives or configuration that you apply to\n        multiple accounts, organization units, or the whole AWS organization. Typical examples are\n        limiting the Regions that infrastructure runs in or preventing the deactivation of detective\n        controls. This middle layer also contains codified policies such as config rules or checks\n        in pipelines.The top layer is where the product teams meet control objectives.\n        This is because the implementation is done in the applications that the product teams\n        control. This could be implementing input validation in an application or ensuring that\n        identity passes between microservices correctly. Even though the product team owns the\n        configuration, they can still inherit some capability from the middle\n        layer.Wherever you implement the control, the goal is the same: manage risk. A\n        range of risk management frameworks apply to specific industries, regions, or technologies.\n        Your main objective: highlight the risk based on likelihood and consequence. This is the\n          inherent risk. You can then define a control objective\n        that reduces either the likelihood, consequence, or both. Then, with a control in place, you\n        can see what the resulting risk is likely to be. This is the residual risk. Control objectives can apply to one or many workloads. The\n        following diagram shows a typical risk matrix. The likelihood is based on frequency of\n        previous occurrences and the consequence is based on the financial, reputational and time\n        cost of the event.\n\nFigure 2: Risk level likelihood matrix Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsShared responsibilityAWS account management and separationDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/governance.html", "title": "Governance - Security Pillar", "description": "Security governance, as a subset of the overall approach, is meant to support business objectives by defining policies and control objectives to help manage risk. Achieve risk management by following a layered approach to security control objectives\u2013each layer builds upon the previous one. Understanding the AWS Shared Responsibility Model is your foundational layer. This knowledge provides clarity on what you are responsible for on the customer side and what you inherit from AWS. A beneficial resource is", "language": "en-US"}}