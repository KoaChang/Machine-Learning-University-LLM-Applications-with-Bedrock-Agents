{"page_content": "Resources\n\nRelated best practices:\n\n\n\n\nSEC03-BP07 Analyze public and cross-account access\n\n\n\nSEC03-BP09 Share resources securely with a third party\n\n\n\nSEC05-BP01 Create network layers\n\n\n\nRelated documents:\n\n\n\nBucket owner granting cross-account permission to objects it does not\n          own\n\nHow to use Trust\n            Policies with IAM\n\nBuilding Data Perimeter on AWS\n\nHow to use\n            an external ID when granting a third party access to your AWS resources\n\nAWS services you can use with AWS Organizations\n\n\n          Establishing a data perimeter on AWS: Allow only trusted identities to access company data\n        \n\n\nRelated videos:\n\n\n\nGranular Access with\n            AWS Resource Access Manager\n\nSecuring your data perimeter\n            with VPC endpoints\n\n Establishing a data\n            perimeter on AWS\n\n\nRelated tools:\n\n\n\n\n          Data Perimeter Policy Examples\n        \n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSEC03-BP07 Analyze public and cross-account accessSEC03-BP09 Share resources securely with a third partyDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/sec_permissions_share_securely.html", "title": "SEC03-BP08 Share resources securely within your organization - Security Pillar", "description": "As the number of workloads grows, you might need to share access to resources in those workloads or provision the resources multiple times across multiple accounts. You might have constructs to compartmentalize your environment, such as having development, testing, and production environments. However, having separation constructs does not limit you from being able to share securely. By sharing components that overlap, you can reduce operational overhead and allow for a consistent experience without guessing what you might have missed while creating the same resource multiple times.", "language": "en-US"}}