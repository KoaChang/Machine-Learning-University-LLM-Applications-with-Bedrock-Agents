{"page_content": "SUS03-BP05 Use software patterns and architectures that best support data access and storage patterns - Sustainability PillarSUS03-BP05 Use software patterns and architectures that best support data access and storage patterns - Sustainability PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesSUS03-BP05 Use software patterns and architectures that best\n  support data access and storage patternsUnderstand how data is used within your workload, consumed by your users, transferred, and stored. \n    Use software patterns and architectures that best support data access and storage to minimize the compute, \n    networking, and storage resources required to support the workload.\nCommon anti-patterns:\n\n\n\n        You assume that all workloads have similar data storage and access patterns.\n      \n\n\n        You only use one tier of storage, assuming all workloads fit within that tier.\n      \n\n\n        You assume that data access patterns will stay consistent over time.\n      \n\n\n        Your architecture supports a potential high data access burst, which results in the resources remaining idle most of the time.\n      \n\nBenefits of establishing this best practice: Selecting and optimizing your architecture based on data access and storage patterns will help decrease development complexity and increase overall utilization. Understanding when to use global tables, data partitioning, and caching will help you decrease operational overhead and scale based on your workload needs.\n  \nLevel of risk exposed if this best practice\n      is not established: Medium\n  \nImplementation guidance\n\n      Use software and architecture patterns that aligns best to your data characteristics and access patterns. For example, use modern data architecture on AWS that allows you to use purpose-built services optimized for your unique analytics use cases. These architecture patterns allow for efficient data processing and reduce the resource usage. \n    \n\nImplementation steps\n\n\n\n\n          Analyze your data characteristics and access patterns to identify the correct configuration for your cloud resources. Key characteristics to consider include:\n        \n\n\n\nData type: structured, semi-structured, unstructured \n            \n\n\nData growth: bounded, unbounded\n            \n\n\nData durability: persistent, ephemeral, transient\n            \n\n\nAccess patterns reads or writes, update frequency, spiky, or consistent\n            \n\n\n\n          Use architecture patterns that best support data access and storage patterns.\n        \n\n\n \n              Let\u00e2\u20ac\u2122s Architect! Modern data architectures\n            \n\n\n              Databases on AWS: The Right Tool for the Right Job\n            \n\n\n\n          Use technologies that work natively with compressed data.\n        \n\n\n          Use purpose-built analytics services for data processing in your architecture.\n        \n\n\n          Use the database engine that best supports your dominant query pattern. Manage your database indexes to ensure efficient querying. For further details, see AWS Databases.\n        \n\n\n          Select network protocols that reduce the amount of network capacity consumed in your architecture.\n        \n\nResources\n\nRelated documents:\n\n\n\n\nAthena\n          Compression Support file formats\n\n\n\nCOPY\n          from columnar data formats with Amazon Redshift\n\n\n\nConverting\n          Your Input Record Format in Firehose\n\n\n\nFormat\n          Options for ETL Inputs and Outputs in AWS Glue\n\n\n\nImprove\n          query performance on Amazon Athena by Converting to Columnar\n          Formats\n\n\n\nLoading\n          compressed data files from Amazon S3 with Amazon Redshift\n\n\n\nMonitoring\n          DB load with Performance Insights on Amazon Aurora\n\n\n\nMonitoring\n          DB load with Performance Insights on Amazon RDS\n\n\n\n          Amazon S3 Intelligent-Tiering storage class\n        \n\n\nRelated videos:\n\n\n\n\n          Building modern data architectures on AWS\n\n Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsSUS03-BP04 Optimize impact on devices and\n  equipmentData managementDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/sustainability-pillar/sus_sus_software_a6.html", "title": "SUS03-BP05 Use software patterns and architectures that best support data access and storage patterns - Sustainability Pillar", "description": "Understand how data is used within your workload, consumed by your users, transferred, and stored. Use software patterns and architectures that best support data access and storage to minimize the compute, networking, and storage resources required to support the workload.", "language": "en-US"}}