{"page_content": "On architecture - AWS Well-Architected FrameworkOn architecture - AWS Well-Architected FrameworkAWSDocumentationAWS Well-ArchitectedFrameworkOn architecture\n      In on-premises environments, customers often have a central team\n      for technology architecture that acts as an overlay to other\n      product or feature teams to verify they are following best\n      practice. Technology architecture teams typically include a set of\n      roles such as: Technical Architect (infrastructure), Solutions\n      Architect (software), Data Architect, Networking Architect, and\n      Security Architect. Often these teams use\n      TOGAF\n      or the\n      Zachman\n        Framework as part of an enterprise architecture capability.\n     At AWS, we prefer to distribute capabilities into teams rather than having a centralized\n      team with that capability. There are risks when you choose to distribute decision making\n      authority, for example, verifying that teams are meeting internal standards. We mitigate these\n      risks in two ways. First, we have practices (ways of doing things,\n      process, standards, and accepted norms) that focus on allowing each team to have that\n      capability, and we put in place experts who verify that teams raise the bar on the standards\n      they need to meet. Second, we implement mechanisms that carry out\n      automated checks to verify standards are being met. \u201cGood intentions never work, you need good mechanisms to make anything happen\u201d \u2014 Jeff\n        Bezos. This means replacing a human's best efforts with mechanisms (often automated) that check for\n      compliance with rules or process. This distributed approach is supported by the Amazon leadership\n        principles, and establishes a culture across all roles that works\n          back from the customer. Working backward is a fundamental part of our innovation\n      process. We start with the customer and what they want, and let that define and guide our\n      efforts. Customer-obsessed teams build products in response to a customer need.  For architecture, this means that we expect every team to have the capability to create\n      architectures and to follow best practices. To help new teams gain these capabilities or\n      existing teams to raise their bar, we activate access to a virtual community of principal\n      engineers who can review their designs and help them understand what AWS best practices are.\n      The principal engineering community works to make best practices visible and accessible. One\n      way they do this, for example, is through lunchtime talks that focus on applying best\n      practices to real examples. These talks are recorded and can be used as part of onboarding\n      materials for new team members.   AWS best practices emerge from our experience running thousands of systems at internet\n      scale. We prefer to use data to define best practice, but we also use subject matter experts,\n      like principal engineers, to set them. As principal engineers see new best practices emerge,\n      they work as a community to verify that teams follow them. In time, these best practices are\n      formalized into our internal review processes, and also into mechanisms that enforce\n      compliance. The Well-Architected Framework is the customer-facing implementation of our internal\n      review process, where we have codified our principal engineering thinking across field roles,\n      like Solutions Architecture and internal engineering teams. The Well-Architected Framework is a\n      scalable mechanism that lets you take advantage of these learnings.  By following the approach of a principal engineering community with distributed ownership\n      of architecture, we believe that a Well-Architected enterprise architecture can emerge that is\n      driven by customer need. Technology leaders (such as a CTOs or development managers), carrying\n      out Well-Architected reviews across all your workloads will permit you to better understand the\n      risks in your technology portfolio. Using this approach, you can identify themes across teams\n      that your organization could address by mechanisms, training, or lunchtime talks where your\n      principal engineers can share their thinking on specific areas with multiple teams.  Javascript is disabled or is unavailable in your browser.To use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.Document ConventionsDefinitionsGeneral design principlesDid this page help you? - YesThanks for letting us know we're doing a good job!If you've got a moment, please tell us what we did right so we can do more of it.Did this page help you? - NoThanks for letting us know this page needs work. We're sorry we let you down.If you've got a moment, please tell us how we can make the documentation better.", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/framework/on-architecture.html", "title": "On architecture - AWS Well-Architected Framework", "description": "In on-premises environments, customers often have a central team for technology architecture that acts as an overlay to other product or feature teams to verify they are following best practice.", "language": "en-US"}}