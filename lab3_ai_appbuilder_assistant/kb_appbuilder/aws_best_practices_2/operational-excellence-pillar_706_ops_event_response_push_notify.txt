{"page_content": "OPS10-BP05 Define a customer communication plan for outages - Operational Excellence PillarOPS10-BP05 Define a customer communication plan for outages - Operational Excellence PillarAWSDocumentationAWS Well-ArchitectedAWS Well-Architected FrameworkImplementation guidanceResourcesOPS10-BP05 Define a customer communication plan for outages\n    Define and test a communication plan for system outages that you can rely on to keep your customers and stakeholders informed during outages. Communicate directly with your users both when the services they use are impacted and when services return to normal. \n  \nDesired outcome:\n\n\n\n        You have a communication plan for situations ranging from scheduled maintenance to large unexpected failures, including invocation of disaster recovery plans.\n      \n\n\n        In your communications, you provide clear and transparent information about systems issues to help customers avoid second guessing the performance of their systems.\n      \n\n\n        You use custom error messages and status pages to reduce the spike in help desk requests and keep users informed.\n      \n\n\n        The communication plan is regularly tested to verify that it will perform as intended when a real outage occurs.\n      \n\nCommon anti-patterns:\n\n\nA workload outage occurs but you have no communication plan. Users overwhelm your trouble ticket system with requests because they have no information on the outage.\n\nYou send an email notification to your users during an outage. It doesn\u2019t contain a timeline for restoration of service so users cannot plan around the outage.\n\nThere is a communication plan for outages but it has never been tested. An outage occurs and the communication plan fails because a critical step was missed that could have been caught in testing.\n\n\n        During an outage, you send a notification to users with too many technical details and information under your AWS NDA. \n      \n\nBenefits of establishing this best\n    practice:\n\n\n\n        Maintaining communication during outages ensures that customers are provided with visibility of progress on issues and estimated time to resolution.\n      \n\n\n        Developing a well-defined communications plan verifies that your customers and end users are well informed so they can take required additional steps to mitigate the impact of outages.\n      \n\n\n        With proper communications and increased awareness of planned and unplanned outages, you can improve customer satisfaction, limit unintended reactions, and drive customer retention.\n      \n\n\n        Timely and transparent system outage communication builds confidence and establishes trust needed to maintain relationships between you and your customers.\n      \n\n\n        A proven communication strategy during an outage or crisis reduces speculation and gossip that could hinder your ability to recover.\n      \n\nLevel of risk exposed if this best practice\n    is not established: Medium\n  \nImplementation guidance\n\n      Communication plans that keep your customers informed during outages are holistic and cover multiple interfaces including customer facing error pages, custom API error messages, system status banners, and health status pages. If your system includes registered users, you can communicate over messaging channels such as email, SMS or push notifications to send personalized message content to your customers. \n    \n\nCustomer communication tools\n\n\n      As a first line of defense, web and mobile applications should provide friendly and informative error messages during an outage as well as have the ability to redirect traffic to a status page. Amazon CloudFront is a fully managed content delivery network (CDN) that includes capabilities to define and serve custom error content. Custom error pages in CloudFront are a good first layer of customer messaging for component level outages. CloudFront can also simplify managing and activating a status page to intercept all requests during planned or unplanned outages.\n    \n\n      Custom API error messages can help detect and reduce impact when outages are isolated to discrete services. Amazon API Gateway allows you to configure custom responses for your REST APIs. This allows you to provide clear and meaningful messaging to API consumers when API Gateway is not able to reach backend services. Custom messages can also be used to support outage banner content and notifications when a particular system feature is degraded due to service tier outages. \n    \n\n      Direct messaging is the most personalized type of customer messaging. Amazon Pinpoint is a managed service for scalable multichannel communications. Amazon Pinpoint allows you to build campaigns that can broadcast messages widely across your impacted customer base over SMS, email, voice, push notifications, or custom channels you define. When you manage messaging with Amazon Pinpoint, message campaigns are well defined, testable, and can be intelligently applied to targeted customer segments. Once established, campaigns can be scheduled or started by events and they can easily be tested.\n    \n\nCustomer example\n\n\n      When the workload is impaired, AnyCompany Retail sends out an email notification to their users. The email describes what business functionality is impaired and provides a realistic estimate of when service will be restored. In addition, they have a status page that shows real-time information about the health of their workload. The communication plan is tested in a development environment twice per year to validate that it is effective.\n    \n\nImplementation steps\n\n\n\n\n          Determine the communication channels for your messaging strategy. Consider the architectural aspects of your application and determine the best strategy for delivering feedback to your customers. This could include one or more of the guidance strategies outlined including error and status pages, custom API error responses, or direct messaging.  \n        \n\n\n          Design status pages for your application. If you\u2019ve determined that status or custom error pages are suitable for your customers, you\u2019ll need to design your content and messaging for those pages. Error pages explain to users why an application is not available, when it may become available again, and what they can do in the meantime. If your application uses Amazon CloudFront you can serve custom error responses or use Lambda at Edge to translate errors and rewrite page content. CloudFront also makes it possible to swap destinations from your application content to a static Amazon S3 content origin containing your maintenance or outage status page . \n        \n\n\n          Design the correct set of API error statuses for your service. Error messages produced by API Gateway when it can\u2019t reach backend services, as well as service tier exceptions, may not contain friendly messages suitable for display to end users. Without having to make code changes to your backend services, you can configure API Gateway custom error responses to map HTTP response codes to curated API error messages. \n        \n\n\n          Design messaging from a business perspective so that it is relevant to end users for your system and does not contain technical details. Consider your audience and align your messaging. For example, you may steer internal users towards a workaround or manual process that leverages alternate systems. External users may be asked to wait until the system is restored, or subscribe to updates to receive a notification once the system is restored. Define approved messaging for multiple scenarios including unexpected outages, planned maintenance, and partial system failures where a particular feature may be degraded or unavailable. \n        \n\n\n          Templatize and automate your customer messaging. Once you have established your message content, you can use Amazon Pinpoint or other tools to automate your messaging campaign. With Amazon Pinpoint you can create customer target segments for specific affected users and transform messages into templates. Review the Amazon Pinpoint tutorial to get an understanding of how-to setup a messaging campaign. \n        \n\n\n          Avoiding tightly coupling messaging capabilities to your customer facing system. Your messaging strategy should not have hard dependencies on system data stores or services to verify that you can successfully send messages when you experience outages. Consider building the ability to send messages from more than one Availability Zone or Region for messaging availability. If you are using AWS services to send messages, leverage data plane operations over control plane operation to invoke your messaging. \n        \n\n\nLevel of effort for the implementation plan: High. Developing a communication plan, and the mechanisms to send it, can require a significant effort.\n    \nResources\n\nRelated best practices:\n\n\n\n\nOPS07-BP03 Use runbooks to perform procedures - Your communication plan should have a runbook associated with it so that your personnel know how to respond.\n        \n\n\nOPS11-BP02 Perform post-incident analysis - After an outage, conduct post-incident analysis to identify mechanisms to prevent another outage.\n        \n\n\nRelated documents:\n\n\n\n\n          Error Handling Patterns in Amazon API Gateway and AWS Lambda\n\n\n          Amazon API Gateway responses\n        \n\n\nRelated examples:\n\n\n\nAWS Health Dashboard\n        \n\n\n          Summary of the AWS Service Event in the Northern Virginia (US-EAST-1) Region\n        \n\n\nRelated services:\n\n\n\nAWS Support\n\nAWS Customer Agreement\n        \n\n\n          Amazon CloudFront\n        \n\n\n          Amazon API Gateway\n        \n\n\n          Amazon Pinpoint\n        \n\n\n          Amazon S3", "metadata": {"source": "https://docs.aws.amazon.com/wellarchitected/latest/operational-excellence-pillar/ops_event_response_push_notify.html", "title": "OPS10-BP05 Define a customer communication plan for outages - Operational Excellence Pillar", "description": "Define and test a communication plan for system outages that you can rely on to keep your customers and stakeholders informed during outages. Communicate directly with your users both when the services they use are impacted and when services return to normal.", "language": "en-US"}}